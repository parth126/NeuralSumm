{
    "abstract_sentences": {
        "1": "In dependency parsing, jackknifing taggers is indiscriminately used as a simple adaptation strategy.", 
        "2": "Here, we empirically evaluate when and how (not) to use jackknifing in parsing.", 
        "3": "On 26 languages, we reveal a preference that conflicts with, and surpasses the ubiquitous ten-folding.", 
        "4": "We show no clear benefits of tagging the training data in cross-lingual parsing."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 679\u2013684 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-2107  1 Introduction  Dependency parsers are trained over manually annotated treebank data.", 
        "2": "By contrast, when applied in the real world, they parse over sequences of predicted parts of speech.", 
        "3": "As POS tagging accuracy drops due to domain change, the parsing quality declines proportionally.", 
        "4": "Bringing these two POS tag sources closer together thus makes for a reasonable adaptation strategy.", 
        "5": "Arguably the simplest of such adaptations is nfold jackknifing.", 
        "6": "In it, a treebank is divided into n equal parts, and the n-th part is POS-tagged with a tagger trained on the remainder.", 
        "7": "The procedure is repeated until all n parts are assigned with predicted POS tags.", 
        "8": "A parser is then trained over the thus altered treebank, under the assumption that its POS features will now more closely resemble those of the input data.", 
        "9": "Jackknifing is simplistic as it i) has a very limited adaptation range for n \u2208 N+, and it ii) does not in any way take the input data into account, other than through a vague assumption of an undefined amount of tagging noise in the input.", 
        "10": "As such, it exhibits very mixed results.", 
        "11": "Still, the method is now ubiquitous in the parsing literature.", 
        "12": "In Figure 1, we survey the ACL Anthology1 for POS jackknifing.", 
        "13": "We uncover that \u223c80% of the 70\n1http://aclweb.org/anthology/\nparsing papers we retrieved make use of ten-fold jackknifing.", 
        "14": "This choice spans across the various languages and domains parsed in these papers, and is even motivated by simply \u201cfollowing the traditions in literature\u201d.2\nOur contributions.", 
        "15": "We evaluate jackknifing to establish whether its use is warranted in dependency parsing.", 
        "16": "Controlling for tagging quality in training and testing, we experiment with monolingual and delexicalized cross-lingual parsers over 26 languages, showing that:\ni) Indiscriminate use of ten-fold jackknifing results in sub-optimal parsing.", 
        "17": "ii) Tagging the training data does not yield clear benefits in realistic cross-lingual parsing.", 
        "18": "iii) Our jackknifing extension improves parsing through finer-grained adaptation.", 
        "19": "2 Method  Jackknifing generally refers to a leave-one-out procedure for reducing bias in parameter estimation from an unbiased sample (Quenouille, 1956; Tukey, 1958).", 
        "20": "More recently, in machine learning the term is used synonymously with \u201ccross-\n2Incidentally, using ten-folds with the WSJ data yields roughly the same train- and test-set tagging accuracy, and seems to be where the choice originated.", 
        "21": "679\nvalidation\u201d for estimation of predictive model performance measures.", 
        "22": "In NLP, jackknifing has commonly been used to describe a procedure by which the training input is adjusted to correspond more closely to the expected test input, and it is in this latter sense that we use the term here.", 
        "23": "In particular, in parsing research, the n-fold jackknifing proceeds as follows.", 
        "24": "The treebank is first partitioned into n non-overlapping subsets of equal size.", 
        "25": "Then, iteratively, each part acts as a test subset and is tagged using a model induced by the remaining n\u22121 parts, the training subset, until the entire treebank is tagged.", 
        "26": "We want to control for POS tagging accuracy through the jackknifing method.", 
        "27": "To do this, we train a tagger on increasing sized subsets of the training set.", 
        "28": "In fold terminology, this corresponds to dividing the training set into equal parts of size 1 n , training on n\u22121 n ths of the training set and testing on the remaining 1n th.", 
        "29": "However, this constrains the size of the training subset to be larger than half the original data, and thus concentrates our study on models that use almost all the data, since the nonlinear curve f(n) = n\u22121n becomes very flat very fast.", 
        "30": "Thus, varying fold numbers reveals very little variation in terms of POS tagging accuracy in the lower accuracy range.", 
        "31": "Linear extension.", 
        "32": "We now propose a simple extension of the jackknifing paradigm to study parser accuracy given a percentage p of the training set: linear jackknifing.", 
        "33": "Let p \u2208 (0,1) be the percentage of the randomly shuffled training set D used to induce a model to tag some remaining number of instances.", 
        "34": "A training subset of this size allows a test subset of size at most \u2308\u2223D\u2223 \u22c5 (1 \u2212 p)\u2309.", 
        "35": "Given a test subset to tag, we can induce a model from a random subset of the remaining examples of size approximately p \u22c5 \u2223D\u2223 to become our training subset.", 
        "36": "We randomize the choice of examples in the training subset to avoid introducing bias.", 
        "37": "In order to tag all of D, the minimum number of models we need to generate is\u23081/(1 \u2212 p)\u2309.", 
        "38": "We thus separate D into test subsets f1, .", 
        "39": ".", 
        "40": ".", 
        "41": ", f\u2308 1/(1\u2212p)\u2309 each of size approximately\u2308\u2223D\u2223 \u22c5 (1 \u2212 p)\u2309.", 
        "42": "For each fi, we randomly sample a training subset of size approximately \u2308p \u22c5 \u2223D\u2223\u2309 from the remainder of D, induce a model and then tag fi.", 
        "43": "This results in the original full training set tagged with an accuracy corresponding to the performance of a randomly selected tagger trained on approximately p \u22c5 \u2223D\u2223 of the examples.", 
        "44": "Intrinsic evaluation.", 
        "45": "For increasing values of p, at 5% increments, we carried out linear jackknifing on 26 languages.", 
        "46": "For each p, we averaged the performance of the induced taggers on the respective gold standards.", 
        "47": "Figure 2 illustrates the difference in informativeness of the two approaches, where each tagging accuracy score is averaged across the 26 languages.", 
        "48": "We see that with n-fold jackknifing, tagging accuracy is constrained to between approximately 92% and 95%, whereas linear jackknifing explores accuracies as low as approximately 86%.", 
        "49": "Moreover, the confidence intervals are consistent across the p, demonstrating unbiased tagging models generated on less data (lower p).", 
        "50": "We now show that these smaller levels of p are essential for good parser performance in some cases of jackknifing.", 
        "51": "3 Experiments  Our experiment aims at judging the adequacy of jackknifing in dependency parsing.", 
        "52": "First, we outline the experiment setup, where we conduct two sets of experiments:\ni) monolingual, where lexicalized parsers are trained on treebanks for their respective languages, and ii) cross-lingual, that features SINGLE-best and MULTI-source delexicalized parsers.", 
        "53": "Tagging sources.", 
        "54": "By jackknifing we explore how the mismatch between training and test POS affects parsing.", 
        "55": "Our setup thus critically relies on the sources of tags.", 
        "56": "We tag our test sets using:\ni) PRED, the monolingual taggers, and ii) PROJ, the low-resource taggers by Agic\u0301 et al.", 
        "57": "(2016), based on annotation projection.", 
        "58": "We do not experiment with gold POS tags in the test sets.", 
        "59": "Instead, we only focus on realistic parsing over predicted tags.", 
        "60": "The tags in our training sets can be GOLD, PROJ, or they can be predicted through n-fold or linear jackknifing.", 
        "61": "In n-fold jackknifing, we experiment with n \u2208{2,3, ..,20}, while for the linear extension we set p \u2208 {5,10, ...,95}.", 
        "62": "We report the average parsing scores over 5 runs for each n and p so as to mitigate the effects of random shuffling in the two jackknifing procedures.", 
        "63": "In finding the optimal values of the parameters nmax and pmax, we report the highest values in case of ties.", 
        "64": "For example, if n = 5 and n = 10 both yield the same maximum UAS, we set nmax = 10.", 
        "65": "We emphasize the importance of realistic set-\ntings especially in cross-lingual parsing.", 
        "66": "Thus, we commit to using PROJ taggers with an outlook on true low-resource languages.", 
        "67": "Data.", 
        "68": "We use the Universal Dependencies (UD) treebanks version 1.2 (Nivre et al., 2016).3 As the projection-based taggers are trained on the WTC dataset by Agic\u0301 et al.", 
        "69": "(2016), we intersect the list of WTC languages with the UD list for a total of 26 languages.", 
        "70": "Tagging and parsing.", 
        "71": "For POS tagging, we use the TNT tagger by Brants (2000).", 
        "72": "The PRED taggers score 94.1\u00b11.1%, while the low-resource PROJ taggers are on average 71.7\u00b15.7% accurate.", 
        "73": "We experiment with two parsers.", 
        "74": "Bohnet\u2019s (2010)\n3http://universaldependencies.org/\nsecond-order graph-based system MATE4 is the primary.", 
        "75": "Further, we verify all parsing results by using a transition-based parser YARA5 with dynamic oracles (Rasooli and Tetreault, 2015).", 
        "76": "The following CoNLL 2009 features are used for training the parsers:6 ID, FORM (in monolingual parsing only), POS, and HEAD.", 
        "77": "Since ours is not a benchmarking effort, we apply all systems with their default settings.", 
        "78": "3.1 Results  In monolingual parsing over PRED tags (Table 1), we achieve an identical average UAS with lin-\n4https://code.google.com/archive/p/ mate-tools/\n5https://github.com/yahoo/YaraParser 6https://ufal.mff.cuni.cz/\nconll2009-st/\near and n-fold jackknifing.", 
        "79": "Our adaptations surpass training with GOLD data by +1.1 UAS.", 
        "80": "Linear jackknifing improves over GOLD training by +8.1 UAS when parsing over low-resource PROJ tags.", 
        "81": "There, we top GOLD training by n-fold jackknifing as well, but it trails the linear variant by -3.9 UAS.", 
        "82": "In the low-resource PROJ setup, PROJtrained parsers are dominant.", 
        "83": "They score +6.8 UAS over linear, +10.7 UAS over n-folding, and +14.8 UAS over GOLD training.", 
        "84": "Figure 3 plots the relation between the sample size p in linear jackknifing and the resulting UAS in parsing, split for PRED and PROJ test-set taggings.", 
        "85": "Parsing over PRED tags, the UAS generally increases with p, but we note that this increase is rather small: over 26 languages, moving p from 5% to 95% yields only +0.7 UAS on average.", 
        "86": "By contrast, adapting to the lower-quality PROJ tags sees a larger +5 UAS benefit from decreasing p all the way to 5%, which is well outside the n-fold range, as indicated for n \u2208 {2, ...,20} by the dotted lines in the figure.", 
        "87": "Our cross-lingual parsing experiment (Table 2) contrasts two options: we either tag (PROJ\u219d) or do not tag (GOLD\u219d) the parser training data.", 
        "88": "To reflect realistic low-resource parsing, the test data is tagged with PROJ taggers only.", 
        "89": "On average, the unadapted parsers are slightly better (UAS: +1.1 MULTI, +0.1 SINGLE).", 
        "90": "However, they are almost evenly split with the adapted ones in terms of offering the best performance for 12-14 out of the 26 test languages each.", 
        "91": "These results suggest, at least for simplicity, a preference for not tagging the treebanks.", 
        "92": "4 Discussion  Linear or n-fold?", 
        "93": "In resource-rich PRED parsing, the two jackknifing methods are evenly split, with identical average UAS score and an overlap\non 13 languages.", 
        "94": "In low-resource PROJ parsing, nfolding falls far behind as the constraint for n \u2265 2 prevents it from adapting accordingly.", 
        "95": "The median pmax in PRED and PROJ are 75% and 5%.", 
        "96": "The first one roughly corresponds to 4-fold jackknifing, while the second one is far below the two-fold range.", 
        "97": "The median nmax are 11 and 2, and we note that nmax is rarely \u223c10 in Table 1.", 
        "98": "If we simply use ten-fold jackknifing for PRED tags, we manage to match the pmax scores for only 9 of 26 languages, and we score -0.2 UAS on average.", 
        "99": "If using n = 10 with PROJ tags, the disconnect is much more substantial, and we are unable to reach pmax (-4.6 UAS).", 
        "100": "The GOLD training data is never the best choice in our monolingual parsing experiment, regardless of whether the test tags are PRED or PROJ.", 
        "101": "This result in itself justifies the usage of jackknifing as adaptation for the monolingual setting, provided that it is not indiscriminate.", 
        "102": "Finding p\u0302max.", 
        "103": "For choosing the optimal linear jackknifing in real-world parsing, we note that pmax closely correlates with test set tagging accuracy (Spearman\u2019s \u03c1 = 0.76), and negatively with treebank size (\u03c1 = \u22120.42, for \u2223D\u2223 \u2264 10k sentences).", 
        "104": "Thus, to adapt via linear jackknifing, we must i) approximate the expected input data tagging accuracy, while at the same time ii) accounting for the fact that the accuracy associated with any p depends on treebank size as well.", 
        "105": "In other words, given two treebanks \u2223D1\u2223 < \u2223D2\u2223, we would typically need p1 > p2 with the goal of matching the same test-set accuracy.", 
        "106": "The other parser.", 
        "107": "Replacing the MATE parser with the transition-based YARA does not change the outcome of our monolingual parsing experiment, save for the average 0.58\u20131.65 drop in UAS.", 
        "108": "On the other hand, in cross-lingual parsing, YARA highlights the benefits of not tagging the training data, as the GOLD\u219dPROJ parsers are there the best choice for parsing 17/26 languages.", 
        "109": "On average, we see +2.1 UAS for MULTI, and +0.7 for SINGLE over PROJ\u219dPROJ.", 
        "110": "This is especially worth noting since large-scale parsing generally favors transition-based systems.", 
        "111": "GOLD test tags.", 
        "112": "Thus far, we have shown the need for more careful jackknifing in parser training with respect to the expected tagging quality at parse time.", 
        "113": "Fixing n = 10 was suboptimal in parsing over the fully supervised PRED tags, while\nn = 2,10 were way below the threshold in lowresource parsing over our cross-lingual PROJ tags.", 
        "114": "We have purposely excluded GOLD test tags from the discussion so far.", 
        "115": "Still, while parsing over GOLD POS input does not hold much significance for real-world applications, it is worth noting how jackknifing performs in the upper limit: trying to reach the accuracy of parsers trained and tested on GOLD tags.", 
        "116": "In that particular setup, we observe the maximum UAS of 83.8 for median nmax = 12 and pmax = 80%.", 
        "117": "The respective modal values are n = 20 and p = 95%, meaning that for most languages, we come closest to GOLD\u219dGOLD by maximizing the tagging accuracy.", 
        "118": "The overall score amounts to -0.7 UAS below the upper bound.", 
        "119": "5 Related work  Jackknifing itself is for the most part incidental to the work that employs it.", 
        "120": "Here, we mention a few notable exceptions.", 
        "121": "Che et al.", 
        "122": "(2012) compare jackknifing to using gold tags in parsing Chinese for constituents and dependencies, where they observe mixed results: improvement with one parser, and decrease with the other.", 
        "123": "Seeker and Kuhn (2013) briefly touch upon the importance of jackknifing in bridging the gap between training and test data, and experiment with 5- and 10-folds.", 
        "124": "Honnibal and Johnson (2015) passingly contrast jackknifing to joint learning, giving precedence to the latter for simplicity.", 
        "125": "Finally, Kong et al.", 
        "126": "(2015) follow Zhu et al.", 
        "127": "(2013) in ten-folding for Chinese and English, citing 2.0% and 0.4% improvements.", 
        "128": "Incidentally, jackknifing parsers then hurts their performance in tree conversions.", 
        "129": "6 Conclusions  The parsing literature is riddled with indiscriminate use of n-fold part-of-speech tagger jackknifing as makeshift domain adaptation.", 
        "130": "In this paper we have proposed a careful empirical treatment of jackknifing in dependency parsing, far surpassing ten-folding via fine-grained control over the data adjustment.", 
        "131": "Acknowledgements.", 
        "132": "We thank Barbara Plank and Djame\u0301 Seddah for their valuable comments on an earlier version of this paper.", 
        "133": "We appreciate the incisive feedback by the anonymous reviewers.", 
        "134": "Finally, we acknowledge the NVIDIA Corporation for supporting our research."
    }, 
    "document_id": "P17-2107.pdf.json"
}
