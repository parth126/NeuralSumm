{
    "abstract_sentences": {
        "1": "We introduce a simple and effective method to learn discourse-specific word embeddings (DSWE) for implicit discourse relation recognition.", 
        "2": "Specifically, DSWE is learned by performing connective classification on massive explicit discourse data, and capable of capturing discourse relationships between words.", 
        "3": "On the PDTB data set, using DSWE as features achieves significant improvements over baselines."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 269\u2013274 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-2042  1 Introduction  Recognizing discourse relations (e.g., Contrast, Conjunction) between two sentences is a crucial subtask of discourse structure analysis.", 
        "2": "These relations can benefit many downstream NLP tasks, including question answering, machine translation and so on.", 
        "3": "A discourse relation instance is usually defined as a discourse connective (e.g., but, and) taking two arguments (e.g., clause, sentence).", 
        "4": "For explicit discourse relation recognition, using only connectives as features achieves more than 93% in accuracy (Pitler and Nenkova, 2009).", 
        "5": "Without obvious clues like connectives, implicit discourse relation recognition is still challenging.", 
        "6": "The earlier researches usually develop linguistically informed features and use supervised learning method to perform the task (Pitler et al., 2009; Lin et al., 2009; Louis et al., 2010; Rutherford and Xue, 2014; Braud and Denis, 2015).", 
        "7": "Among these features, word pairs occurring in argument pairs are considered as important features, since they can partially catch discourse relationships between two arguments.", 
        "8": "For example, synonym word pairs like (good, great) may indicate a Conjunction relation, while antonym word pairs like (good, bad)\n\u2217Corresponding author.", 
        "9": "may mean a Contrast relation.", 
        "10": "However, classifiers based on word pairs in previous work do not work well because of the data sparsity problem.", 
        "11": "To address this problem, recent researches use word embeddings (aka distributed representations) instead of words as input features, and design various neural networks to capture discourse relationships between arguments (Zhang et al., 2015; Ji and Eisenstein, 2015; Qin et al., 2016; Chen et al., 2016; Liu and Li, 2016).", 
        "12": "While these researches achieve promising results, they are all based on pre-trained word embeddings ignoring discourse information (e.g., good, great, and bad are often mapped into close vectors).", 
        "13": "Intuitively, using word embeddings sensitive to discourse relations would further boost the performance.", 
        "14": "In this paper, we propose to learn discoursespecific word embeddings (DSWE) from explicit data for implicit discourse relation recognition.", 
        "15": "Our method is inspired by the observation that synonym (antonym) word pairs tend to appear around the discourse connective and (but).", 
        "16": "Other connectives can also provide some discourse clues.", 
        "17": "We expect to encode these discourse clues into the distributed representations of words, to capture discourse relationships between them.", 
        "18": "To this end, we use a simple neural network to perform connective classification on massive explicit data.", 
        "19": "Explicit data can be considered to be automatically labeled by connectives.", 
        "20": "While they cannot be directly used as training data for implicit discourse relation recognition and contain some noise, they are effective enough to provide weakly supervised signals for training the discourse-specific word embeddings.", 
        "21": "We apply DSWE as features in a supervised neural network for implicit discourse relations recognition.", 
        "22": "On the PDTB (Prasad et al., 2008), using DSWE yields significantly better performance than using off-the-shelf word embeddings,\n269\nor recent systems incorporating explicit data.", 
        "23": "We detail our method in Section 2 and evaluate it in Section 3.", 
        "24": "Conclusions are given in Section 4.", 
        "25": "Our learned DSWE is publicly available at here.", 
        "26": "2 Discourse-specific Word Embeddings  In this section, we first introduce the neural network model for learning discourse-specific word embeddings (DSWE), and then the way of collecting explicit discourse data for training.", 
        "27": "Finally, we highlight the differences between our work and the related researches.", 
        "28": "We induce DSWE based on explicit data by performing connective classification.", 
        "29": "The connective classification task predicts which discourse connective is suitable for combining two given arguments.", 
        "30": "It is essentially similar to implicit relation recognition, just with different output labels.", 
        "31": "Therefore, any existing neural network model for implicit relation recognition can be easily used for connective classification.", 
        "32": "We adapt the model in (Wu et al., 2016) for connective classification because it is simple enough to enable us to train on massive data.", 
        "33": "As illustrated in Figure 1, an argument is first represented as the average of distributed representations of words in it.", 
        "34": "On the concatenation of two arguments, multiple non-linear hidden layers are then used to capture the interactions between them.", 
        "35": "Finally, a softmax layer is stacked for classification.", 
        "36": "We combine the crossentropy error and regularization error multiplied\nby the coefficient \u03bb as the objective function.", 
        "37": "During training, we initialize distributed representations of all words randomly and tune them to minimize the objective function.", 
        "38": "The finally obtained distributed representations of all words are our discourse-specific word embeddings.", 
        "39": "Collecting explicit discourse data includes two steps: 1) distinguish whether a connective occurring reflects a discourse relation.", 
        "40": "For example, the connective and can either function as a discourse connective to join two Conjunction arguments, or be just used to link two nouns in a phrase.", 
        "41": "2) identify the positions of two arguments.", 
        "42": "According to (Prasad et al., 2008), arg2 is defined as the argument following a connective, however, arg1 can be located within the same sentence as the connective, in some previous or following sentence.", 
        "43": "Lin et al.", 
        "44": "(2014) show that the accuracy of distinguishing connectives is more than 97%, while identifying arguments is below than 80%.", 
        "45": "Therefore, we use the existing toolkit1 to find discourse connectives, and just collect explicit instances using patterns like [arg1 because arg2], where two arguments are in the same sentence, to decrease noise.", 
        "46": "We believe these simple patterns are enough when using a very large corpus.", 
        "47": "Note that there are 100 discourse connectives in the PDTB, we ignore four parallel connectives (e.g., if...then) for simplicity.", 
        "48": "The way of collecting explicit data can be easily generalized to other languages, one just need to train a classifier to find discourse connectives following (Lin et al., 2014).", 
        "49": "Some aspects of this work are similar to (Biran and McKeown, 2013; Braud and Denis, 2016).", 
        "50": "Based on massive explicit instances, they first build a word-connective co-occurrence frequency matrix2, and then weight these raw frequencies.", 
        "51": "In this way, they represent words in the space of connectives to directly encode their discourse function.", 
        "52": "The major limitation of their approach is that the dimension of the word representations must be less than or equal to the number of connectives.", 
        "53": "By comparison, we learn DSWE by predicting connectives conditioning on arguments, which yields better performance and has no such dimension limitation.", 
        "54": "Some researchers use explicit data as additional training data via multi-task learning (Lan et al., 2013; Liu et al., 2016) or data selection (Rutherford and Xue, 2015; Wu et al., 2016).", 
        "55": "1https://github.com/linziheng/pdtb-parser.", 
        "56": "2Biran and McKeown (2013) calculate co-occurrences be-\ntween word pairs and connectives.", 
        "57": "In both cases, explicit data are directly used to estimate the parameters of implicit relation classifiers.", 
        "58": "As a result, it is hard for them to incorporate massive explicit data because of the noise problem.", 
        "59": "By contrast, we leverage massive explicit data by learning word embeddings from them.", 
        "60": "3 Experiments    3.1 Data and Settings  We collect explicit data from the Xin and Ltw parts of the English Gigaword Corpus (3rd edition), and get about 4.92M explicit instances.", 
        "61": "We randomly sample 20,000 instances as the development set and the others as the training set for DSWE.", 
        "62": "After discarding words occurring less than 5 times, the size of the vocabulary is 185,048.", 
        "63": "For the connective classification task, we obtain an accuracy of about 53% on the development set.", 
        "64": "We adapt the neural network model described in Figure 1 as the classifier for implicit discourse relation recognition (CDRR).", 
        "65": "Specifically, we concatenate some surface features with the last hidden layer as the input of the softmax layer to predict discourse relations.", 
        "66": "We choose 500 Production rule (Lin et al., 2009) and 500 Brown Cluster Pair (Rutherford and Xue, 2014) features based on mutual information using the toolkit provided by Peng et al.", 
        "67": "(2005).", 
        "68": "Our learned DSWE is used as the pre-trained word embeddings for CDRR, and fixed during training.", 
        "69": "Hyper-parameters for training DSWE and CDRR are selected based on their corresponding development set, and listed in Table 1.", 
        "70": "Following Liu et al.", 
        "71": "(2016), we perform a 4- way classification on the four top-level relations in the PDTB: Temporal (Temp), Comparison (Comp), Contingency (Cont) and Expansion (Expa).", 
        "72": "The PDTB is split into the training set (Sections 2-20), development set (Sections 0-1) and test set (Sections 21-22).", 
        "73": "Table 2 lists the statistics of these data sets.", 
        "74": "Due to the small and uneven test data set, we run our method 10 times with different random seeds (therefore different initial parameters), and report the results (of a run) which are closest to the average results.", 
        "75": "Finally, we use both Accuracy and Macro F1 (macroaveraged F1) to evaluate our method.", 
        "76": "3.2 Results  We compare our learned discourse-specific word embeddings (DSWE) with two publicly available embeddings3:\n1) GloVe4: trained on 6B words from Wikipedia 2014 and Gigaword 5 using the count based model in (Pennington et al., 2014), with a vocabulary of 400K and a dimensionality of 300.", 
        "77": "2) word2vec5: trained on 100B words from Google News using the CBOW model in (Mikolov et al., 2013), with a vocabulary of 3M and a dimensionality of 300.", 
        "78": "Results in Table 3 show that using DSWE gains significant improvements (one-tailed t-test with p<0.05) over using GloVe or word2vec, on both Accuracy and Macro F1.", 
        "79": "Furthermore, using DSWE achieves better performance across all relations on the F1 score, especially for minority relations (Temp, Comp and Cont).", 
        "80": "Overall, our DSWE can effectively incorporate discourse infor-\n3The reasons for using those publicly available word embeddings are: 1) They are both trained on massive data.", 
        "81": "2) It will be convenient for other people to reproduce our experiments.", 
        "82": "3) Using GloVe or word2vec word embeddings trained on the same corpus as DSWE achieves worse performance than using these two public ones.", 
        "83": "4http://nlp.stanford.edu/projects/glove/glove.6B.zip 5https://code.google.com/archive/p/word2vec/GoogleNews-\nvectors-negative300.bin.gz\nmation in explicit data, and thus benefits implicit discourse relation recognition.", 
        "84": "We also compare our method with three recent systems which also use explicit data to boost the performance:\n1) R&X2015: Rutherford and Xue (2015) construct weakly labeled data from explicit data based on the chosen connectives, to enlarge the training data directly.", 
        "85": "2) B&D2016: Braud and Denis (2016) learn connective-based word representations and build a logistic regression model based on them6.", 
        "86": "3) Liu2016: Liu et al.", 
        "87": "(2016) use a multi-task neural network to incorporate several discourserelated data, including explicit data and the RSTDT corpus (William and Thompson, 1988).", 
        "88": "Results in Table 4 show the superiority of our method.", 
        "89": "Although Liu2016 performs slightly better on Macro F1, it uses the additional labeled RST-DT corpus.", 
        "90": "For R&X2015 and Liu2016, they\n6We carefully reproduce their model since they adopt a different setting in preprocessing the PDTB.", 
        "91": "both incorporate relatively small explicit data because of the noise problem, for example, 20,000 and 40,000 instances respectively.", 
        "92": "By contrast, our method benefits from about 4.9M explicit instances.", 
        "93": "While B&D2016 uses massive explicit data, it is limited by the fact that the maximum dimension of word representations is restricted to the number of connectives, for example 96 in their work.", 
        "94": "Overall, our method can effectively utilize massive explicit data, and thus is more powerful than baselines.", 
        "95": "To give an intuition of what information is encoded into the learned DSWE, we list in Table 5 the top 15 closest words of not and good, according to the cosine similarity.", 
        "96": "We can find that, in DSWE, words similar to not to some extent have negative meanings.", 
        "97": "And since declined is similar to not, a classifier may easily identify the implicit instance [A network spokesman would not comment.", 
        "98": "ABC Sports officials declined to be interviewed.]", 
        "99": "as the Conjunction relation.", 
        "100": "For good in DSWE, the similar words no longer include words like bad.", 
        "101": "Furthermore, the similar score between good and great is 0.54 while the score between good and bad is just 0.33, which may make a classifier easier to distinguish word pairs (good, great) and (good, bad), and thus is helpful for predicting the Conjunction relation.", 
        "102": "This qualitative analysis demonstrates the ability of our DSWE to capture the discourse relationships between words.", 
        "103": "Finally, we conduct experiments to investigate the impact of connectives used in training DSWE on our results.", 
        "104": "Specifically, we use the explicit discourse instances with the top 10, 20, 30, 60 most frequent or all connectives to learn DSWE, accounting for 78.9%, 91.9%, 95.8%, 99.4% or 100% of total instances, respectively.", 
        "105": "The top 10 most frequent connectives are: and, but, also, while, as, when, after, if, however and because, which cover all four top-level relations defined in the PDTB.", 
        "106": "As illustrated in Figure 2, with only the top 10 connectives, the learned DSWE achieves better performance than the common word embeddings.", 
        "107": "We observe a significant improvement when using top 20 connectives, almost the best performance with top 30 connectives, and no further substantial improvement with more connectives.", 
        "108": "These results indicate that we can use only top n most frequent connectives to collect explicit discourse data for DSWE, which is very convenient for most languages.", 
        "109": "4 Conclusion  In this paper, we learn discourse-specific word embeddings from massive explicit data for implicit discourse relation recognition.", 
        "110": "Experiments on the PDTB show that using the learned word embeddings as features can significantly boost the performance.", 
        "111": "We also show that our method can use explicit data more effectively than previous work.", 
        "112": "Since most of neural network models for implicit discourse relation recognition use pretrained word embeddings as input, we hope that our learned word embeddings would benefit them.", 
        "113": "Acknowledgments  We would like to thank all the reviewers for their constructive and helpful suggestions on this paper.", 
        "114": "This work is partially supported by the Natural Science Foundation of China (Grant Nos.", 
        "115": "61573294, 61672440, 61075058), the Ph.D. Programs Foundation of Ministry of Education of China (Grant No.", 
        "116": "20130121110040), the Foundation of the State Language Commission of China (Grant No.", 
        "117": "WT135-10), the Natural Science Foundation of Fujian Province (Grant No.", 
        "118": "2016J05161)."
    }, 
    "document_id": "P17-2042.pdf.json"
}
