{
    "abstract_sentences": {
        "1": "We introduce a new deep learning model for semantic role labeling (SRL) that significantly improves the state of the art, along with detailed analyses to reveal its strengths and limitations.", 
        "2": "We use a deep highway BiLSTM architecture with constrained decoding, while observing a number of recent best practices for initialization and regularization.", 
        "3": "Our 8-layer ensemble model achieves 83.2 F1 on the CoNLL 2005 test set and 83.4 F1 on CoNLL 2012, roughly a 10% relative error reduction over the previous state of the art.", 
        "4": "Extensive empirical analysis of these gains show that (1) deep models excel at recovering long-distance dependencies but can still make surprisingly obvious errors, and (2) that there is still room for syntactic parsers to improve these results."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 473\u2013483 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1044  1 Introduction  Semantic role labeling (SRL) systems aim to recover the predicate-argument structure of a sentence, to determine essentially \u201cwho did what to whom\u201d, \u201cwhen\u201d, and \u201cwhere.\u201d Recently breakthroughs involving end-to-end deep models for SRL without syntactic input (Zhou and Xu, 2015; Marcheggiani et al., 2017) seem to overturn the long-held belief that syntactic parsing is a prerequisite for this task (Punyakanok et al., 2008).", 
        "2": "In this paper, we show that this result can be pushed further using deep highway bidirectional LSTMs with constrained decoding, again significantly moving the state of the art (another 2 points on CoNLL 2005).", 
        "3": "We also present a careful empirical analysis to determine what works well and what might be done to progress even further.", 
        "4": "Our model combines a number of best practices in the recent deep learning literature.", 
        "5": "Fol-\nlowing Zhou and Xu (2015), we treat SRL as a BIO tagging problem and use deep bidirectional LSTMs.", 
        "6": "However, we differ by (1) simplifying the input and output layers, (2) introducing highway connections (Srivastava et al., 2015; Zhang et al., 2016), (3) using recurrent dropout (Gal and Ghahramani, 2016), (4) decoding with BIOconstraints, and (5) ensembling with a product of experts.", 
        "7": "Our model gives a 10% relative error reduction over previous state of the art on the test sets of CoNLL 2005 and 2012.", 
        "8": "We also report performance with predicted predicates to encourage future exploration of end-to-end SRL systems.", 
        "9": "We present detailed error analyses to better understand the performance gains, including (1) design choices on architecture, initialization, and regularization that have a surprisingly large impact on model performance; (2) different types of prediction errors showing, e.g., that deep models excel at predicting long-distance dependencies but still struggle with known challenges such as PPattachment errors and adjunct-argument distinctions; (3) the role of syntax, showing that there is significant room for improvement given oracle syntax but errors from existing automatic parsers prevent effective use in SRL.", 
        "10": "In summary, our main contributions incluede:\n\u2022 A new state-of-the-art deep network for endto-end SRL, supported by publicly available code and models.1\n\u2022 An in-depth error analysis indicating where the model works well and where it still struggles, including discussion of structural consistency and long-distance dependencies.", 
        "11": "\u2022 Experiments that point toward directions for future improvements, including a detailed discussion of how and when syntactic parsers could be used to improve these results.", 
        "12": "1https://github.com/luheng/deep_srl\n473  2 Model  Two major factors contribute to the success of our deep SRL model: (1) applying recent advances in training deep recurrent neural networks such as highway connections (Srivastava et al., 2015) and RNN-dropouts (Gal and Ghahramani, 2016),2 and (2) using an A\u2217 decoding algorithm (Lewis and Steedman, 2014; Lee et al., 2016) to enforce structural consistency at prediction time without adding more complexity to the training process.", 
        "13": "Formally, our task is to predict a sequence y given a sentence-predicate pair (w, v) as input.", 
        "14": "Each yi \u2208 y belongs to a discrete set of BIO tags T .", 
        "15": "Words outside argument spans have the tag O, and words at the beginning and inside of argument spans with role r have the tags Br and Ir respectively.", 
        "16": "Let n = |w| = |y| be the length of the sequence.", 
        "17": "Predicting an SRL structure under our model involves finding the highest-scoring tag sequence over the space of all possibilities Y:\ny\u0302 = argmax y\u2208Y f(w,y) (1)\nWe use a deep bidirectional LSTM (BiLSTM) to learn a locally decomposed scoring function conditioned on the input: \u2211n t=1 log p(yt | w).", 
        "18": "To incorporate additional information (e.g., structural consistency, syntactic input), we augment the scoring function with penalization terms:\nf(w,y) = n\u2211\nt=1\nlog p(yt | w)\u2212 \u2211\nc\u2208C c(w, y1:t) (2)\nEach constraint function c applies a non-negative penalty given the input w and a length-t prefix y1:t. These constraints can be hard or soft depending on whether the penalties are finite.", 
        "19": "2.1 Deep BiLSTM Model  Our model computes the distribution over tags using stacked BiLSTMs, which we define as follows:\nil,t = \u03c3(W l i [hl,t+\u03b4l ,xl,t] + b l i) (3) ol,t = \u03c3(W l o[hl,t+\u03b4l ,xl,t] + b l o) (4) fl,t = \u03c3(W l f[hl,t+\u03b4l ,xl,t] + b l f + 1) (5) c\u0303l,t = tanh(W l c[hl,t+\u03b4l ,xl,t] + b l c) (6) cl,t = il,t \u25e6 c\u0303l,t + fl,t \u25e6 ct+\u03b4l (7) hl,t = ol,t \u25e6 tanh(cl,t) (8)\n2We thank Mingxuan Wang for suggesting highway connections with simplified inputs and outputs.", 
        "20": "Part of our model is extended from his unpublished implementation.", 
        "21": "where xl,t is the input to the LSTM at layer l and timestep t. \u03b4l is either 1 or \u22121, indicating the directionality of the LSTM at layer l.\nTo stack the LSTMs in an interleaving pattern, as proposed by Zhou and Xu (2015), the layerspecific inputs xl,t and directionality \u03b4l are arranged in the following manner:\nxl,t =\n{ [Wemb(wt),Wmask(t = v)] l = 1\nhl\u22121,t l > 1 (9)\n\u03b4l = { 1 if l is even \u22121 otherwise\n(10)\nThe input vector x1,t is the concatenation of token wt\u2019s word embedding and an embedding of the binary feature (t = v) indicating whether wt word is the given predicate.", 
        "22": "Finally, the locally normalized distribution over output tags is computed via a softmax layer:\np(yt | x) \u221d exp(WytaghL,t + btag) (11)\nHighway Connections To alleviate the vanishing gradient problem when training deep BiLSTMs, we use gated highway connections (Zhang et al., 2016; Srivastava et al., 2015).", 
        "23": "We include transform gates rt to control the weight of linear and non-linear transformations between layers (See Figure 1).", 
        "24": "The output hl,t is changed to:\nrl,t = \u03c3(W l r[hl,t\u22121,xt] + b l r) (12) h\u2032l,t = ol,t \u25e6 tanh(cl,t) (13) hl,t = rl,t \u25e6 h\u2032l,t + (1\u2212 rl,t) \u25e6Wlhxl,t (14)\nRecurrent Dropout To reduce over-fitting, we use dropout as described in Gal and Ghahramani (2016).", 
        "25": "A shared dropout mask zl is applied to the hidden state:\nh\u0303l,t = rl,t \u25e6 h\u2032l,t + (1\u2212 rl,t) \u25e6Wlhxl,t (15) hl,t = zl \u25e6 h\u0303l,t (16)\nzl is shared across timesteps at layer l to avoid amplifying the dropout noise along the sequence.", 
        "26": "2.2 Constrained A\u2217 Decoding  The approach described so far does not model any dependencies between the output tags.", 
        "27": "To incorporate constraints on the output structure at decoding time, we use A\u2217 search over tag prefixes for decoding.", 
        "28": "Starting with an empty sequence, the tag sequence is built from left to right.", 
        "29": "The score for a partial sequence with length t is defined as:\nf(w, y1:t) = t\u2211\ni=1\nlog p(yi | w)\u2212 \u2211\nc\u2208C c(w, y1:i)\n(17) An admissible A\u2217 heuristic can be computed efficiently by summing over the best possible tags for all timesteps after t:\ng(w, y1:t) = n\u2211\ni=t+1\nmax yi\u2208T\nlog p(yi | w) (18)\nExploration of the prefixes is determined by an agenda A which is sorted by f(w, y1:t) + g(w, y1:t).", 
        "30": "In the worst case, A\u2217 explores exponentially many prefixes, but because the distribution p(yt | w) learned by the BiLSTM models is very peaked, the algorithm is efficient in practice.", 
        "31": "We list some example constraints as follows:\nBIO Constraints These constraints reject any sequence that does not produce valid BIO transitions, such as BARG0 followed by IARG1.", 
        "32": "SRL Constraints Punyakanok et al.", 
        "33": "(2008); Ta\u0308ckstro\u0308m et al.", 
        "34": "(2015) described a list of SRLspecific global constraints: \u2022 Unique core roles (U): Each core role\n(ARG0-ARG5, ARGA) should appear at most once for each predicate.", 
        "35": "\u2022 Continuation roles (C): A continuation role\nC-X can exist only when its base role X is realized before it.", 
        "36": "\u2022 Reference roles (R): A reference role R-X\ncan exist only when its base role X is realized (not necessarily before R-X).", 
        "37": "We only enforce U and C constraints, since the R constraints are more commonly violated in gold data and enforcing them results in worse performance (see discussions in Section 4.3).", 
        "38": "Syntactic Constraints We can enforce consistency with a given parse tree by rejecting or penalizing arguments that are not constituents.", 
        "39": "In Section 4.4, we will discuss the motivation behind using syntactic constraints and experimental results using both predicted and gold syntax.", 
        "40": "2.3 Predicate Detection  While the CoNLL 2005 shared task assumes gold predicates as input (Carreras and Ma\u0300rquez, 2005), this information is not available in many downstream applications.", 
        "41": "We propose a simple model for end-to-end SRL, where the system first predicts a set of predicate words v from the input sentence w. Then each predicate in v is used as an input to argument prediction.", 
        "42": "We independently predict whether each word in the sentence is a predicate, using a binary softmax over the outputs of a bidirectional LSTM trained to maximize the likelihood of the gold labels.", 
        "43": "3 Experiments    3.1 Datasets  We measure the performance of our SRL system on two PropBank-style, span-based SRL datasets: CoNLL-2005 (Carreras and Ma\u0300rquez, 2005) and CoNLL-2012 (Pradhan et al., 2013)3.", 
        "44": "Both datasets provide gold predicates (their index in the sentence) as part of the input.", 
        "45": "Therefore, each provided predicate corresponds to one training/test tag sequence.", 
        "46": "We follow the traindevelopment-test split for both datasets and use the official evaluation script from the CoNLL 2005 shared task for evaluation on both datasets.", 
        "47": "3.2 Model Setup  Our network consists of 8 BiLSTM layers (4 forward LSTMs and 4 reversed LSTMs) with 300- dimensional hidden units, and a softmax layer for predicting the output distribution.", 
        "48": "Initialization All the weight matrices in BiLSTMs are initialized with random orthonormal matrices as described in Saxe et al.", 
        "49": "(2013).", 
        "50": "3We used the version of OntoNotes downloaded at: http://cemantix.org/data/ontonotes.html.", 
        "51": "All tokens are lower-cased and initialized with 100-dimensional GloVe embeddings pre-trained on 6B tokens (Pennington et al., 2014) and updated during training.", 
        "52": "Tokens that are not covered by GloVe are replaced with a randomly initialized UNK embedding.", 
        "53": "Training We use Adadelta (Zeiler, 2012) with = 1e\u22126 and \u03c1 = 0.95 and mini-batches of size 80.", 
        "54": "We set RNN-dropout probability to 0.1 and clip gradients with norm larger than 1.", 
        "55": "All the models are trained for 500 epochs with early stopping based on development results.", 
        "56": "4\nEnsembling We use a product of experts (Hinton, 2002) to combine predictions of 5 models, each trained on 80% of the training corpus and validated on the remaining 20%.", 
        "57": "For the CoNLL 2012 corpus, we split the training data from each sub-genre into 5 folds, such that the training data will have similar genre distributions.", 
        "58": "Constrained Decoding We experimented with different types of constraints on the CoNLL 2005\n4Training the full model on CoNLL 2005 takes about 5 days on a single Titan X Pascal GPU.", 
        "59": "and CoNLL 2012 development sets.", 
        "60": "Only the BIO hard constraints significantly improve over the ensemble model.", 
        "61": "Therefore, in our final results, we only use BIO hard constraints during decoding.", 
        "62": "5  3.3 Results  In Table 1 and 2, we compare our best single and ensemble model with previous work.", 
        "63": "Our ensemble (PoE) has an absolute improvement of 2.1 F1 on both CoNLL 2005 and CoNLL 2012 over the previous state of the art.", 
        "64": "Our single model also achieves more than a 0.4 improvement on both datasets.", 
        "65": "In comparison with the best reported results, our percentage of completely correct predicates improves by 5.9 points.", 
        "66": "While the continuing trend of improving SRL without syntax seems to suggest that neural end-to-end systems no longer needs parsers, our analysis in Section 4.4 will show that accurate syntactic information can improve these deep models.", 
        "67": "5A\u2217 search in this setting finds the optimal sequence for all sentences and is therefore equivalent to Viterbi decoding.", 
        "68": "3.4 Ablations  Figure 2 shows learning curves of our model ablations on the CoNLL 2005 development set.", 
        "69": "We ablate our full model by removing highway connections, RNN-dropout, and orthonormal initialization independently.", 
        "70": "Without dropout, the model overfits at around 300 epochs at 78 F1.", 
        "71": "Orthonormal parameter initialization is surprisingly important\u2014without this, the model achieves only 65 F1 within the first 50 epochs.", 
        "72": "All 8 layer ablations suffer a loss of more than 1.7 in absolute F1 compared to the full model.", 
        "73": "3.5 End-to-end SRL  The network for predicate detection (Section 2.3) contains 2 BiLSTM layers with 100-dimensional hidden units, and is trained for 30 epochs.", 
        "74": "For end-to-end evaluation, all arguments predicted for the false positive predicates are counted as precision loss, and all arguments for the false negative predicates are considered as recall loss.", 
        "75": "Table 3 shows the predicate detection F1 as well as end-to-end SRL results with predicted predi-\ncates.6 On CoNLL 2005, the predicate detector achieved over 96 F1, and the final SRL results only drop 1.2-3.5 F1 compared to using the gold predicates.", 
        "76": "However, on CoNLL 2012, the predicate detector has only about 90 F1, and the final SRL results decrease by up to 6.2 F1.", 
        "77": "This is at least in part due to the fact that CoNLL 2012 contains some nominal and copula predicates (Weischedel et al., 2013), making predicate identification a more challenging problem.", 
        "78": "4 Analysis  To better understand our deep SRL model and its relation to previous work, we address the following questions with a suite of empirical analyses: \u2022 What is the model good at and what kinds of\nmistakes does it make?", 
        "79": "\u2022 How well do LSTMs model global structural\nconsistency, despite conditionally independent tagging decisions?", 
        "80": "\u2022 Is our model implicitly learning syntax, and\ncould explicitly modeling syntax still help?", 
        "81": "All the analysis in this section is done on the CoNLL 2005 development set with gold predicates, unless otherwise stated.", 
        "82": "We are also able to compare to previous systems whose model predictions are available online (Punyakanok et al., 2005; Pradhan et al., 2005).7  4.1 Error Types Breakdown  Inspired by Kummerfeld et al.", 
        "83": "(2012), we define a set of oracle transformations that fix various prediction errors sequentially and observe the relative improvement after each operation (see Table 4).", 
        "84": "Figure 3 shows how our work compares to the pre-\n6The frame identification numbers reported in Pradhan et al.", 
        "85": "(2013) are not comparable, due to errors in the original release of the data, as mentioned in Ta\u0308ckstro\u0308m et al.", 
        "86": "(2015).", 
        "87": "7Model predictions of CoNLL 2005 systems: http:// www.cs.upc.edu/\u02dcsrlconll/st05/st05.html\nvious systems in terms of different types of mistakes.", 
        "88": "While our model makes a similar number of labeling errors to traditional syntax-based systems, it has far fewer missing arguments (perhaps due to parser errors making some arguments difficult to recover for syntax-based systems).", 
        "89": "Label Confusion As shown in Table 4, our system most commonly makes labeling errors, where the predicted span is an argument but the role was incorrectly labeled.", 
        "90": "Table 5 shows a confusion matrix for the most frequent labels.", 
        "91": "The model often confuses ARG2 with AM-DIR, AM-LOC and AM-MNR.", 
        "92": "These confusions can arise due to the use of ARG2 in many verb frames to represent semantic relations such as direction or location.", 
        "93": "For example, ARG2 in the frame move.01 is defined as Arg2-GOL: destination.", 
        "94": "8 This type of argumentadjunct distinction is known to be difficult (Kingsbury et al., 2002), and it is not surprising that our neural model has many such failure cases.", 
        "95": "Attachment Mistakes A second common source of error is reflected by the Merge Spans transformation (10.6%) and the Split Spans transformation (14.7%).", 
        "96": "These errors are closely tied to prepositional phrase (PP) attachment errors, which are also known to be some of the biggest challenges for linguistic analysis (Kummerfeld et al., 2012).", 
        "97": "Figure 4 shows the distribution of syntactic span labels involved in an attachment mistake, where 62% of the syntactic spans are prepositional phrases.", 
        "98": "For example, in Sumitomo\n8Source: Unified verb index: http://verbs.", 
        "99": "colorado.edu.", 
        "100": "financed the acquisition from Sears, our model mistakenly labels the prepositional phrase from Sears as the ARG2 of financed, whereas it should instead attach to acquisition.", 
        "101": "4.2 Long-range Dependencies  To analyze the model\u2019s ability to capture longrange dependencies, we compute the F1 of our model on arguments with various distances to the predicate.", 
        "102": "Figure 5 shows that performance tends to degrade, for all models, for arguments further from the predicate.", 
        "103": "Interestingly, the gap between shallow and deep models becomes much larger for the long-distance predicate-argument structures.", 
        "104": "The absolute gap between our 2 layer and 8 layer models is 3-4 F1 for arguments that are within 2 words to the predicate, and 5-6 F1 for arguments that are farther away from the predicate.", 
        "105": "Surpris-\ningly, the neural model performance deteriorates less severely on long-range dependencies than traditional syntax-based models.", 
        "106": "4.3 Structural Consistency  We can quantify two types of structural consistencies: the BIO constraints and the SRL-specific constraints.", 
        "107": "Via our ablation study, we show that deeper BiLSTMs are better at enforcing these structural consistencies, although not perfectly.", 
        "108": "BIO Violations The BIO format requires argument spans to begin with a B tag.", 
        "109": "Any I tag directly following an O tag or a tag with different label is considered a violation.", 
        "110": "Table 6 shows the number of BIO violations per token for BiLSTMs with different depths.", 
        "111": "The number of BIO violations decreases when we use a deeper model.", 
        "112": "The gap is biggest between 2-layer and 4-layer models, and diminishes after that.", 
        "113": "It is surprising that although the deeper models generate impressively accurate token-level predic-\ntions, they still make enough BIO errors to significantly hurt performance\u2014when these constraints are simple enough to be enforced by trivial rules.", 
        "114": "We compare the average entropy between tokens involved in BIO violations with the averaged entropy of all tokens.", 
        "115": "For the 8-layer model, the average entropy on these tokens is 30 times higher than the averaged entropy on all tokens.", 
        "116": "This suggests that BIO inconsistencies occur when there is some ambiguity.", 
        "117": "For example, if the model is unsure whether two consecutive words should belong to an ARG0 or ARG1, it might generate inconsistent BIO sequences such as BARG0, IARG1 when decoding at the token level.", 
        "118": "Using BIO-constrained decoding can resolve this ambiguity and result in a structurally consistent solution.", 
        "119": "SRL Structure Violations The model predictions can also violate the SRL-specific constraints commonly used in prior work (Punyakanok et al., 2008; Ta\u0308ckstro\u0308m et al., 2015).", 
        "120": "As shown in Table 7, the model occasionally violates these SRL constraints.", 
        "121": "With our constrained decoding algorithm, it is straightforward to enforce the unique core roles (U) and continuation roles (C) constraints during decoding.", 
        "122": "The constrained decoding results are shown with the model named L8+PoE+SRL in Table 7.", 
        "123": "Although the violations are eliminated, the performance does not significantly improve.", 
        "124": "This is mainly due to two factors: (1) the model often already satisfies these constraints on its own, so the number of violations to be fixed are relatively small, and (2) the gold SRL structure sometimes violates the constraints and enforcing hard constraints can hurt performance.", 
        "125": "Figure 6 shows a sentence in the CoNLL 2005 development set.", 
        "126": "Our original model produces two ARG2s for the predicate quicken, and this violates the SRL constraints.", 
        "127": "When the A\u2217 decoder fixes this violation, it changes the first ARG1 into ARG2 because ARG0,ARG1,ARG2 is a more frequent pattern in the training data and has higher overall score.", 
        "128": "4.4 Can Syntax Still Help SRL?", 
        "129": "The Propbank-style SRL formalism is closely tied to syntax (Bonial et al., 2010; Weischedel et al., 2013).", 
        "130": "In Table 7, we show that 98.7% of the gold SRL arguments match an unlabeled constituent in the gold syntax tree.", 
        "131": "Similar to some recent work (Zhou and Xu, 2015), our model achieves strong performance without directly modeling syntax.", 
        "132": "A natural question follows: are neural SRL models implicitly learning syntax?", 
        "133": "Table 7 shows the trend of deeper models making predictions that are more consistent with the gold syntax in terms of span boundaries.", 
        "134": "With our best model (L8+PoE), 94.3% of the predicted arguments spans are part of the gold parse tree.", 
        "135": "This consistency is on par with previous CoNLL 2005 systems that directly model constituency and use predicted parse trees as features (Punyakanok, 95.3% and Pradhan, 93.0%).", 
        "136": "Constrained Decoding with Syntax The above analysis raises a further question: would improving consistency with syntax provide improvements for SRL?", 
        "137": "Our constrained decoding algorithm described in Section 2.2 enables us to inject syntax as a decoding constraint without having to retrain the model.", 
        "138": "Specifically, if the decoded sequence contains k arguments that do not match any unlabeled syntactic constituent, it will receive a penalty of kC, whereC is a single parameter dictating how much the model should trust the provided syntax.", 
        "139": "In Figure 7, we compare the SRL accuracy with syntactic constraints specified by gold parse or automatic parses.", 
        "140": "When using gold syntax, the predictions improve up to 2 F1 as the penalty increases.", 
        "141": "A state-of-the-art parser (Choe\nand Charniak, 2016) provides smaller gains, while using the Charniak parser (Charniak, 2000) hurts performance if the model places too much trust in it.", 
        "142": "These results suggest that high-quality syntax can still make a large impact on SRL.", 
        "143": "A known challenge for syntactic parsers is robustness on out-of-domain data.", 
        "144": "Therefore we provide experimental results in Table 8 for both CoNLL 2005 and CoNLL 2012, which consists of 8 different genres.", 
        "145": "The penalties are tuned on the two development sets separately (C = 10000 on CoNLL 2005 and C = 20 on CoNLL 2012).", 
        "146": "On the CoNLL 2005 development set, the predicted syntax gives a 0.5 F1 improvement over our best model, while on in-domain test and outof-domain development sets, the improvement is much smaller.", 
        "147": "As expected, on CoNLL 2012, syntax improves most on the newswire (NW) domain.", 
        "148": "These improvements suggest that while decoding with hard constraints is beneficial, joint training or multi-task learning could be even more effective by leveraging full, labeled syntactic structures.", 
        "149": "5 Related Work  Traditional approaches to semantic role labeling have used syntactic parsers to identify constituents and model long-range dependencies, and enforced\nglobal consistency using integer linear programming (Punyakanok et al., 2008) or dynamic programs (Ta\u0308ckstro\u0308m et al., 2015).", 
        "150": "More recently, neural methods have been employed on top of syntactic features (FitzGerald et al., 2015; Roth and Lapata, 2016).", 
        "151": "Our experiments show that offthe-shelf neural methods have a remarkable ability to learn long-range dependencies, syntactic constituency structure, and global constraints without coding task-specific mechanisms for doing so.", 
        "152": "An alternative line of work has attempted to reduce the dependency on syntactic input for semantic role labeling models.", 
        "153": "Collobert et al.", 
        "154": "(2011) first introduced an end-to-end neural-based approach with sequence-level training and uses a convolutional neural network to model the context window.", 
        "155": "However, their best system fell short of traditional feature-based systems.", 
        "156": "Neural methods have also been used as classifiers in transition-based SRL systems (Henderson et al., 2013; Swayamdipta et al., 2016).", 
        "157": "Most recently, several successful LSTM-based architec-\ntures have achieved state-of-the-art results in English span-based SRL (Zhou and Xu, 2015), Chinese SRL (Wang et al., 2015), and dependencybased SRL (Marcheggiani et al., 2017) with little to no syntactic input.", 
        "158": "Our techniques push results to more than 3 F1 over the best syntax-based models.", 
        "159": "However, we also show that there is potential for syntax to further improve performance.", 
        "160": "6 Conclusion and Future Work  We presented a new deep learning model for spanbased semantic role labeling with a 10% relative error reduction over the previous state of the art.", 
        "161": "Our ensemble of 8 layer BiLSTMs incorporated some of the recent best practices such as orthonormal initialization, RNN-dropout, and highway connections, and we have shown that they are crucial for getting good results with deep models.", 
        "162": "Extensive error analysis sheds light on the strengths and limitations of our deep SRL model, with detailed comparison against shallower models and two strong non-neural systems.", 
        "163": "While our deep model is better at recovering longdistance predicate-argument relations, we still observe structural inconsistencies, which can be alleviated by constrained decoding.", 
        "164": "Finally, we posed the question of whether deep SRL still needs syntactic supervision.", 
        "165": "Despite recent success without syntactic input, we found that our best neural model can still benefit from accurate syntactic parser output via straightforward constrained decoding.", 
        "166": "In our oracle experiment, we observed a 3 F1 improvement by leveraging gold syntax, showing the potential for high quality parsers to further improve deep SRL models.", 
        "167": "Acknowledgments  The research was supported in part by DARPA under the DEFT program (FA8750-13-2-0019), the ARO (W911NF-16-1-0121), the NSF (IIS1252835, IIS-1562364), gifts from Google and Tencent, and an Allen Distinguished Investigator Award.", 
        "168": "We are grateful to Mingxuan Wang for sharing his highway LSTM implementation and Sameer Pradhan for help with the CoNLL 2012 dataset.", 
        "169": "We thank Nicholas FitzGerald, Dan Garrette, Julian Michael, Hao Peng, and Swabha Swayamdipta for helpful comments, and the anonymous reviewers for valuable feedback."
    }, 
    "document_id": "P17-1044.pdf.json"
}
