{
    "abstract_sentences": {
        "1": "Lexical ambiguity can impede NLP systems from accurate understanding of semantics.", 
        "2": "Despite its potential benefits, the integration of sense-level information into NLP systems has remained understudied.", 
        "3": "By incorporating a novel disambiguation algorithm into a state-of-the-art classification model, we create a pipeline to integrate sense-level information into downstream NLP applications.", 
        "4": "We show that a simple disambiguation of the input text can lead to consistent performance improvement on multiple topic categorization and polarity detection datasets, particularly when the fine granularity of the underlying sense inventory is reduced and the document is sufficiently large.", 
        "5": "Our results also point to the need for sense representation research to focus more on in vivo evaluations which target the performance in downstream NLP applications rather than artificial benchmarks."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 1857\u20131869 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1170  1 Introduction  As a general trend, most current Natural Language Processing (NLP) systems function at the word level, i.e.", 
        "2": "individual words constitute the most fine-grained meaning-bearing elements of their input.", 
        "3": "The word level functionality can affect the performance of these systems in two ways: (1) it can hamper their efficiency in handling words that are not encountered frequently during training, such as multiwords, inflections and derivations, and (2) it can restrict their semantic understanding to the level of words, with all their ambiguities, and thereby prevent accurate capture of the intended meanings.", 
        "4": "The first issue has recently been alleviated by\ntechniques that aim to boost the generalisation power of NLP systems by resorting to sub-word or character-level information (Ballesteros et al., 2015; Kim et al., 2016).", 
        "5": "The second limitation, however, has not yet been studied sufficiently.", 
        "6": "A reasonable way to handle word ambiguity, and hence to tackle the second issue, is to semantify the input text: transform it from its surface-level semantics to the deeper level of word senses, i.e.", 
        "7": "their intended meanings.", 
        "8": "We take a step in this direction by designing a pipeline that enables seamless integration of word senses into downstream NLP applications, while benefiting from knowledge extracted from semantic networks.", 
        "9": "To this end, we propose a quick graph-based Word Sense Disambiguation (WSD) algorithm which allows high confidence disambiguation of words without much computation overload on the system.", 
        "10": "We evaluate the pipeline in two downstream NLP applications: polarity detection and topic categorization.", 
        "11": "Specifically, we use a classification model based on Convolutional Neural Networks which has been shown to be very effective in various text classification tasks (Kalchbrenner et al., 2014; Kim, 2014; Johnson and Zhang, 2015; Tang et al., 2015; Xiao and Cho, 2016).", 
        "12": "We show that a simple disambiguation of input can lead to performance improvement of a state-of-the-art text classification system on multiple datasets, particularly for long inputs and when the granularity of the sense inventory is reduced.", 
        "13": "Our pipeline is quite flexible and modular, as it permits the integration of different WSD and sense representation techniques.", 
        "14": "2 Motivation  With the help of an example news article from the BBC, shown in Figure 1, we highlight some of the potential deficiencies of word-based models.", 
        "15": "1857\nAmbiguity.", 
        "16": "Language is inherently ambiguous.", 
        "17": "For instance, Mercedes, race, Hamilton and Formula can refer to several different entities or meanings.", 
        "18": "Current neural models have managed to successfully represent complex semantic associations by effectively analyzing large amounts of data.", 
        "19": "However, the word-level functionality of these systems is still a barrier to the depth of their natural language understanding.", 
        "20": "Our proposal is particularly tailored towards addressing this issue.", 
        "21": "Multiword expressions (MWE).", 
        "22": "MWE are lexical units made up of two or more words which are idiosyncratic in nature (Sag et al., 2002), e.g, Lewis Hamilton, Nico Rosberg and Formula 1.", 
        "23": "Most existing word-based models ignore the interdependency between MWE\u2019s subunits and treat them as individual units.", 
        "24": "Handling MWE has been a long-standing problem in NLP and has recently received a considerable amount of interest (Tsvetkov and Wintner, 2014; Salehi et al., 2015).", 
        "25": "Our pipeline facilitates this goal.", 
        "26": "Co-reference.", 
        "27": "Co-reference resolution of concepts and entities is not explicitly tackled by our approach.", 
        "28": "However, thanks to the fact that words that refer to the same meaning in context, e.g., Formula 1-F1 or German Grand Prix-German GPHockenheim, are all disambiguated to the same concept, the co-reference issue is also partly addressed by our pipeline.", 
        "29": "3 Disambiguation Algorithm  Our proposal relies on a seamless integration of word senses in word-based systems.", 
        "30": "The goal is to semantify the text prior to its being fed into the system by transforming its individual units from word surface form to the deeper level of word senses.", 
        "31": "The semantification step is mainly tailored\nAlgorithm 1 Disambiguation algorithm Input: Input text T and semantic network N Output: Set of disambiguated senses S\u0302 1: Graph representation of T : (S,E)\u2190 getGraph(T,N) 2: S\u0302 \u2190 \u2205 3: for each iteration i \u2208 {1, ..., len(T )} 4: s\u0302 = argmaxs\u2208S |{(s, s\u2032) \u2208 E : s\u2032 \u2208 S}| 5: maxDeg = |{(s\u0302, s\u2032) \u2208 E : s\u2032 \u2208 S}| 6: if maxDeg < \u03b8|S| / 100 then 7: break 8: else 9: S\u0302 \u2190 S\u0302 \u222a {s\u0302} 10: E \u2190 E \\ {(s, s\u2032) : s \u2228 s\u2032 \u2208 getLex(s\u0302)} 11: return Disambiguation output S\u0302\ntowards resolving ambiguities, but it brings about other advantages mentioned in the previous section.", 
        "32": "The aim is to provide the system with an input of reduced ambiguity which can facilitate its decision making.", 
        "33": "To this end, we developed a simple graph-based joint disambiguation and entity linking algorithm which can take any arbitrary semantic network as input.", 
        "34": "The gist of our disambiguation technique lies in its speed and scalability.", 
        "35": "Conventional knowledge-based disambiguation systems (Hoffart et al., 2012; Agirre et al., 2014; Moro et al., 2014; Ling et al., 2015; Pilehvar and Navigli, 2014) often rely on computationally expensive graph algorithms, which limits their application to on-the-fly processing of large number of text documents, as is the case in our experiments.", 
        "36": "Moreover, unlike supervised WSD and entity linking techniques (Zhong and Ng, 2010; Cheng and Roth, 2013; Melamud et al., 2016; Limsopatham and Collier, 2016), our algorithm relies only on semantic networks and does not require any senseannotated data, which is limited to English and almost non-existent for other languages.", 
        "37": "Algorithm 1 shows our procedure for disambiguating an input document T .", 
        "38": "First, we retrieve from our semantic network the list of candidate senses1 for each content word, as well as semantic relationships among them.", 
        "39": "As a result, we obtain a graph representation (S,E) of the input text, where S is the set of candidate senses and E is the set of edges among different senses in S. The graph is, in fact, a small sub-graph of the input semantic network,N .", 
        "40": "Our algorithm then selects the best candidates iteratively.", 
        "41": "In each iteration, the\n1As defined in the underlying sense inventory, up to trigrams.", 
        "42": "We used Stanford CoreNLP (Manning et al., 2014) for tokenization, Part-of-Speech (PoS) tagging and lemmatization.", 
        "43": "candidate sense that has the highest graph degree maxDeg is chosen as the winning sense:\nmaxDeg = max s\u2208S |{(s, s\u2032) \u2208 E : s\u2032 \u2208 S}| (1)\nAfter each iteration, when a candidate sense s\u0302 is selected, all the possible candidate senses of the corresponding word (i.e.", 
        "44": "getLex(s\u0302)) are removed from E (line 10 in the algorithm).", 
        "45": "Figure 2 shows a simplified version of the graph for a sample sentence.", 
        "46": "The algorithm would disambiguate the content words in this sentence as follows.", 
        "47": "It first associates Oasis with its rock band sense, since its corresponding node has the highest degree, i.e.", 
        "48": "3.", 
        "49": "On the basis of this, the desert sense of Oasis and its link to the stone sense of rock are removed from the graph.", 
        "50": "In the second iteration, rock band is disambiguated as music band given that its degree is 2.2 Finally, Manchester is associated with its city sense (with a degree of 1).", 
        "51": "In order to enable disambiguating at different confidence levels, we introduce a threshold \u03b8 which determines the stopping criterion of the algorithm.", 
        "52": "Iteration continues until the following condition is fulfilled: maxDeg < \u03b8|S| / 100.", 
        "53": "This ensures that the system will only disambiguate those words for which it has a high confidence and backs off to the word form otherwise, avoiding the introduction of unwanted noise in the data for uncertain cases or for word senses that are not defined in the inventory.", 
        "54": "2For bigrams and trigrams whose individual words might also be disambiguated (such as rock and band in rock band), the longest unit has the highest priority (i.e.", 
        "55": "rock band).", 
        "56": "4 Classification Model  In our experiments, we use a standard neural network based classification approach which is similar to the Convolution Neural Network classifier of Kim (2014) and the pioneering model of Collobert et al.", 
        "57": "(2011).", 
        "58": "Figure 3 depicts the architecture of the model.", 
        "59": "The network receives the concatenated vector representations of the input words, v1:n = v1\u2295v2\u2295\u00b7 \u00b7 \u00b7\u2295vn, and applies (convolves) filters F on windows of h words, mi = f(F.vi:i+h\u22121 + b), where b is a bias term and f() is a non-linear function, for which we use ReLU (Nair and Hinton, 2010).", 
        "60": "The convolution transforms the input text to a feature map m = [m1,m2, .", 
        "61": ".", 
        "62": ".", 
        "63": ",mn\u2212h+1].", 
        "64": "A max pooling operation then selects the most salient feature m\u0302 = max{m} for each filter.", 
        "65": "In the network of Kim (2014), the pooled features are directly passed to a fully connected softmax layer whose outputs are class probabilities.", 
        "66": "However, we add a recurrent layer before softmax in order to enable better capturing of longdistance dependencies.", 
        "67": "It has been shown by Xiao and Cho (2016) that a recurrent layer can replace multiple layers of convolution and be beneficial, particularly when the length of input text grows.", 
        "68": "Specifically, we use a Long Short-Term Memory (Hochreiter and Schmidhuber, 1997, LSTM) as our recurrent layer which was originally proposed to avoid the vanishing gradient problem and has proven its abilities in capturing distant dependencies.", 
        "69": "The LSTM unit computes three gate vectors\n(forget, input, and output) as follows:\nft = \u03c3(Wf gt +Uf ht\u22121 + bf ),\nit = \u03c3(Wi gt +Ui ht\u22121 + bi),\not = \u03c3(Wo gt +Uo ht\u22121 + bo),\n(2)\nwhere W, U, and b are model parameters and g and h are input and output sequences, respectively.", 
        "70": "The cell state vector ct is then computed as ct = ft ct\u22121 + it tanh(c\u0303t) where c\u0303t = Wc gt + Uc ht\u22121.", 
        "71": "Finally, the output sequence is computed as ht = ot tanh(ct).", 
        "72": "As for regularization, we used dropout (Hinton et al., 2012) after the embedding layer.", 
        "73": "We perform experiments with two configurations of the embedding layer: (1) Random, initialized randomly and updated during training, and (2) Pre-trained, initialized by pre-trained representations and updated during training.", 
        "74": "In the following section we describe the pre-trained word and sense representation used for the initialization of the second configuration.", 
        "75": "4.1 Pre-trained Word and Sense Embeddings  One of the main advantages of neural models is that they usually represent the input words as dense vectors.", 
        "76": "This can significantly boost a system\u2019s generalisation power and results in improved performance (Zou et al., 2013; Bordes et al., 2014; Kim, 2014; Weiss et al., 2015, interalia).", 
        "77": "This feature also enables us to directly plug in pre-trained sense representations and check them in a downstream application.", 
        "78": "In our experiments we generate a set of sense embeddings by extending DeConf, a recent technique with state-of-the-art performance on multiple semantic similarity benchmarks (Pilehvar and Collier, 2016).", 
        "79": "We leave the evaluation of other representations to future work.", 
        "80": "DeConf gets a pre-trained set of word embeddings and computes sense embeddings in the same semantic space.", 
        "81": "To this end, the approach exploits the semantic network of WordNet (Miller, 1995), using the Personalized PageRank (Haveliwala, 2002) algorithm, and obtains a set of sense biasing words Bs for a word sense s. The sense representation of s is then obtained using the following formula:\nv\u0302(s) = 1\n|Bs|\n|Bs|\u2211\ni=1\ne \u2212i \u03b4 v(wi), (3)\nwhere \u03b4 is a decay parameter and v(wi) is the embedding of wi, i.e.", 
        "82": "the ith word in the sense bi-\nasing list of s, i.e.", 
        "83": "Bs.", 
        "84": "We follow Pilehvar and Collier (2016) and set \u03b4 = 5.", 
        "85": "Finally, the vector for sense s is calculated as the average of v\u0302(s) and the embedding of its corresponding word.", 
        "86": "Owing to its reliance on WordNet\u2019s semantic network, DeConf is limited to generating only those word senses that are covered by this lexical resource.", 
        "87": "We propose to use Wikipedia in order to expand the vocabulary of the computed word senses.", 
        "88": "Wikipedia provides a high coverage of named entities and domain-specific terms in many languages, while at the same time also benefiting from a continuous update by collaborators.", 
        "89": "Moreover, it can easily be viewed as a sense inventory where individual articles are word senses arranged through hyperlinks and redirections.", 
        "90": "Camacho-Collados et al.", 
        "91": "(2016b) proposed NASARI3, a technique to compute the most salient words for each Wikipedia page.", 
        "92": "These salient words were computed by exploiting the structure and content of Wikipedia and proved effective in tasks such as Word Sense Disambiguation (Tripodi and Pelillo, 2017; Camacho-Collados et al., 2016a), knowledge-base construction (Lieto et al., 2016), domain-adapted hypernym discovery (Espinosa-Anke et al., 2016; CamachoCollados and Navigli, 2017) or object recognition (Young et al., 2016).", 
        "93": "We view these lists as biasing words for individual Wikipedia pages, and then leverage the exponential decay function (Equation 3) to compute new sense embeddings in the same semantic space.", 
        "94": "In order to represent both WordNet and Wikipedia sense representations in the same space, we rely on the WordNetWikipedia mapping provided by BabelNet4 (Navigli and Ponzetto, 2012).", 
        "95": "For the WordNet synsets which are mapped to Wikipedia pages in BabelNet, we average the corresponding Wikipediabased and WordNet-based sense embeddings.", 
        "96": "4.2 Pre-trained Supersense Embeddings  It has been argued that WordNet sense distinctions are too fine-grained for many NLP applications (Hovy et al., 2013).", 
        "97": "The issue can be tackled by grouping together similar senses of the same word, either using automatic clustering techniques (Navigli, 2006; Agirre and Lopez, 2003; Snow et al., 2007) or with the help of WordNet\u2019s lexicographer\n3We downloaded the salient words for Wikipedia pages (NASARI English lexical vectors, version 3.0) from http://lcl.", 
        "98": "uniroma1.it/nasari/\n4We used the Java API from http://babelnet.org\nfiles5.", 
        "99": "Various applications have been shown to improve upon moving from senses to supersenses (Ru\u0308d et al., 2011; Severyn et al., 2013; Flekova and Gurevych, 2016).", 
        "100": "In WordNet\u2019s lexicographer files there are a total of 44 sense clusters, referred to as supersenses, for categories such as event, animal, and quantity.", 
        "101": "In our experiments we use these supersenses in order to reduce granularity of our WordNet and Wikipedia senses.", 
        "102": "To generate supersense embeddings, we simply average the embeddings of senses in the corresponding cluster.", 
        "103": "5 Evaluation  We evaluated our model on two classification tasks: topic categorization (Section 5.2) and polarity detection (Section 5.3).", 
        "104": "In the following section we present the common experimental setup.", 
        "105": "5.1 Experimental setup  Classification model.", 
        "106": "Throughout all the experiments we used the classification model described in Section 4.", 
        "107": "The general architecture of the model was the same for both tasks, with slight variations in hyperparameters given the different natures of the tasks, following the values suggested by Kim (2014) and Xiao and Cho (2016) for the two tasks.", 
        "108": "Hyperparameters were fixed across all configurations in the corresponding tasks.", 
        "109": "The embedding layer was fixed to 300 dimensions, irrespective of the configuration, i.e.", 
        "110": "Random and Pre-trained.", 
        "111": "For both tasks the evaluation was carried out by 10-fold cross-validation unless standard trainingtesting splits were available.", 
        "112": "The disambiguation threshold \u03b8 (cf.", 
        "113": "Section 3) was tuned on the training portion of the corresponding data, over seven values in [0,3] in steps of 0.5.6 We used Keras (Chollet, 2015) and Theano (Team, 2016) for our model implementations.", 
        "114": "Semantic network.", 
        "115": "The integration of senses was carried out as described in Section 3.", 
        "116": "For disambiguating with both WordNet and Wikipedia senses we relied on the joint semantic network of Wikipedia hyperlinks and WordNet via the mapping provided by BabelNet.7\n5https://wordnet.princeton.edu/man/lexnames.5WN.html 6We observed that values higher than 3 led to very few disambiguations.", 
        "117": "While the best results were generally achieved in the [1.5,2.5] range, performance differences across threshold values were not statistically significant in most cases.", 
        "118": "7For simplicity we refer to this joint sense inventory as Wikipedia, but note that WordNet senses are also covered.", 
        "119": "Pre-trained word and sense embeddings.", 
        "120": "Throughout all the experiments we used Word2vec (Mikolov et al., 2013) embeddings, trained on the Google News corpus.8 We truncated this set to its 250K most frequent words.", 
        "121": "We also used WordNet 3.0 (Fellbaum, 1998) and the Wikipedia dump of November 2014 to compute the sense embeddings (see Section 4.1).", 
        "122": "As a result, we obtained a set of 757,262 sense embeddings in the same space as the pre-trained Word2vec word embeddings.", 
        "123": "We used DeConf (Pilehvar and Collier, 2016) as our pre-trained WordNet sense embeddings.", 
        "124": "All vectors had a fixed dimensionality of 300.", 
        "125": "Supersenses.", 
        "126": "In addition to WordNet senses, we experimented with supersenses (see Section 4.2) to check how reducing granularity would affect system performance.", 
        "127": "For obtaining supersenses in a given text we relied on our disambiguation pipeline and simply clustered together senses belonging to the same WordNet supersense.", 
        "128": "Evaluation measures.", 
        "129": "We report the results in terms of standard accuracy and F1 measures.9  5.2 Topic Categorization  The task of topic categorization consists of assigning a label (i.e.", 
        "130": "topic) to a given document from a pre-defined set of labels.", 
        "131": "5.2.1 Datasets  For this task we used two newswire and one medical topic categorization datasets.", 
        "132": "Table 1 summarizes the statistics of each dataset.10 The BBC news dataset11 (Greene and Cunningham, 2006) comprises news articles taken from BBC, divided into five topics: business, entertainment, politics, sport and tech.", 
        "133": "Newsgroups (Lang, 1995) is a collection of 11,314 documents for training and 7532 for testing12 divided into six topics: computing, sport and motor vehicles, science, politics, reli-\n8https://code.google.com/archive/p/word2vec/ 9Since all models in our experiments provide full coverage, accuracy and F1 denote micro- and macro-averaged F1, respectively (Yang, 1999).", 
        "134": "10The coverage of the datasets was computed using the 250K top words in the Google News Word2vec embeddings.", 
        "135": "11http://mlg.ucd.ie/datasets/bbc.html 12We used the train-test partition available at http://qwone.", 
        "136": "com/\u223cjason/20Newsgroups/\nDataset Domain No.", 
        "137": "of classes No.", 
        "138": "of docs Avg.", 
        "139": "doc.", 
        "140": "size Size of vocab.", 
        "141": "Coverage Evaluation\ngion and sales.13 Finally, Ohsumed14 is a collection of medical abstracts from MEDLINE, an online medical information database, categorized according to 23 cardiovascular diseases.", 
        "142": "For our experiments we used the partition split of 10,433 documents for training and 12,733 for testing.15  5.2.2 Results  Table 2 shows the results of our classification model and its variants on the three datasets.16 When the embedding layer is initialized randomly, the model integrated with word senses consistently improves over the word-based model, particularly when the fine-granularity of the underlying sense inventory is reduced using supersenses (with statistically significant gains on the three datasets).", 
        "143": "This highlights the fact that a simple disambiguation of the input can bring about performance gain for a state-of-the-art classification system.", 
        "144": "Also,\n13The dataset has 20 fine-grained categories clustered into six general topics.", 
        "145": "We used the coarse-grained labels for their clearer distinction and consistency with BBC topics.", 
        "146": "14ftp://medir.ohsu.edu/pub/ohsumed 15http://disi.unitn.it/moschitti/corpora.htm 16Symbols \u2217 and \u2020 indicate the sense-based model with the smallest margin to the word-based model whose accuracy is statistically significant at 0.95 confidence level according to unpaired t-test (\u2217 for positive and \u2020 for negative change).", 
        "147": "the better performance of supersenses suggests that the sense distinctions of WordNet are too finegrained for the topic categorization task.", 
        "148": "However, when pre-trained representations are used to initialize the embedding layer, no improvement is observed over the word-based model.", 
        "149": "This can be attributed to the quality of the representations, as the model utilizing them was unable to benefit from the advantage offered by sense distinctions.", 
        "150": "Our results suggest that research in sense representation should put special emphasis on real-world evaluations on benchmarks for downstream applications, rather than on artificial tasks such as word similarity.", 
        "151": "In fact, research has previously shown that word similarity might not constitute a reliable proxy to measure the performance of word embeddings in downstream applications (Tsvetkov et al., 2015; Chiu et al., 2016).", 
        "152": "Among the three datasets, Ohsumed proves to be the most challenging one, mainly for its larger number of classes (i.e.", 
        "153": "23) and its domain-specific nature (i.e.", 
        "154": "medicine).", 
        "155": "Interestingly, unlike for the other two datasets, the introduction of pre-trained word embeddings to the system results in reduced performance on Ohsumed.", 
        "156": "This suggests that general domain embeddings might not be beneficial\nin specialized domains, which corroborates previous findings by Yadav et al.", 
        "157": "(2017) on a different task, i.e.", 
        "158": "entity extraction.", 
        "159": "This performance drop may also be due to diachronic issues (Ohsumed dates back to the 1980s) and low coverage: the pre-trained Word2vec embeddings cover 79.3% of the words in Ohsumed (see Table 1), in contrast to the higher coverage on the newswire datasets, i.e.", 
        "160": "Newsgroups (83.4%) and BBC (87.4%).", 
        "161": "However, also note that the best overall performance is attained when our pre-trained Wikipedia sense embeddings are used.", 
        "162": "This highlights the effectiveness of Wikipedia in handling domain-specific entities, thanks to its broad sense inventory.", 
        "163": "5.3 Polarity Detection  Polarity detection is the most popular evaluation framework for sentiment analysis (Dong et al., 2015).", 
        "164": "The task is essentially a binary classification which determines if the sentiment of a given sentence or document is negative or positive.", 
        "165": "5.3.1 Datasets  For the polarity detection task we used five standard evaluation datasets.", 
        "166": "Table 1 summarizes statistics.", 
        "167": "PL04 (Pang and Lee, 2004) is a polarity detection dataset composed of full movie reviews.", 
        "168": "PL0518 (Pang and Lee, 2005), instead, is composed of short snippets from movie reviews.", 
        "169": "RTC contains critic reviews from Rotten Tomatoes19, divided into 436,000 training and 2,000 test instances.", 
        "170": "IMDB (Maas et al., 2011) includes 50,000 movie reviews, split evenly between training and test.", 
        "171": "Finally, we used the Stanford Sentiment dataset (Socher et al., 2013), which associates each review with a value that denotes its sentiment.", 
        "172": "To be consistent with the binary classification of the other datasets, we removed the neutral phrases according to the dataset\u2019s scale (between 0.4 and 0.6) and considered the reviews whose values were below 0.4 as negative and above 0.6 as positive.", 
        "173": "This resulted in a binary polarity dataset of 119,783 phrases.", 
        "174": "Unlike the previous four datasets, this dataset does not contain an even distribution of positive and negative labels.", 
        "175": "5.3.2 Results  Table 4 lists accuracy performance of our classification model and all its variants on five polar-\n18Both PL04 and PL05 were downloaded from http:// www.cs.cornell.edu/people/pabo/movie-review-data/\n19http://www.rottentomatoes.com\nity detection datasets.", 
        "176": "Results are generally better than those of Kim (2014), showing that the addition of the recurrent layer to the model (cf.", 
        "177": "Section 4) was beneficial.", 
        "178": "However, interestingly, no consistent performance gain is observed in the polarity detection task, when the model is provided with disambiguated input, particularly for datasets with relatively short reviews.", 
        "179": "We attribute this to the nature of the task.", 
        "180": "Firstly, given that words rarely happen to be ambiguous with respect to their sentiment, the semantic sense distinctions provided by the disambiguation stage do not assist the classifier in better decision making, and instead introduce data sparsity.", 
        "181": "Secondly, since the datasets mostly contain short texts, e.g., sentences or snippets, the disambiguation algorithm does not have sufficient context to make high-confidence judgements, resulting in fewer disambiguations or less reliable ones.", 
        "182": "In the following section we perform a more in-depth analysis of the impact of document size on the performance of our sense-based models.", 
        "183": "5.4 Analysis  Document size.", 
        "184": "A detailed analysis revealed a relation between document size (the number of tokens) and performance gain of our sense-level model.", 
        "185": "We show in Figure 4 how these two vary for our most consistent configuration, i.e.", 
        "186": "Wikipedia supersenses, with random initialization.", 
        "187": "Interestingly, as a general trend, the performance gain increases with average document size, irre-\n19Stanford is the only unbalanced dataset, but F1 results were almost identical to accuracy.", 
        "188": "spective of the classification task.", 
        "189": "We attribute this to two main factors:\n1.", 
        "190": "Sparsity: Splitting a word into multiple word senses can have the negative side effect that the corresponding training data for that word is distributed among multiple independent senses.", 
        "191": "This reduces the training instances per word sense, which might affect the classifier\u2019s performance, particularly when senses are semantically related (in comparison to fine-grained senses, supersenses address this issue to some extent).", 
        "192": "2.", 
        "193": "Disambiguation quality: As also mentioned previously, our disambiguation algorithm requires the input text to be sufficiently large so as to create a graph with an adequate number of coherent connections to function effectively.", 
        "194": "In fact, for topic categorization, in which the documents are relatively long, our algorithm manages to disambiguate a larger proportion of words in documents with high confidence.", 
        "195": "The lower performance of graphbased disambiguation algorithms on short\ntexts is a known issue (Moro et al., 2014; Raganato et al., 2017), the tackling of which remains an area of exploration.", 
        "196": "Senses granularity.", 
        "197": "Our results showed that reducing fine-granularity of sense distinctions can be beneficial to both tasks, irrespective of the underlying sense inventory, i.e.", 
        "198": "WordNet or Wikipedia, which corroborates previous findings (Hovy et al., 2013; Flekova and Gurevych, 2016).", 
        "199": "This suggests that text classification does not require fine-grained semantic distinctions.", 
        "200": "In this work we used a simple technique based on WordNet\u2019s lexicographer files for coarsening senses in this sense inventory as well as in Wikipedia.", 
        "201": "We leave the exploration of this promising area as well as the evaluation of other granularity reduction techniques for WordNet (Snow et al., 2007; Bhagwani et al., 2013) and Wikipedia (Dandala et al., 2013) sense inventories to future work.", 
        "202": "6 Related Work  The past few years have witnessed a growing research interest in semantic representation, mainly as a consequence of the word embedding tsunami\n(Mikolov et al., 2013; Pennington et al., 2014).", 
        "203": "Soon after their introduction, word embeddings were integrated into different NLP applications, thanks to the migration of the field to deep learning and the fact that most deep learning models view words as dense vectors.", 
        "204": "The waves of the word embedding tsunami have also lapped on the shores of sense representation.", 
        "205": "Several techniques have been proposed that either extend word embedding models to cluster contexts and induce senses, usually referred to as unsupervised sense representations (Schu\u0308tze, 1998; Reisinger and Mooney, 2010; Huang et al., 2012; Neelakantan et al., 2014; Guo et al., 2014; Tian et al., 2014; S\u030custer et al., 2016; Ettinger et al., 2016; Qiu et al., 2016) or exploit external sense inventories and lexical resources for generating sense representations for individual meanings of words (Chen et al., 2014; Johansson and Pina, 2015; Jauhar et al., 2015; Iacobacci et al., 2015; Rothe and Schu\u0308tze, 2015; Camacho-Collados et al., 2016b; Mancini et al., 2016; Pilehvar and Collier, 2016).", 
        "206": "However, the integration of sense representations into deep learning models has not been so straightforward, and research in this field has often opted for alternative evaluation benchmarks such as WSD, or artificial tasks, such as word similarity.", 
        "207": "Consequently, the problem of integrating sense representations into downstream NLP applications has remained understudied, despite the potential benefits it can have.", 
        "208": "Li and Jurafsky (2015) proposed a \u201cmulti-sense embedding\u201d pipeline to check the benefit that can be gained by replacing word embeddings with sense embeddings in multiple tasks.", 
        "209": "With the help of two simple disambiguation algorithms, unsupervised sense embeddings were integrated into various downstream applications, with varying degrees of success.", 
        "210": "Given the interdependency of sense representation and disambiguation in this model, it is very difficult to introduce alternative algorithms into its pipeline, either to benefit from the state of the art, or to carry out an evaluation.", 
        "211": "Instead, our pipeline provides the advantage of being modular: thanks to its use of disambiguation in the pre-processing stage and use of sense representations that are linked to external sense inventories, different WSD techniques and sense representations can be easily plugged in and checked.", 
        "212": "Along the same lines, Flekova and Gurevych (2016) proposed a technique for learning supersense rep-\nresentations, using automatically-annotated corpora.", 
        "213": "Coupled with a supersense tagger, the representations were fed into a neural network classifier as additional features to the word-based input.", 
        "214": "Through a set of experiments, Flekova and Gurevych (2016) showed that the supersense enrichment can be beneficial to a range of binary classification tasks.", 
        "215": "Our proposal is different in that it focuses directly on the benefits that can be gained by semantifying the input, i.e.", 
        "216": "reducing lexical ambiguity in the input text, rather than assisting the model with additional sources of knowledge.", 
        "217": "7 Conclusion and Future Work  We proposed a pipeline for the integration of sense level knowledge into a state-of-the-art text classifier.", 
        "218": "We showed that a simple disambiguation of the input can lead to consistent performance gain, particularly for longer documents and when the granularity of the underlying sense inventory is reduced.", 
        "219": "Our pipeline is modular and can be used as an in vivo evaluation framework for WSD and sense representation techniques.", 
        "220": "We release our code and data (including pre-trained sense and supersense embeddings) at https://pilehvar.github.io/ sensecnn/ to allow further checking of the choice of hyperparameters and to allow further analysis and comparison.", 
        "221": "We hope that our work will foster future research on the integration of senselevel knowledge into downstream applications.", 
        "222": "As future work, we plan to investigate the extension of the approach to other languages and applications.", 
        "223": "Also, given the promising results observed for supersenses, we plan to investigate taskspecific coarsening of sense inventories, particularly Wikipedia, or the use of SentiWordNet (Baccianella et al., 2010), which could be more suitable for polarity detection.", 
        "224": "Acknowledgments  The authors gratefully acknowledge the support of the MRC grant No.", 
        "225": "MR/M025160/1 for PheneBank and ERC Consolidator Grant MOUSSE No.", 
        "226": "726487.", 
        "227": "Jose Camacho-Collados is supported by a Google Doctoral Fellowship in Natural Language Processing.", 
        "228": "Nigel Collier is supported by EPSRC Grant No.", 
        "229": "EP/M005089/1.", 
        "230": "We thank Jim McManus for his suggestions on the manuscript and the anonymous reviewers for their helpful comments."
    }, 
    "document_id": "P17-1170.pdf.json"
}
