{
    "abstract_sentences": {
        "1": "Abstractive summarization is the ultimate goal of document summarization research, but previously it is less investigated due to the immaturity of text generation techniques.", 
        "2": "Recently impressive progress has been made to abstractive sentence summarization using neural models.", 
        "3": "Unfortunately, attempts on abstractive document summarization are still in a primitive stage, and the evaluation results are worse than extractive methods on benchmark datasets.", 
        "4": "In this paper, we review the difficulties of neural abstractive document summarization, and propose a novel graph-based attention mechanism in the sequence-to-sequence framework.", 
        "5": "The intuition is to address the saliency factor of summarization, which has been overlooked by prior works.", 
        "6": "Experimental results demonstrate our model is able to achieve considerable improvement over previous neural abstractive models.", 
        "7": "The data-driven neural abstractive method is also competitive with state-of-the-art extractive methods.ive summarization is the ultimate goal of document summarization research, but previously it is less investigated due to the immaturity of text generation techniques.", 
        "8": "Recently impressive progress has been made to abstractive sentence summarization using neural models.", 
        "9": "Unfortunately, attempts on abstractive document summarization are still in a primitive stage, and the evaluation results are worse than extractive methods on benchmark datasets.", 
        "10": "In this paper, we review the difficulties of neural abstractive document summarization, and propose a novel graph-based attention mechanism in the sequence-to-sequence framework.", 
        "11": "The intuition is to address the saliency factor of summarization, which has been overlooked by prior works.", 
        "12": "Experimental results demonstrate our model is able to achieve considerable improvement over previous neural abstractive models.", 
        "13": "The data-driven neural abstractive method is also competitive with state-of-the-art extractive methods."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 1171\u20131181 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1108  1 Introduction  Document summarization is a task to generate a fluent, condensed summary for a document, and keep important information.", 
        "2": "As a useful technique to alleviate the information overload people are facing today, document summarization has been extensively investigated.", 
        "3": "Efforts on document summarization can be categorized to extractive and abstractive methods.", 
        "4": "Extractive methods produce the summary of a document by extracting sentences from the original document.", 
        "5": "They have the advantage of producing fluent sentences and\npreserving the meaning of original documents, but also inevitably face the drawbacks of information redundancy and incoherence between sentences.", 
        "6": "Moreover, extraction is far from the way humans write summaries.", 
        "7": "On the contrary, abstractive methods are able to generate better summaries with the use of arbitrary words and expressions, but generating abstractive summaries is much more difficult in practice.", 
        "8": "Abstractive summarization involves sophisticated techniques including meaning representation, content organization, and surface realization.", 
        "9": "Each of these techniques has large space to be improved (Yao et al., 2017).", 
        "10": "Due to the immaturity of natural language generation techniques, fully abstractive approaches are still at the beginning and cannot always ensure grammatical abstracts.", 
        "11": "Recent neural networks enable an end-to-end framework for natural language generation.", 
        "12": "Success has been witnessed on tasks like machine translation and image captioning, together with the abstractive sentence summarization (Rush et al., 2015).", 
        "13": "Unfortunately, the extension of sentence abstractive methods to the document summarization task is not straightforward.", 
        "14": "Encoding and decoding for a long sequence of multiple sentences, currently still lack satisfactory solutions (Yao et al., 2017).", 
        "15": "Recent abstractive document summarization models are yet not able to achieve convincing performance, with a considerable gap from extractive methods.", 
        "16": "In this paper, we review the key factors of document summarization, i.e., the saliency, fluency, coherence, and novelty requirements of the generated summary.", 
        "17": "Fluency is what neural generation models are naturally good at, but the other factors are less considered in previous neural abstractive models.", 
        "18": "A recent study (Chen et al., 2016) starts to consider the factor of novelty, using a distraction mechanism to avoid redundancy.", 
        "19": "As far as we\n1171\nknow, however, saliency has not been addressed by existing neural abstractive models, despite its importance for summary generation.", 
        "20": "In this work, we study how neural summarization models can discover the salient information of a document.", 
        "21": "Inspired by the graph-based extractive summarization methods, we introduce a novel graph-based attention mechanism in the encoderdecoder framework.", 
        "22": "Moreover, we investigate the challenges of accepting and generating long sequences for sequence-to-sequence (seq2seq) models, and propose a new hierarchical decoding algorithm with a reference mechanism to generate the abstractive summaries.", 
        "23": "The proposed method is able to tackle the constraints of saliency, nonredundancy, information correctness, and fluency under a unified framework.", 
        "24": "We conduct experiments on two large-scale corpora with human generated summaries.", 
        "25": "Experimental results demonstrate that our approach consistently outperforms previous neural abstractive summarization models, and is also competitive with state-of-the-art extractive methods.", 
        "26": "We organize the paper as follows.", 
        "27": "Section 2 introduces related work.", 
        "28": "Section 3 describes our method.", 
        "29": "In Section 4 we present the experiments and have discussion.", 
        "30": "Finally in Section 5 we conclude this paper.", 
        "31": "2 Related Work    2.1 Extractive Summarization Methods  Document summarization can be categorized to extractive methods and abstractive methods.", 
        "32": "Extractive methods extract sentences from the original document to form the summary.", 
        "33": "Notable early works include (Edmundson, 1969; Carbonell and Goldstein, 1998; McDonald, 2007).", 
        "34": "In recent years much progress has also been made under traditional extractive frameworks (Li et al., 2013; Dasgupta et al., 2013; Nishikawa et al., 2014).", 
        "35": "Neural networks have also been widely investigated on the extractive summarization task.", 
        "36": "Earlier works explore to use deep learning techniques in the traditional framework (Kobayashi et al., 2015; Yin and Pei, 2015; Cao et al., 2015a,b).", 
        "37": "More recent works predict the extraction of sentences in a more data-driven way.", 
        "38": "Cheng and Lapata (2016) propose an encoder-decoder approach where the encoder learns the representation of sentences and documents while the decoder classifies each sentence using an attention mechanism.", 
        "39": "Nal-\nlapati et al.", 
        "40": "(2017) propose a recurrent neural network (RNN)-based sequence model for extractive summarization of documents.", 
        "41": "Neural sentence extractive models are able to leverage large-scale training data and achieve performance better than traditional extractive summarization methods.", 
        "42": "2.2 Abstractive Summarization Methods  Abstractive summarization aims at generating the summary based on understanding the input text.", 
        "43": "It involves multiple subproblems like simplification, paraphrasing, and fusion.", 
        "44": "Previous research is mostly restricted in one or a few of the subproblems or specific domains (Woodsend and Lapata, 2012; Thadani and McKeown, 2013; Cheung and Penn, 2014; Pighin et al., 2014; Sun et al., 2015).", 
        "45": "As for neural network models, success is achieved on sentence abstractive summarization.", 
        "46": "Rush et al.", 
        "47": "(2015) train a neural attention model on a large corpus of news documents and their headlines, and later Chopra et al.", 
        "48": "(2016) extend their work with an attentive recurrent neural network framework.", 
        "49": "Nallapati et al.", 
        "50": "(2016) introduce various effective techniques in the RNN seq2seq framework.", 
        "51": "These neural sentence abstraction models are able to achieve state-of-the-art results on the DUC competition of generating headlinelevel summaries for news documents.", 
        "52": "Some recent works investigate neural abstractive models on the document summarization task.", 
        "53": "Cheng and Lapata (2016) also adopt a word extraction model, which is restricted to use the words of the source document to generate a summary, although the performance is much worse than the sentence extractive model.", 
        "54": "Nallapati et al.", 
        "55": "(2016) extend the sentence summarization model by trying a hierarchical attention architecture and a limited vocabulary during the decoding phase.", 
        "56": "However these models still investigate few properties of the document summarization task.", 
        "57": "Chen et al.", 
        "58": "(2016) first attempt to explore the novelty factor of summarization, and propose a distraction-based attentional model.", 
        "59": "Unfortunately these state-ofthe-art neural abstractive summarization models are still not competitive to extractive methods, and there are several problems remain to be solved.", 
        "60": "3 Our Method    3.1 Overview  In this section we introduce our method.", 
        "61": "We adopt an encoder-decoder framework, which is\nwidely used in machine translation (Bahdanau et al., 2014) and dialog systems (Mou et al., 2016), etc.", 
        "62": "In particular, we use a hierarchical encoderdecoder framework similar to (Li et al., 2015), as shown in Figure 1.", 
        "63": "The main distinction of this work is that we introduce a graph-based attention mechanism which is illustrated in Figure 1b, and we propose a hierarchical decoding algorithm with a reference mechanism to tackle the difficulty of abstractive summary generation.", 
        "64": "In the following parts, we will first introduce the encoder-decoder framework, and then describe the graph-based attention and the hierarchical decoding algorithm.", 
        "65": "3.2 Encoder  The goal of the encoder is to map the input document to a vector representation.", 
        "66": "A document d is a sequence of sentences d = {si}, and a sentence si is a sequence of words si = {wi,k}.", 
        "67": "Each word wi,k is represented by its distributed representation ei,k, which is mapped by a word embedding matrix Ev.", 
        "68": "We adopt a hierarchical encoder framework, where we use a word encoder encword to encode the words of a sentence si into the sentence representation, and use a sentence encoder encsent to encode the sentences of a document d into the document representation.", 
        "69": "The input to the word encoder is the word sequence of a sentence, appended with an \u201c<eos>\u201d token indicating the end of a sentence.", 
        "70": "The word encoder sequentially updates its hidden state after receiving each word, as hi,k = encword(hi,k\u22121, ei,k).", 
        "71": "The last hidden state (after the word encoder receives \u201c<eos>\u201d) is denoted as hi,\u22121, and used as the embedding representation of the sentence si, denoted as xi.", 
        "72": "A sentence encoder is used to sequentially receive the embeddings of the sentences, given by hi = encsent(hi\u22121,xi).", 
        "73": "A pseudo sentence of an \u201c<eod>\u201d token is appended at the end of the document to indicate the end of the whole document.", 
        "74": "The hidden state after the sentence encoder receives \u201c<eod>\u201d is treated as the representation of the input document c = h\u22121.", 
        "75": "We use the Long Short-Term Memory (LSTM) (Hochreiter and Schmidhuber, 1997) as both the word encoder encword and sentence encoder encsent.", 
        "76": "In particular, we adopt the variant of LSTM structure in (Graves, 2013).", 
        "77": "3.3 Decoder with Attention  The decoder is used to generate output sentences {s\u2032j} according to the representation of the input\nsentences.", 
        "78": "We also use an LSTM-based hierarchical decoder framework to generate the summary, because the summary typically comprises several sentences.", 
        "79": "The sentence decoder decsent receives the document representation c as the initial state h \u2032 0 = c, and predicts the sentence representations sequentially, by h \u2032 j = decsent(h \u2032 j\u22121,x \u2032 j\u22121), where x \u2032 j\u22121 is the encoded representation of the previously generated sentence s \u2032 j\u22121.", 
        "80": "The word decoder decword receives a sentence representation h \u2032 j as the initial state h \u2032 j,0 = h \u2032 j , and predicts the word representations sequentially, by h \u2032 j,k = decword(h \u2032 j,k\u22121, ej,k\u22121), where ej,k\u22121 is the embedding of the previously generated word.", 
        "81": "The predicted word representations are mapped to vectors of the vocabulary size dimension, and then normalized by a softmax layer as the probability distribution of generating the words in the vocabulary.", 
        "82": "A word decoder stops when it generates the \u201c<eos>\u201d token and similarly the sentence decoder stops when it generates the \u201c<eod>\u201d token.", 
        "83": "In primitive decoder models, c is the same for generating all the output words, which requires c to be a sufficient representation for the whole input sequence.", 
        "84": "The attention mechanism (Bahdanau et al., 2014) is usually introduced to alleviate the burden of remembering the whole input sequence, and to allow the decoder to pay different attention to different parts of input at different generation states.", 
        "85": "The attention mechanism sets a different cj when generating sentence j, by cj = \u2211 i \u03b1 j ihi.", 
        "86": "\u03b1ji indicates how much the i-th original sentence si contributes to generating the j-th sentence.", 
        "87": "\u03b1 j i is usually computed as:\n\u03b1ji = e \u03b7 ( hi,h \u2032 j )\n\u2211 l e \u03b7(hl,h\u2032j)\n(1)\nwhere \u03b7 is the function modeling the relation between hi and h \u2032 j .", 
        "88": "\u03b7 can be defined using various functions including \u03b7 (a,b) = aTb, \u03b7 (a,b) = aTMb, and even a non-linear function achieved by a multi-layer neural network.", 
        "89": "In this paper we use \u03b7 (a,b) = aTMb where M is a parameter matrix.", 
        "90": "3.4 Graph-based Attention Mechanism  Traditional attention computes the importance score of a sentence si, when generating sentence s \u2032 j , according to the relation between the hidden state hi and current decoding state h \u2032 j , as shown\nin Figure 1a.", 
        "91": "This attention mechanism is useful in scenarios like machine translation and image captioning, because the model is able to learn a relevance mapping between the input and output.", 
        "92": "However, for document summarization, it is not easy for the model to learn how to summarize the salient information of a document, i.e., which sentences are more important to a document.", 
        "93": "To tackle this challenge, we learn from graphbased extractive summarization models TextRank (Mihalcea and Tarau, 2004) and LexRank (Erkan and Radev, 2004), which are based on the PageRank (Page et al., 1999) algorithm.", 
        "94": "These unsupervised graph-based models show good ability to identify important sentences in a document.", 
        "95": "The underlying idea is that a sentence is important in a document if it is heavily linked with many important sentences (Wan, 2010).", 
        "96": "In graph-based extractive summarization, a graph G is constructed to rank the original sentences.", 
        "97": "The vertices V are the set of n sentences to be considered, and the edges E are the relations between the sentences, which are typically modeled by the similarity of sentences.", 
        "98": "Let W \u2208 Rn\u00d7n be the adjacent matrix.", 
        "99": "Then the saliency scores of the sentences are determined by making use of the global information on the graph recursively, as:\nf (t+ 1) = \u03bbWD\u22121f(t) + (1\u2212 \u03bb)y (2)\nwhere f = [f1, .", 
        "100": ".", 
        "101": ".", 
        "102": ", fn] \u2208 Rn denotes the rank scores of the n sentences.", 
        "103": "f(t) denotes the rank scores at the t-th iteration.", 
        "104": "D is a diagonal matrix with its (i, i)-element equal to the sum of the i-th column of W .", 
        "105": "Assume we use hi as the representation of si, and W (i, j) = hTi Mhj , where M is a parameter matrix to be learned.", 
        "106": "\u03bb is a damping\nfactor.", 
        "107": "y \u2208 Rn with all elements equal to 1/n.", 
        "108": "The solution of f can be calculated using the closedform:\nf = (1\u2212 \u03bb)(I \u2212 \u03bbWD\u22121)\u22121y (3) In the graph model, the importance score of a sentence si is determined by the relation between hi and the {hl} of all other sentences.", 
        "109": "Relatively, in traditional attention mechanisms, the importance (attention) score \u03b1ji is determined by the relation between hi and h \u2032 j , regardless of other original sentences.", 
        "110": "In our model we hope to combine the two effects, and compute the rank scores of the original sentences regarding h\n\u2032 j , so that the\nimportance scores of original sentences are different when decoding different state h\n\u2032 j , denoted\nby f j .", 
        "111": "In our model we use the scores f j to compute the attention.", 
        "112": "Therefore, h\n\u2032 j should be\nconsidered in the graph model.", 
        "113": "Inspired by the query-focused graph-based extractive summarization model (Wan et al., 2007), we realize this by applying the idea of topic-sensitive PageRank (Haveliwala, 2002), which is to rank the sentences with the concern of their relevance to the topic.", 
        "114": "We treat the current decoding state h\n\u2032 j as the topic and\nadd it into the graph as the 0-th pseudo-sentence.", 
        "115": "Given a topic T , the topic-sensitive PageRank is similar to Eq.", 
        "116": "3 except that y becomes:\nyT = { 1 |T | i \u2208 T 0 i /\u2208 T\n(4)\nTherefore yT is always a one hot vector and only y0 = 1, indicating the 0-th sentence is s \u2032 j .", 
        "117": "Denote W j as the new adjacent matrix added with h \u2032 j , and D\nj as the new diagonal matrix corresponding to W j .", 
        "118": "Then the convergence score vector f j contains the importance scores for all the\ninput sentences when generating sentence s \u2032 j , as:\nf j = (1\u2212 \u03bb)(I \u2212 \u03bbW jDj\u22121)\u22121yT (5)\nThe new scores f j can be used to compute the graph-based attention when decoding h\n\u2032 j , to find\nthe sentences which are both globally important and relevant to current decoding state h\n\u2032 j .", 
        "119": "In-\nspired by (Chen et al., 2016) we adopt a distraction mechanism to compute the final attention value \u03b1ji , which subtracts the rank scores of the previous step, to penalize the model from attending to previously attended sentences, and also help to normalize the ranked scores f j .", 
        "120": "The graph-based attention is finally computed as:\n\u03b1ji = max(f ji \u2212 f j\u22121 i , 0)\u2211\nl ( max(f jl \u2212 f j\u22121 l , 0) ) (6)\nwhere f0 is initialized with all elements equal to 1/n.", 
        "121": "The graph-based attention will only focus on those sentences ranked higher over the previous decoding step, so that it concentrates more on the sentences which are both salient and novel.", 
        "122": "Both Eq.", 
        "123": "5 and Eq.", 
        "124": "6 are differentiable; thus we can use the graph-based attention function Eq.", 
        "125": "6 to replace the traditional attention function Eq.", 
        "126": "1, and the neural model using the graph-based attention can also be trained using traditional gradientbased methods.", 
        "127": "3.5 Model Training  The loss function L of the model is the negative log likelihood of generating summaries over the training set D:\nL = \u2211\n(Y,X)\u2208D \u2212 log p(Y |X; \u03b8) (7)\nwhere X = { x1, .", 
        "128": ".", 
        "129": ".", 
        "130": ", x|X| } and Y ={\ny1, .", 
        "131": ".", 
        "132": ".", 
        "133": ", y|Y | }\ndenote the word sequences of a document and its summary respectively, including the \u201c<eos>\u201d and \u201c<eod>\u201d tokens for structure information.", 
        "134": "Then\nlog p(Y |X; \u03b8) = |Y |\u2211\n\u03c4=1\nlog p (y\u03c4 | {y1, .", 
        "135": ".", 
        "136": ".", 
        "137": ", y\u03c4\u22121} , c; \u03b8)\n(8) and log p (y\u03c4 | {y1, .", 
        "138": ".", 
        "139": ".", 
        "140": ", y\u03c4\u22121} , c; \u03b8) is modeled by the LSTM encoder and decoder.", 
        "141": "We use the Adamax (Kingma and Ba, 2014) gradient-based\noptimization method to optimize the model parameters \u03b8.", 
        "142": "3.6 Decoding Algorithm  We find there are several problems during the generation of summary, including out-of-vocabulary (OOV) words, information incorrectness, error accumulation and repetition.", 
        "143": "These problems make the generated abstractive summaries far from satisfactory.", 
        "144": "In this work, we propose a hierarchical decoding algorithm with a reference mechanism to tackle these difficulties, which effectively improves the quality of generated summaries.", 
        "145": "As OOV words frequently occur in name entities, we can first identify the entities of a document using NLP toolkit like Stanford CoreNLP1.", 
        "146": "Then we prefix every entity with an \u201c@entity\u201d token and a number indicating how many words the entity has.", 
        "147": "We hope the entity prefixes can help better deal with entities which have more than one word, and help improve the accuracy of recovering OOV words in entities.", 
        "148": "After decoding we recover the OOV words by matching entities in the original document according to the contexts.", 
        "149": "For the hierarchical decoder, a major challenge is that same sentences or phrases are often repeated in the output.", 
        "150": "A beam search strategy may help to alleviate the repetition in a sentence, but the repetition in the whole generated summary is remained a problem.", 
        "151": "The word-level beam search is not easy to be extended to the sentence level.", 
        "152": "The reason is that the K-best sentences generated by a word decoder will mostly be similar to each other, which is also noticed by Li et al.", 
        "153": "(2016).", 
        "154": "In this paper we propose a hierarchical beam search algorithm with a reference mechanism.", 
        "155": "The hierarchical algorithm comprises K-best word-level beam search and N -best sentencelevel beam search.", 
        "156": "At the word level, the only difference to vanilla beam search is that we add an additional term to the score p\u0303(y\u03c4 ) of generating word y\u03c4 , and now score(y\u03c4 ) = p\u0303(y\u03c4 ) + \u03b3 (ref(Y\u03c4\u22121 + y\u03c4 , s\u2217)\u2212 ref(Y\u03c4\u22121, s\u2217)), where Y\u03c4\u22121 = {y1, .", 
        "157": ".", 
        "158": ".", 
        "159": ", y\u03c4\u22121} and p\u0303(y\u03c4 ) = log p (y\u03c4 |Y\u03c4\u22121, c; \u03b8).", 
        "160": "s\u2217 is an original sentence to refer to.", 
        "161": "ref is a function which calculates the ratio of bigram overlap between two texts.", 
        "162": "The added term aims to favor the generated word y\u03c4 with improving the bigram overlap between current generated summary Y\u03c4\u22121 and the target orig-\n1http://stanfordnlp.github.io/CoreNLP/\ninal sentence s\u2217.", 
        "163": "At the word decoder level, the reference mechanism helps to both improve the information correctness and avoid redundancy.", 
        "164": "Because the reference score is based on the bigram overlap improvement to the whole generated summary Y\u03c4\u22121, the awareness of previously generated sentences also helps alleviate sentence-level redundancy.", 
        "165": "A factor \u03b3 is introduced to control the influence of the reference mechanism.", 
        "166": "Note that because of the non-optimal search, the generated sentence will still be different to the original sentence even with an extremely large \u03b3.", 
        "167": "At the sentence level, N -best sentence beam is to keep the N generated sentences by referring to N different original sentences, which have the highest attention scores and have not been used as a reference.", 
        "168": "With referring to N different sentences, the N candidate sentences are guaranteed diverse.", 
        "169": "Sentence-level beam search is realized by maximizing the accumulated score of all the sentences generated.", 
        "170": "4 Experiments    4.1 Dataset  We conduct experiments on two large-scale corpora of CNN and DailyMail, which have been widely used in neural document summarization tasks.", 
        "171": "The corpora are originally constructed in (Hermann et al., 2015) by collecting human generated abstractive highlights from the news stories in the CNN and DailyMail website.", 
        "172": "The statistics and split of the two datasets are listed in Table 1.", 
        "173": "4.2 Implementation  We use the corpora which are already provided with labeled entities (Nallapati et al., 2016).", 
        "174": "The documents and summaries are first lowercased and tokenized, and all digit characters are replaced with the \u201c#\u201d symbol, similar to (Nallapati et al., 2016, 2017).", 
        "175": "We keep the 40,000 most frequently occurring words and other words are replaced with the \u201c<OOV>\u201d token.", 
        "176": "We use Theano2 for implementation.", 
        "177": "For the word encoder and decoder we use three layers of LSTM, and for the sentence encoder and decoder we use one layer of LSTM.", 
        "178": "The dimension of hidden vectors are all 512.", 
        "179": "We use pre-trained GloVe (Pennington et al., 2014) vectors3 for the initialization of word vectors, which will be further trained in the model.", 
        "180": "The dimension of word vectors is 100. \u03bb is set to 0.9.", 
        "181": "The parameters of Adamax are set to those provided in (Kingma and Ba, 2014).", 
        "182": "The batch size is set to 8 documents, and an epoch is set containing 10,000 randomly sampled documents.", 
        "183": "Convergence is reached within 200 epochs on the DailyMail dataset and 120 epochs on the CNN dataset.", 
        "184": "It takes about one day for every 30 epochs on a GTX-1080 GPU card.", 
        "185": "\u03b3 is tuned on the validation set and the best choice is 300.", 
        "186": "The beam sizes for word decoder and sentence decoder are 15 and 2, respectively.", 
        "187": "4.3 Evaluation  We adopt the widely used ROUGE (Lin, 2004) toolkit for evaluation.", 
        "188": "We first compare with the reported results in (Chen et al., 2016) including various traditional extractive methods and a state-of-the-art abstractive model (DistractionM3) on the CNN dataset, as shown in Table 2.", 
        "189": "Uni-GRU is a non-hierarchical seq2seq baseline model.", 
        "190": "In Table 3 we compare our method with the results of state-of-the-art neural summarization methods reported in recent papers.", 
        "191": "Extractive models include NN-SE (Cheng and Lapata, 2016) and SummaRuNNer (Nallapati et al., 2017), while SummaRuNNer-abs is also an extractive model similar to SummaRuNNer but is trained directly on the abstractive summaries.", 
        "192": "Moreover, we include several baselines for comparison, including the baselines reported in (Cheng and Lapata, 2016) although they are tested on 500 samples of the test set.", 
        "193": "LREG is a feature based method using linear regression.", 
        "194": "NN-ABS is a neural abstractive baseline which is a simple hierarchical extension of (Rush et al., 2015).", 
        "195": "NN-WE is the abstractive model which restricts the generation of words from the original document.", 
        "196": "Lead-3 is a strong extractive baseline that uses the lead three sentences as the summary.", 
        "197": "In Table 4 we compare our model with the abstractive attentional encoder-decoder models in\n2https://github.com/Theano/Theano 3http://nlp.stanford.edu/projects/glove\n(Nallapati et al., 2016), which leverage several effective techniques and achieve state-of-the-art performance on sentence abstractive summarization tasks.", 
        "198": "The words-lvt2k and words-lvt2k-ptr are flat models and words-lvt2k-hieratt is a hierarchical extension.", 
        "199": "Results in Table 2 show our abstractive method is able to outperform traditional extractive methods and the distraction-based abstractive model.", 
        "200": "The results in Tables 3 and 4 show that our method has considerable improvement over neural abstractive baselines, and is able to outperform stateof-the-art neural extractive methods.", 
        "201": "An interesting observation is the results of the hierarchical model in Table 4 are lower than the flat models, which may demonstrate the difficulty for a traditional attention model to identify the important information in a document.", 
        "202": "We also conducted human evaluation on 20 random samples from the DailyMail test set and compared the summaries generated by our method with the outputs of Lead-3, NN-SE (Cheng and\nLapata, 2016) and Distraction (Chen et al., 2016).", 
        "203": "The output summaries of NN-SE are provided by the authors, and the output summaries of Distraction are achieved by running the code provided by the authors on the DailyMail dataset.", 
        "204": "Three participants were asked to compare the generated summaries with the human summaries, and assess each summary from four independent perspectives: (1) How informative the summary is?", 
        "205": "(2) How concise the summary is?", 
        "206": "(3) How coherent (between sentences) the summary is?", 
        "207": "(4) How fluent, grammatical the sentences of a summary are?", 
        "208": "Each property is assessed with a score from 1 (worst) to 5 (best).", 
        "209": "The average results are presented in Table 5.", 
        "210": "As shown in Table 5, our method consistently outperforms the previous state-of-the-art abstractive method Distraction.", 
        "211": "Compared with extractive methods, our method is able to generate more informative and concise summaries, which shows the advantage of abstractive methods.", 
        "212": "The Distraction method in fact usually produces the shortest summaries, but the conciseness score is low mainly because sometimes it generates repeated sentences.", 
        "213": "The repetition also causes Distraction to achieve a low coherence score.", 
        "214": "Concerning coherence and fluency, our abstractive method achieves slightly better scores than NN-SE, while not surprisingly Lead-3 gets the best scores.", 
        "215": "The fluency scores show the good ability of the abstractive model to generate fluent and grammatical sentences.", 
        "216": "4.4 Model Validation  We conduct experiments to see how the model\u2019s performance is affected by the choice of the hyperparameters.", 
        "217": "For efficiency we test on 500 random samples from the DailyMail test set.", 
        "218": "Figure 2a shows the maximum average Rouge-2 F1-score achieved when the model is trained using different \u03bb values within 200 and 300 epochs.", 
        "219": "When using a larger \u03bb, the performance is better and the convergence is faster.", 
        "220": "When \u03bb = 1.0 the model fails to train because of running into a singular matrix.", 
        "221": "Figure 2b shows the results achieved when using different \u03b3 values in the hierarchical decoding algorithm.", 
        "222": "\u03b3 = 0 is the baseline of the traditional decoding algorithm which does not refer to the original document.", 
        "223": "The poor results indicate that even the model is able to learn to identify the salient information in the original document, the performance is limited by the model\u2019s ability of generating a long output sequence.", 
        "224": "That may be a reason why simple extensions of seq2seq models fail on the abstractive document summarization task.", 
        "225": "The performance is significantly improved using a reasonable \u03b3, and the optimal \u03b3 value is consistent with the one chosen on the validation set.", 
        "226": "When using an extremely large \u03b3, the permanence begins to decrease, because the model will copy too much from the original document, and at this time the generated text also becomes less fluent.", 
        "227": "Results show that introducing the reference mechanism in the hierarchical beam search is very effective.", 
        "228": "The \u03b3 factor significantly affects the results, but the optimal value is easy to be decided on a validation set.", 
        "229": "We also conduct ablation experiments on the CNN dataset to verify the effectiveness of the proposed model.", 
        "230": "Results on the CNN test set are shown in Table 6.", 
        "231": "\u201cw/o GraphAtt\u201d is to replace\nthe graph-based attention by a traditional attention function.", 
        "232": "\u201cw/o SentenceBeam\u201d is to remove the sentence-level beam search.", 
        "233": "\u201cw/o BeamSearch\u201d is to remove both the sentence-level and word-level beam search, and use a greedy decoding algorithm with the reference mechanism.", 
        "234": "As seen from Table 6, the graph-based attention mechanism is significantly better than traditional attention mechanism for the document summarization task.", 
        "235": "Beam search helps significantly improve the generated summaries.", 
        "236": "Our proposed decoding algorithm enables a sentence-level beam search, which helps improve the generated summaries with multiple sentences.", 
        "237": "4.5 Case Study  We show the case study of a sample4 from the DailyMail test set in Figure 3.", 
        "238": "We show the \u201c@entity\u201d and number here although they are removed in the evaluation.", 
        "239": "We compare our result with the output by a model using traditional attention as Baseline Attention.", 
        "240": "We also show the output generated by a Baseline Decoder, which sets \u03b3 = 0 and does not use the sentence-level beam search, to study the difficulty for a traditional decoder to generate multiple sentences.", 
        "241": "Many observations can be found in Figure 3.", 
        "242": "The lead three sentences mainly focus on the money information and are not sufficient.", 
        "243": "As for the Baseline Decoder, first it usually ends the generation too early.", 
        "244": "The \u201c<eod>\u201d token indicates where the original output stops.", 
        "245": "When we force the decoder not to end here, the model shows the ability to continue producing the important information.", 
        "246": "However, two flaws are presented.", 
        "247": "First is the repetition of \u201c## - year -\n4The original story and highlights can be found at http://www.dailymail.co.uk/news/article-3041766/Benefitscheat-pocketed-17-000-taxpayers-money.html\nold\u201d.", 
        "248": "Because the word decoder is unaware of the history generated sentences, it repeats generating the sequence as the subject all the time.", 
        "249": "Second, more importantly, is the information incorrectness.", 
        "250": "The \u201c## - month - old\u201d is not appropriate to describe the heroine, and the \u201csix - month prison sentence\u201d is in fact \u201cthree months\u201d.", 
        "251": "Information incorrectness occurs because, for a decoder, it aims at generating a fluent sentence according to the input representation.", 
        "252": "However, no favor of consistent with the original input is concerned.", 
        "253": "The proposed hierarchical decoding algorithm helps to alleviate the two problems.", 
        "254": "The awareness of all the generated sentences helps prevent from always generating some important information.", 
        "255": "The favor of bigram overlapping with the original sentences helps generate more correct sentences.", 
        "256": "For example the model is able to correctly distinguish between the \u201cthree-month sentence\u201d and the \u201c##- month suspend\u201d.", 
        "257": "In conclusion, our method is able to identify the most important information in the original document, and the decoding algorithm we propose is able to generate a more discourse-fluent and information-correct abstractive summary.", 
        "258": "The visualization of the graph-based attention when our method generates the presented example\nis shown in Figure 4.", 
        "259": "It seems that the graph-based attention mechanism is able to find the important sentences in the input document, and the distraction mechanism makes the decoder focus on different sentences during decoding.", 
        "260": "Gradually the decoder attends to \u201c<eod>\u201d until it stops.", 
        "261": "5 Conclusion and Future Work  In this paper we tackle the challenging task of abstractive document summarization, which is still less investigated to date.", 
        "262": "We study the difficulty of the abstractive document summarization task, and address the need of finding salient content from the original document, which is overlooked by previous studies.", 
        "263": "We propose a novel graph-based attention mechanism in a hierarchical encoderdecoder framework, and propose a hierarchical beam search algorithm to generate multi-sentence summary.", 
        "264": "Extensive experiments verify the effectiveness of the proposed method.", 
        "265": "Experimental results on two large-scale datasets demonstrate our method achieves state-of-the-art abstractive document summarization performance.", 
        "266": "It is also able to achieve competitive results with state-of-the-art neural extractive summarization models.", 
        "267": "There is lots of future work we can do.", 
        "268": "An appealing direction is to investigate the neural abstractive method on the multi-document summarization task, which is more challenging and lacks training data.", 
        "269": "Further endeavor may be needed.", 
        "270": "Acknowledgments  This work was supported by 863 Program of China (2015AA015403), NSFC (61331011), and Key Laboratory of Science, Technology and Standard in Press Industry (Key Laboratory of Intelligent Press Media Technology).", 
        "271": "We thank the anonymous reviewers for helpful comments and Xinjie Zhou, Jianmin Zhang for doing human evaluation.", 
        "272": "Xiaojun Wan is the corresponding author."
    }, 
    "document_id": "P17-1108.pdf.json"
}
