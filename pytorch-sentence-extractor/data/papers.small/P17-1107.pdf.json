{
    "abstract_sentences": {
        "1": "We introduce a method for error detection in automatically annotated text, aimed at supporting the creation of high-quality language resources at affordable cost.", 
        "2": "Our method combines an unsupervised generative model with human supervision from active learning.", 
        "3": "We test our approach on in-domain and out-of-domain data in two languages, in AL simulations and in a real world setting.", 
        "4": "For all settings, the results show that our method is able to detect annotation errors with high precision and high recall."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 1160\u20131170 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1107  1 Introduction  Until recently, most of the work in Computational Linguistics has been focussed on standard written text, often from newswire.", 
        "2": "The emergence of two new research areas, Digital Humanities and Computational Sociolinguistics, have however shifted the interest towards large, noisy text collections from various sources.", 
        "3": "More and more researchers are working with social media text, historical data, or spoken language transcripts, to name but a few.", 
        "4": "Thus the need for NLP tools that are able to process this data has become more and more apparent, and has triggered a lot of work on domain adaptation and on developing more robust preprocessing tools.", 
        "5": "Studies are usually carried out on large amounts of data, and thus fully manual annotation or even error correction of automatically prelabelled text is not feasible.", 
        "6": "Given the importance of identifying noisy annotations in automatically annotated data, it is all the more surprising that up to now this area of research has been severely understudied.", 
        "7": "This paper addresses this gap and presents a method for error detection in automatically la-\nbelled text.", 
        "8": "As test cases, we use POS tagging and Named Entity Recognition, both standard preprocessing steps for many NLP applications.", 
        "9": "However, our approach is general and can also be applied to other classification tasks.", 
        "10": "Our approach is based on the work of Hovy et al.", 
        "11": "(2013) who develop a generative model for estimating the reliability of multiple annotators in a crowdsourcing setting.", 
        "12": "We adapt the generative model to the task of finding errors in automatically labelled data by integrating it in an active learning (AL) framework.", 
        "13": "We first show that the approach of Hovy et al.", 
        "14": "(2013) on its own is not able to beat a strong baseline.", 
        "15": "We then present our integrated model, in which we impose human supervision on the generative model through AL, and show that we are able to achieve substantial improvements in two different tasks and for two languages.", 
        "16": "Our contributions are the following.", 
        "17": "We provide a novel approach to error detection that is able to identify errors in automatically labelled text with high precision and high recall.", 
        "18": "To the best of our knowledge, our method is the first that addresses this task in an AL framework.", 
        "19": "We show how AL can be used to guide an unsupervised generative model, and we will make our code available to the research community.1 Our approach works particularly well in out-of-domain settings where no annotated training data is yet available.", 
        "20": "2 Related work  Quite a bit of work has been devoted to the identifcation of errors in manually annotated corpora (Eskin, 2000; van Halteren, 2000; Kveton and Oliva, 2002; Dickinson and Meurers, 2003; Loftsson, 2009; Ambati et al., 2011).", 
        "21": "1Our code is available at http://www.cl.", 
        "22": "uni-heidelberg.de/\u02dcrehbein/resources.", 
        "23": "1160\nSeveral studies have tried to identify trustworthy annotators in crowdsourcing settings (Snow et al., 2008; Bian et al., 2009), amongst them the work of Hovy et al.", 
        "24": "(2013) described in Section 3.", 
        "25": "Others have proposed selective relabelling strategies when working with non-expert annotators (Sheng et al., 2008; Zhao et al., 2011).", 
        "26": "Manual annotations are often inconsistent and annotation errors can thus be identified by looking at the variance in the data.", 
        "27": "In contrast to this, we focus on detecting errors in automatically labelled data.", 
        "28": "This is a much harder problem as the annotation errors are systematic and consistent and therefore hard to detect.", 
        "29": "Only a few studies have addressed this problem.", 
        "30": "One of them is Rocio et al.", 
        "31": "(2007) who adapt a multiword unit extraction algorithm to detect automatic annotation errors in POS tagged corpora.", 
        "32": "Their semi-automatic method is geared towards finding (a small number of) high frequency errors in large datasets, often caused by tokenisation errors.", 
        "33": "Their algorithm extracts sequences that have to be manually sorted into linguistically sound patterns and erroneous patterns.", 
        "34": "Loftsson (2009) tests several methods for error detection in POS tagged data, one of them based on the predictions of an ensemble of 5 POS taggers.", 
        "35": "Error candidates are those tokens for which the predictions of all ensemble taggers agree but that diverge from the manual annotation.", 
        "36": "This simple method yields a precision of around 16% (no.", 
        "37": "of true positives amongst the error candidates), but no information is given about the recall of the method, i.e.", 
        "38": "how many of the errors in the corpus have been identified.", 
        "39": "Rehbein (2014) extends the work of Loftsson (2009) by training a CRF classifier on the output of ensemble POS taggers.", 
        "40": "This results in a much higher precision, but with low recall (for a precision in the range of 50-60% they report a recall between 10-20%).", 
        "41": "Also related is work that addresses the issue of learning in the presence of annotation noise (Reidsma and Carletta, 2008; Beigman and Klebanov, 2009; Bekker and Goldberger, 2016).", 
        "42": "The main difference to our work lies in its different focus.", 
        "43": "While our focus is on identifying errors with the goal of improving the quality of an existing language resource, their main objective is to improve the accuracy of a machine learning system.", 
        "44": "In the next section we describe the approach of Hovy et al.", 
        "45": "(2013) and present our adaptation\nAlgorithm 1 AL with variational inference Input: classifier predictions A 1: for 1 ... n iterations do 2: procedure GENERATE(A) 3: for i = 1 ... n classifiers do 4: Ti \u223c Uniform 5: for j = 1 ... n instances do 6: Sij \u223c Bernoulli(1\u2212 \u03b8j) 7: if Sij = 0 then 8: Aij = Ti 9: else 10: Aij \u223cMultinomial(\u03bej) 11: end if 12: end for 13: end for 14: return posterior entropies E 15: end procedure 16: procedure ACTIVELEARNING(A) 17: rank J \u2192max(E) 18: for j = 1 ... n instances do 19: Oracle\u2192 label(j); 20: select random classifier i; 21: update model prediction for i(j); 22: end for 23: end procedure 24: end for\nfor semi-supervised error detection that combines Bayesian inference with active learning.", 
        "46": "3 Method    3.1 Modelling human annotators  Hovy et al.", 
        "47": "(2013) develop a generative model for Multi-Annotator Competence Estimation (MACE) to determine which annotators to trust in a crowdsourcing setting (Algorithm 1, lines 2-15).", 
        "48": "MACE implements a simple graphical model where the input consists of all annotated instances I by a set of J annotators.", 
        "49": "The model generates the observed annotations A as follows.", 
        "50": "The (unobserved) \u201ctrue\u201d label Ti is sampled from a uniform prior, based on the assumption that the annotators always try to predict the correct label and thus the majority of the annotations should, more often than not, be correct.", 
        "51": "The model is unsupervised, meaning that no information on the real gold labels is available.", 
        "52": "To model each annotator\u2019s behaviour, a binary variable Sij (also unobserved) is drawn from a Bernoulli distribution that describes whether annotator j is trying to predict the correct label for instance i or whether s/he is just spamming (a behaviour not uncommon in a crowdsourcing setting).", 
        "53": "If Sij is 0, the \u201ctrue\u201d label Ti is used to generate the annotation Aij .", 
        "54": "If Sij is 1, the predicted label Aij for instance i comes from a multinomial distribution with parameter vector \u03bej .", 
        "55": "The model parameter \u03b8j can be interpreted as a \u201ctrustworthiness\u201d parameter that describes the probability that annotator j predicts the correct label.", 
        "56": "\u03bej , on the other hand, contains information about the actual behaviour of annotator j in the case that the annotator is not trying to predict the correct label.", 
        "57": "The model parameters are learned by maximizing the marginal likelihood of the observed data, using Expectation Maximization (EM) (Dempster et al., 1977) and Bayesian variational inference.", 
        "58": "Bayesian inference is used to provide the model with priors on the annotators\u2019 behaviour and yields improved correlations over EM between the model estimates and the annotators\u2019 proficiency while keeping accuracy high.", 
        "59": "For details on the implementation and parameter settings refer to Hovy et al.", 
        "60": "(2013) and Johnson (2007).", 
        "61": "We adapt the model of Hovy et al.", 
        "62": "(2013) and apply it to the task of error detection in automatically labelled text.", 
        "63": "To that end, we integrate the variational model in an active learning (AL) setting, with the goal of identifying as many errors as possible while keeping the number of instances to be checked as small as possible.", 
        "64": "The tasks we chose in our experiments are POS tagging and NER, but our approach is general and can easily be applied to other classification tasks.", 
        "65": "3.2 Active learning  Active learning (Cohn et al., 1996) is a semisupervised framework where a machine learner is trained on a small set of carefully selected instances that are informative for the learning process, and thus yield the same accuracy as when training the learner on a larger set of randomly chosen examples.", 
        "66": "The main objective is to save time and money by minimising the need for manual annotation.", 
        "67": "Many different measures of informativeness as well as selection strategies for AL have been proposed in the literature, amongst them query-by-committee learning (Seung et al., 1992).", 
        "68": "The query-by-committee (QBC) approach uses a classifier ensemble (or committee) and selects the instances that show maximal disagreement between the predictions of the committee members.", 
        "69": "These instances are assumed to provide new information for the learning process, as the classifiers are most unsure about how to label them.", 
        "70": "The selected instances are then presented to the oracle (the human annotator), to be manually disambiguated and added to the training data.", 
        "71": "Then the\nclassifier committee is retrained on the extended training set and the next AL iteration starts.", 
        "72": "The query-by-committee strategy calls to mind previous work on error detection in manually labelled text that made use of disagreements between the predictions of a classifier ensemble and the manually assigned tag, to identify potential annotation errors in the data (Loftsson, 2009).", 
        "73": "This approach works surprisingly well, and the tradeoff between precision and recall can be balanced by adding a threshold (i.e.", 
        "74": "by considering all instances where at least N of the ensemble classifiers disagree with the manually assigned label).", 
        "75": "Loftsson (2009) reports a precision of around 16% for using a committee of five POS taggers to identify annotation errors (see section 2).", 
        "76": "Let us assume we follow this approach and apply a tagger with an average accuracy of 97% to a corpus with 100,000 tokens.", 
        "77": "We can then expect around 3,000 incorrectly tagged instances in the data.", 
        "78": "Trying to identify these with a precision of 16% means that when looking at 1,000 instances of potential errors, we can only expect to see around 160 true positive cases, and we would have to check a large amount of data in order to correct a substantial part of the annotation noise.", 
        "79": "This means that this approach is not feasible for correcting large automatically annotated data.", 
        "80": "It is thus essential to improve precision and recall for error detection, and our goal is to minimise the number of instances that have to be manually checked while maximizing the number of true errors in the candidate set.", 
        "81": "In what follows we show how we can achieve this by using active learning to guide variational inference for error detection.", 
        "82": "3.3 Guiding variational inference with AL  Variational inference is a method from calculus where the posterior distribution over a set of unobserved random variables Y is approximated by a variational distribution Q(Y ).", 
        "83": "We start with some observed data X (a set of predictions made by our committee of classifiers) The distribution of the true labels Y = {y1, y2, ..., yn} is unknown.", 
        "84": "As it is too difficult to work with the posterior p(y|x), we try to approximate it with a much simpler distribution q(y) which models y for each observed x.", 
        "85": "To that end, we define a family Q of distributions that are computationally easy to work with, and pick the q in Q that best approximates the posterior, where q(y) is called the variational approximation to the posterior p(y|x).", 
        "86": "For computing variational inference, we use the implementation of Hovy et al.", 
        "87": "(2013)2 who jointly optimise p and q using variational EM.", 
        "88": "They alternate between adjusting q given the current p (Estep) and adjusting p given the current q (M-step).", 
        "89": "In the E-step, the objective is to find the q that minimises the divergence between the two distributions, D(q||p).", 
        "90": "In the M-step, we keep q fixed and try to adjust p. The two steps are repeated until convergence.", 
        "91": "We extend the model for use in AL as follows (Algorithm 1).", 
        "92": "We start with the predictions from a classifier ensemble and learn a variational inference model on the data (lines 2-15).", 
        "93": "We then use the posterior entropies according to the current model, and select the c instances with the highest entropies for manual validation.", 
        "94": "These instances are presented to the oracle who assigns the true label.", 
        "95": "We save the predictions made by the human annotator and, in the next iteration, use them in the variational E-step as a prior to guide the learning process.", 
        "96": "In addition, we randomly pick one of the classifiers and update its prediction by replacing the classifier\u2019s prediction with the label we obtained from the oracle.3 In the next iteration, we train the variational model on the updated predictions.", 
        "97": "By doing this, we also gradually improve the quality of the input to the variational model.", 
        "98": "In a typical AL approach, the main goal is to improve the classifiers\u2019 accuracy on new data.", 
        "99": "In contrast to that, our approach aims at increasing precision and recall for error detection in automatically labelled data, and thus at minimising the time needed for manual correction.", 
        "100": "Please note that in our model we do not need to retrain the classifiers used for predicting the labels but only retrain the model that determines which of the classifiers\u2019 predictions we can trust.", 
        "101": "This is crucial as it saves time and makes it easy to integrate the approach in a realistic scenario with a real human annotator in the loop.", 
        "102": "4 Data and setup  In our first experiment (\u00a75.1) we want to assess the benefits of our approach for finding POS errors in standard newspaper text (in-domain setting) where\n2MACE is available for download from http://www.isi.edu/publications/licensed-sw/mace\n3We also experimented with updating more than one classifier, which resulted in lower precision and recall.", 
        "103": "We take this as evidence for the importance of keeping the variance in the predictions high.", 
        "104": "we have plenty of training data.", 
        "105": "For this setting, we use the English Penn Treebank, annotated with parts-of-speech, for training and testing.", 
        "106": "In the second experiment (\u00a75.2) we apply our method in an out-of-domain setting where we want to detect POS errors in text from new domains where no training data is yet available (outof-domain setting).", 
        "107": "For this we use the Penn Treebank as training data, and test our models on data from the English Web treebank (Bies et al., 2012).", 
        "108": "To test our method on a different task and a new language, we apply it to Named Entity Recognition (NER) (experiment 3, \u00a75.3), using out-ofdomain data from the Europarl corpus.4 The data was created by Faruqui and Pado (2010) and includes the first two German Europarl session transcripts, manually annotated with NER labels according to the CoNLL 2003 annotation guidelines (Tjong Kim Sang and De Meulder, 2003).", 
        "109": "The first three experiments are simulation studies.", 
        "110": "In our last experiment (\u00a75.4), we show that our method also works well in a real AL scenario with a human annotator in the loop.", 
        "111": "For this we use the out-of-domain setting from the second experiment and let the annotators correct POS errors in two web genres (answers, weblogs) from the English Web treebank.", 
        "112": "4.1 Tools for preprocessing  For the POS tagging experiments, we use the following taggers to predict the labels:\n\u2022 bi-LSTM-aux (Plank et al., 2016) \u2022 HunPos (Hala\u0301csy et al., 2007) \u2022 Stanford postagger (Toutanova et al., 2003) \u2022 SVMTool (Gime\u0301nez and Ma\u0300rquez, 2004) \u2022 TreeTagger (Schmid, 1999) \u2022 TWeb (Ma et al., 2014) \u2022 Wapiti (Lavergne et al., 2010)\nThe taggers implement a range of different algorithms, including HMMs, decision trees, SVMs, maximum entropy and neural networks.", 
        "113": "We train the taggers on subsets of 20,000 sentences extracted from the standard training set of the PTB (sections 00-18)5 and use the development and test set (sections 19-21 and 22-24) for testing.", 
        "114": "The training times of the taggers vary considerably, ranging from a few seconds (HunPos) to several\n4The NER taggers have been trained on written German data from the HGC and DeWaC corpora (see \u00a74.1).", 
        "115": "5For taggers that use a development set during training, we also extract the dev data from sections 00-18 of the PTB.", 
        "116": "hours.", 
        "117": "This is a problem for the typical AL setting where it is crucial not to keep the human annotators waiting for the next instance while the system retrains.", 
        "118": "A major advantage of our setup is that we do not need to retrain the baseline classifiers as we only use them once, for preprocessing, before the actual error detection starts.", 
        "119": "For the NER experiment, we use tools for which pretrained models for German are available, namely GermaNER (Benikova et al., 2015), and the StanfordNER system (Finkel and Manning, 2009) with models trained on the HGC and the DeWaC corpus (Baroni et al., 2009; Faruqui and Pado\u0301, 2010).6  4.2 Evaluation measures  We report results for different evaluation measures to asses the usefulness of our method.", 
        "120": "First, we report tagger accuracy on the data, obtained during preprocessing (figure 1).", 
        "121": "This corresponds to the accuracy of the labels in the corpus before error correction (baseline accuracy).", 
        "122": "Label accuracy measures the accuracy of the labels in the corpus after N iterations of error correction.", 
        "123": "Please note that we do not retrain the tools used for preprocessing, but assess the quality of the data after N iterations of manual inspection and correction.", 
        "124": "We also report precision and recall for the error detection itself.", 
        "125": "True positives (tp) refers to the number of instances selected for correction during AL that were actual annotation errors.", 
        "126": "We compute Error detection (ED) precision as the number of true positives divided by the number of all instances selected for error correction duringN iterations of AL, and recall as the ratio of correctly identified errors to all errors in the data.", 
        "127": "4.3 Baseline accuracies  Table 1 shows the accuracies for the individual POS taggers used in experiments 1, 2 and 4.", 
        "128": "Please note that this is not a fair comparison as each tagger was trained on a different randomly sampled subset of the data and, crucially, we did not optimise any of the taggers but used default settings in all experiments.7 The accuracies of the\n6To increase the number of annotators we use an older version of the StanfordNER (2009-01-16) and a newer version (2015-12-09), with both the DeWaC and HGC models, resulting in a total of 5 annotators for the NER task.", 
        "129": "7Please note that the success of our method relies on the variation in the ensemble predictions, and thus improving the accuracies for preprocessing is not guaranteed to improve precision for the error detection task.", 
        "130": "baseline taggers vary between 94-97%, with an average accuracy of 95.8%.", 
        "131": "The majority baseline yields better results than the best individual tagger, with an accuracy of 97.3%.", 
        "132": "Importantly, the predictions made by the variational inference model (MACE) are in the same range as the majority baseline and thus do not improve over the\nmajority vote on the automatically labelled data.", 
        "133": "To be able to run the variational inference model in an AL setting, we limit the size of the test data (the size of the pre-annotated data to be corrected) to batches of 5,000 tokens.", 
        "134": "This allows us to reduce the training time of the variational model and avoid unnecessary waiting times for the oracle.", 
        "135": "For NER (experiment 3), in contrast to POS tagging, we have a much smaller label set with only 5 labels (PER, ORG, LOC, MISC, O), and a highly skewed distribution where most of the instances belong to the negative class (O).", 
        "136": "To ensure a sufficient number of NEs in the data, we increase the batch size and use the whole out-of-domain testset with 4,395 sentences in the experiment.8 The overall accuracies of the different NER models are all in the range of 97.7-98.6%.", 
        "137": "Results for individual classes, however, vary considerably between the different models.", 
        "138": "5 Results    5.1 Experiment 1: In-domain setting  In our first experiment, we explore the benefits of our AL approach to error detection in a setting where we have a reasonably large amount of training data, and where training and test data come from the same domain (in-domain setting).", 
        "139": "We implement two selection strategies.", 
        "140": "The first one is a Query-by-Committee approach (QBC) where we use the disagreements in the predictions of our tagger ensemble to identify potential errors.", 
        "141": "For each instance i, we compute the entropy over the predicted labels M by the 7 taggers and select\n8This is possible because, given the lower number of class labels, the training time for the VI-AL model for NER is much shorter than for the POS data.", 
        "142": "the N instances with the highest entropy (Equation 1).", 
        "143": "H = \u2212 M\u2211\nm=1\nP (yi = m) logP (yi = m) (1)\nFor each selected instance, we then replace the label predicted by majority vote with the gold label.", 
        "144": "Please note that the selected instances might already have the correct label, and thus the replacement does not necessarily increase accuracy but only does so when the algorithm selects a true error.", 
        "145": "We then evaluate the accuracy of the majority predictions after updating the N instances ranked highest for entropy9 (figure 1).", 
        "146": "We compare the QBC setting to our integrated approach where we guide the generative model with human supervision.", 
        "147": "Here the instances are selected according to their posterior entropy as assigned by the variational model, and after being disambiguated by the oracle, the predictions of a randomly selected classifier are updated with the oracle tags.", 
        "148": "We run the AL simulation for 500 iterations10 and select one new instance in each iteration.", 
        "149": "After replacing the predicted label for this instance by the gold label, we retrain the variational model and select the next instance, based on the new posterior probabilities learned on the modified dataset.", 
        "150": "We refer to this setting as VIAL.", 
        "151": "Table 2 shows POS tag accuracies (lab-acc) after N iterations of active learning.", 
        "152": "For the QBC setting, we see a slight increase in label accuracy of 0.3% (from 97.6 to 97.9) after manually validating 10% of the instances in the data.", 
        "153": "For the first 100 instances, we see a precision of 13% for error\n9Please recall that, in contrast to a traditional QBC active learning approach, we do not retrain the classifiers but only update the labels predicted by the classifiers.", 
        "154": "10We stopped after 500 iterations as this was enough to detect nearly all errors in the WSJ data.", 
        "155": "detection.", 
        "156": "In the succeeding iterations, the precision slowly decreases as it gets harder to identify new errors.", 
        "157": "We even observe a slight decrease in label accuracy after 400 iterations that is due to the fact that ties are broken randomly and thus the vote for the same instance can vary between iterations.", 
        "158": "Looking at the AL setting with variational inference, we also see the highest precision for identifying errors during the first 100 iterations.", 
        "159": "However, the precision for error dection is more than 3 times as high as for QBC (41% vs. 13%), and we are still able to detect new errors during the last 100 iterations.", 
        "160": "This results in an increase in POS label accuracy in the corpus from 97.56% to 99.34%, a near perfect result.", 
        "161": "To find out what error types we were not able to identify, we manually checked the remaining 33 errors that we failed to detect in the first 500 iterations.", 
        "162": "Most of those are cases where an adjective (JJ) was mistaken for a past participle (VBN).", 
        "163": "(2) Companies were closedJJ/V BN yesterday\nManning (2011), who presents a categorization of the type of errors made by a state-of-the-art POS tagger on the PTB, refers to the error type in example (2) as underspecified/unclear, a category that he applies to instances where \u201cthe tag is underspecified, ambiguous, or unclear in the context\u201d.", 
        "164": "These cases are also hard to disambiguate for human annotators, so it is not surprising that our system failed to detect them.", 
        "165": "5.2 Experiment 2: Out-of-domain setting  In the second experiment, we test how our approach performs in an out-of-domain setting.", 
        "166": "For this, we use the English Web treebank (Bies et al.,\n2012), a corpus of over 250,000 words of English weblogs, newsgroups, email, reviews and question-answers manually annotated for parts-ofspeech and syntax.", 
        "167": "Our objective is to develop and test a method for error detection that can also be applied to out-of-domain scenarios for creating and improving language resources when no indomain training data is available.", 
        "168": "We thus abstain from retraining the taggers on the web data and use the tools and models from experiment 1 (\u00a75.1) as is, trained on the WSJ.", 
        "169": "As the English Web treebank uses an extended tagset with additional tags for URLs and email addresses etc., we allow the oracle to assign new tags unknown to the preprocessing classifiers.", 
        "170": "In a traditional AL setting, this would not be possible, as all class labels have to be known from the start.", 
        "171": "In our setting, however, this can be easily implemented.", 
        "172": "For each web genre, we extract samples of 5,000 tokens and run an active learning simulation with 500 iterations, where in each iteration one new instance is selected and disambiguated.", 
        "173": "After each iteration, we update the variational model and the predictions of a randomly selected classifier, as described in Section 5.1.", 
        "174": "Table 3 shows the performance of the WSJtrained taggers on the web data.", 
        "175": "As expected, the results are much lower than the ones from the indomain setting.", 
        "176": "This allows us to explore the behaviour of our error detection approach under different conditions, in particular to test our approach on tag predictions of a lower quality.", 
        "177": "The last three rows in Table 3 give the average tagger accuracy, the accuracy for the majority vote for the ensemble (not to be confused with QBC), and the accuracy we get when using the predictions from the variational model without AL (MACE).", 
        "178": "We can see that the majority baseline often, but not always succeeds in beating the best individual tagger.", 
        "179": "Results for MACE are more or less in the same range as the majority vote, same as in experiment 1, but do not improve over the baseline.", 
        "180": "Next, we employ AL in the out-of-domain setting (Tables 4, 5 and 6).", 
        "181": "Table 4 shows the increase in POS label accuracy for the five web genres after running N iterations of AL with variational inference (VI-AL).", 
        "182": "Table 5 compares the results of the two selection strategies, QBC and VI-AL, on the answers subcorpus after an increasing number of AL iterations.11 Table 6 completes the picture by showing results for error detection for all web genres, for QBC and VI-AL, after inspecting 10% of the data (500 iterations).", 
        "183": "Table 4 shows that using VI-AL for error detection results in a substantial increase in POS label accuracy for all genres.", 
        "184": "VI-AL still detects new errors after a high number of iterations, without retraining the ensemble taggers.", 
        "185": "This is especially useful in a setting where no labelled target domain data is yet available.", 
        "186": "Table 5 shows the number of true positives amongst the selected error candidates as well as precision and recall for error detection for different stages of AL on the answers genre.", 
        "187": "We can see that during the early learning stages, both selection strategies have a high precision and QBC beats VI-AL.", 
        "188": "After 200 iterations it becomes more difficult to detect new errors, and the precision for both methods decreases.", 
        "189": "The decrease, however, is much slower for VI-AL, leading to higher precision after the initial rounds of training, and the gap in results becomes more and more pronounced.", 
        "190": "11Due to space restrictions, we can only report detailed results for one web genre.", 
        "191": "Results for the other web genres follow the same trend (see Tables 4 and 6).", 
        "192": "After 600 iterations, VI-AL beats QBC by more than 10%, thus resulting in a lower number of instances that have to be checked to obtain the same POS accuracy in the final dataset.", 
        "193": "Looking at recall, we see that by manually inspecting 10% of the data VI-AL manages to detect more than 50% of all errors, and after validating 20% of the data, we are able to eliminate 75% of all errors in the corpus.", 
        "194": "In contrast, QBC detects less than 60% of the annotation errors in the dataset.", 
        "195": "In the out-of-domain setting where we start with low-quality POS predictions, we are able to detect errors in the data with a much higher precision than in the in-domain setting, where the number of errors in the dataset is much lower.", 
        "196": "Even after 1,000 iterations, the precision for error detection is close to 50% in the answers data.", 
        "197": "Table 6 shows that the same trend appears for the other web genres, where we observe a substantially higher precision and recall when guiding AL with variational inference (VI-AL).", 
        "198": "Only on the email data are the results below the ones for QBC, but the gap is small.", 
        "199": "5.3 Experiment 3: A new task (and language)  We now want to test if the approach generalises well to other classification tasks, and also to new languages.", 
        "200": "To that end, we apply our approach to the task of Named Entity Recognition (NER) on German data (\u00a74).", 
        "201": "Table 7 shows results for error detection for NER.", 
        "202": "In comparison to the POS experiments, we observe a much lower recall, for both QBC and VIAL.", 
        "203": "This is due to the larger size of the NER testset which results in a higher absolute number of errors in the data.", 
        "204": "Please bear in mind that recall is computed as the ratio of correctly identified errors to all errors in the testset (here we have a total of 110,405 tokens in the test set which means that we identified>35% of all errors by querying less than 1% of the data).", 
        "205": "Also note that the overall number of errors is higher in the QBC setting (1,756\nerrors) than in the VI-AL setting (1,628 errors), as in the first setting we used a majority vote for generating the data pool while in the second setting we relied on the predictions of MACE.", 
        "206": "For POS tagging, we did not observe a difference between the initial data pools (Table 3).", 
        "207": "For NER, however, the initial predictions of MACE are better than the majority vote.", 
        "208": "During the first 800 iterations, precision for VIAL is much higher than for QBC, but then slowly decreases.", 
        "209": "For QBC, however, we see the opposite trend.", 
        "210": "Here precision stays in the range of 52-56% for the first 600 iterations.", 
        "211": "After that, it slowly increases, and during the last iterations QBC precision outperforms VI-AL.", 
        "212": "Recall, however, is higher for the VI-AL model, for all iterations.", 
        "213": "This means that even if precision is slightly lower than in the QBC setting after 800 iterations, it is still better to use the VI-AL model.", 
        "214": "For comparison, in the QBC setting we still have 1,139 errors left in the corpus after 1,000 iterations, while for VI-AL the number of errors remaining in the data is much lower (1,043).", 
        "215": "5.4 Experiment 4: A real-world scenario  In our final experiment, we test our approach in a real-world scenario with a human annotator in the loop.", 
        "216": "To that end, we let two linguistically trained human annotators correct POS errors identified by AL.", 
        "217": "We use the out-of-domain data from experiment 2 (\u00a75.2), specifically the answers and weblog subcorpora.", 
        "218": "We run two VI-AL experiments where the oracle is presented with new error candidates for 500 iterations.", 
        "219": "The time needed for correction was 135 minutes (annotator 1, answers) and 157 minutes (annotator 2, weblog) for correcting 500 instances\neach.", 
        "220": "This includes the time needed to consult the annotation guidelines, as both annotators had no prior experience with the extended English Web treebank guidelines.", 
        "221": "We expect that the amount of time needed for correction will decrease when the annotators become more familiar with the annotation scheme.", 
        "222": "Results are shown in Table 8.", 
        "223": "As expected, precision as well as recall are lower for the human annotators as compared to the simulation study (Table 6).", 
        "224": "However, even with some annotation noise we were able to detect more than 40% of all errors in the answers data and close to 60% of all errors in the weblog corpus, by manually inspecting only 10% of the data.", 
        "225": "This results in an increase in POS label accuracy from 88.8 to 92.5% for the answers corpus and from 93.9 to 97.5% for the weblogs, which is very close to the 97.8% we obtained in the simulation study (Table 4).", 
        "226": "6 Conclusions  In the paper, we addressed a severely understudied problem, namely the detection of errors in automatically annotated language resources.", 
        "227": "We present an approach that combines an unsupervised generative model with human supervision in an AL framework.", 
        "228": "Using POS tagging and NER as test cases, we showed that our model can detect errors with high precision and recall, and works especially well in an out-of-domain setting.", 
        "229": "Our approach is language-agnostic and can be used without retraining the classifiers, which saves time and is of great practical use in an AL setting.", 
        "230": "We also showed that combining an unsupervised generative model with human supervision is superior to using a query-by-committee strategy for AL.", 
        "231": "Our system architecture is generic and can be applied to any classification task, and we expect it to be of use in many annotation projects, especially when dealing with non-standard data or in out-of-domain settings.", 
        "232": "Acknowledgments  This research has been conducted within the Leibniz Science Campus \u201cEmpirical Linguistics and Computational Modeling\u201d, funded by the Leibniz Association under grant no.", 
        "233": "SAS-2015-IDS-LWC and by the Ministry of Science, Research, and Art (MWK) of the state of Baden-Wu\u0308rttemberg."
    }, 
    "document_id": "P17-1107.pdf.json"
}
