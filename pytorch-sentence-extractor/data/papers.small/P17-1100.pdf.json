{
    "abstract_sentences": {
        "1": "We present a new supervised framework that learns to estimate automatic Pyramid scores and uses them for optimizationbased extractive multi-document summarization.", 
        "2": "For learning automatic Pyramid scores, we developed a method for automatic training data generation which is based on a genetic algorithm using automatic Pyramid as the fitness function.", 
        "3": "Our experimental evaluation shows that our new framework significantly outperforms strong baselines regarding automatic Pyramid, and that there is much room for improvement in comparison with the upperbound for automatic Pyramid."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 1084\u20131094 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1100\nWe present a new supervised framework that learns to estimate automatic Pyramid scores and uses them for optimizationbased extractive multi-document summarization.", 
        "2": "For learning automatic Pyramid scores, we developed a method for automatic training data generation which is based on a genetic algorithm using automatic Pyramid as the fitness function.", 
        "3": "Our experimental evaluation shows that our new framework significantly outperforms strong baselines regarding automatic Pyramid, and that there is much room for improvement in comparison with the upperbound for automatic Pyramid.", 
        "4": "1 Introduction  We consider extractive text summarization, the task of condensing a textual source, e.g., a set of source documents in multi-document summarization (MDS), into a short summary text.", 
        "5": "The quality of an automatic system summary is traditionally evaluated by comparing it against one or more reference summaries written by humans.", 
        "6": "This comparison is performed by means of an evaluation metric measuring indicators of summary quality and combining them into an aggregated score.", 
        "7": "Many state-of-the-art summarization systems cast extractive summarization as an optimization problem and maximize an objective function in order to create good, i.e., high-scoring summaries.", 
        "8": "To this end, optimization-based systems commonly use an objective function which encodes exactly those quality indicators which are measured by the particular evaluation metric being used.", 
        "9": "Some systems even employ an approximation of the evaluation metric as objective function.", 
        "10": "Consider as an example the ROUGE metric which has become a de-facto standard for summary evaluation (Lin, 2004).", 
        "11": "ROUGE computes the n-gram overlap between a system summary and a pool of reference summaries.", 
        "12": "There are several previous approaches which have used an approximation of ROUGE as the optimization objective (e.g., Sipos et al.", 
        "13": "(2012); Peyrard and EckleKohler (2016a)).", 
        "14": "However, ROUGE has been widely criticized for being too simplistic and not suitable for capturing important quality aspects we are interested in.", 
        "15": "In particular, ROUGE does not capture sentences which are semantically equivalent but expressed with different words (Nenkova et al., 2007).", 
        "16": "Ideally, we would like to evaluate our summaries based on human judgments.", 
        "17": "A well-known example of such a human evaluation method is the so-called Pyramid method (Nenkova et al., 2007): it evaluates the particular quality aspect of content selection and is based on a manual comparison of Summary Content Units (SCUs) in reference summaries against SCUs in system summaries.", 
        "18": "While the resulting Pyramid score is much more meaningful and informative than ROUGE, it is very expensive to obtain, and \u2013 worse \u2013 not reproducible.", 
        "19": "These issues have been addressed by a line of research aimed at automating the Pyramid evaluation (Harnly et al., 2005; Passonneau et al., 2013).", 
        "20": "Recently, Yang et al.", 
        "21": "(2016) developed a freely available off-the-shelf system for automatic Pyramid scoring called PEAK, which uses open Information Extraction (open IE) propositions as SCUs and relies on proposition comparison.", 
        "22": "Automatic Pyramid (AP) scores are reproducible, and unlike ROUGE, they are based on semantically motivated content units (SCUs) rather than word n-grams.", 
        "23": "Moreover, they correlate better with human judgments than ROUGE (Yang et al., 2016).", 
        "24": "Given these recent advances in the automatic\n1084\nevaluation of summaries regarding content selection, we believe that research in optimizationbased summarization should move away from ROUGE towards AP as a more meaningful evaluation metric to approximate and to optimize.", 
        "25": "In our work, we are the first to explore this new direction and to systematically investigate the use of AP in optimization-based extractive summarization.", 
        "26": "We make the following contributions:\n\u2022 We compute an upper-bound for AP with a Genetic Algorithm (GA), and compare it to the ROUGE upper-bound.", 
        "27": "\u2022 We develop a new extractive MDS system specifically optimizing for an approximation of AP.", 
        "28": "Our system uses a supervised learning setup to learn an approximation of AP from automatically generated training data.", 
        "29": "We constrain the learned approximation of AP to be linear so that we can extract summaries efficiently via Integer Linear Programming (ILP).", 
        "30": "Our experimental evaluation shows that our approach significantly outperforms strong baselines on the AP metric.", 
        "31": "The code both for the new upper-bound and for our ILP is available at github.com/UKPLab/ acl2017-optimize_pyramid.", 
        "32": "2 Background  In this section, we summarize the Pyramid method and the PEAK system, the automated version of Pyramid we consider in this work.", 
        "33": "Pyramid The Pyramid method (Nenkova et al., 2007) is a manual evaluation method which determines to what extent a system summary covers the content expressed in a set of reference summaries.", 
        "34": "The comparison of system summary content to reference summary content is performed on the basis of SCUs which correspond to semantically motivated, subsentential units, such as phrases or clauses.", 
        "35": "The Pyramid method consists of two steps: the creation of a Pyramid set from reference summaries, and second, Pyramid scoring of system summaries based on the Pyramid set.", 
        "36": "In the first step, humans annotate phrasal content units in the reference summaries and group them into clusters of semantically equivalent phrases.", 
        "37": "The resulting clusters are called SCUs and the annotators assign an SCU label to each cluster, which is a sentence describing the cluster content in their own\nwords.", 
        "38": "The final set of SCUs forms the Pyramid set.", 
        "39": "Each SCU has a weight corresponding to the number of reference summaries in which the SCU appears.", 
        "40": "Since each SCU must not appear more than once in each reference summary, the maximal weight of an SCU is the total number of reference summaries.", 
        "41": "In the second step, humans annotate phrasal content units in a system summary and align them to the corresponding SCUs in the Pyramid set.", 
        "42": "The Pyramid score of a system summary is then calculated as the sum of the SCU weights for all Pyramid set SCUs being aligned to annotated system summary phrases.", 
        "43": "PEAK The AP system PEAK by Yang et al.", 
        "44": "(2016) uses clauses as the content expressing units and represents them as propositions in the open IE paradigm.", 
        "45": "An open IE proposition is a triple of subject, predicate and object phrases.", 
        "46": "PEAK uses the state-of-the-art system clausIE (Del Corro and Gemulla, 2013) for proposition extraction.", 
        "47": "While PEAK includes the automatic creation of Pyramid sets from reference summaries, as well as automatic Pyramid scoring of system summaries, in this work, we use PEAK for automatic scoring only.", 
        "48": "As for the Pyramid sets, we can assume that these have already been created, either via PEAK or by humans (e.g., using the TAC 2009 data1).", 
        "49": "Since automatic scoring with PEAK requires that the Pyramid sets consist of representative open IE propositions which constitute the automated counterparts of the SCUs, we first need to represent the manually constructed SCUs as open IE propositions, too.", 
        "50": "To this end, we use clausIE to extract an open IE proposition from each SCU label \u2013 a sentence describing the cluster content.", 
        "51": "As a result, each pyramid set is represented as a list of propositions {pj} with a weight taken from the underlying SCU.", 
        "52": "For scoring, PEAK processes a system summary with clausIE, converting it from a list of sentences to a list of propositions {si}.", 
        "53": "A bipartite graph G is constructed, where the two sets of nodes are the summary propositions {si} and the pyramid propositions {pj}.", 
        "54": "An edge is drawn between si and pj if the similarity is above a given threshold.", 
        "55": "PEAK computes the similarity with the ADW system (Align, Disambiguate and Walk), a system for computing text similarity based on WordNet, which reaches state-of-the-\n1http://tac.nist.gov/2009/ Summarization\nart performance but is slow (Pilehvar et al., 2013).", 
        "56": "Since each system summary unit can be aligned to at most one SCU, the alignment of the summary propositions {si} and the pyramid propositions {pj} is equivalent to finding a maximum weight matching, which PEAK solves using the Munkres-Kuhn bipartite graph algorithm.", 
        "57": "From the matched pyramid propositions {pj} the final pyramid score is computed.", 
        "58": "3 Approach    3.1 Upper-bound for Automatic Pyramid  We start by computing upper-bound summaries according to AP in order to gain a better understanding of the metric.", 
        "59": "Notations Let D = {si} be a document collection considered as a set of sentences.", 
        "60": "A summary S is simply a subset of D. We use ppyr to denote the set of propositions in the Pyramid sets extracted from the SCU labels using clausIE.", 
        "61": "The upper-bound is the set of sentences S\u2217 with the best AP score.", 
        "62": "Method The task is to extract the set of sentences which contains the propositions matching most of the highest-weighted SCUs, thus resulting in the best matching of propositions, i.e., the highest AP score possible.", 
        "63": "Formally, we have to solve the following optimization problem:\nS\u2217 = argmax S AutoPyr(S) (1)\nUnfortunately, it cannot be solved directly via ILP because of the Munkres-Kuhn bipartite graph algorithm within AP.", 
        "64": "While Munkres-Kuhn is an ILP, we solve a different problem.", 
        "65": "In our problem, Munkres-Kuhn would act as constraint because we are looking for the best matching among all valid matchings.", 
        "66": "Munkres-Kuhn only yields the valid matching for one particular set of sentences.", 
        "67": "One global ILP can be written down by enumerating all possible matchings in the constraints but it will have a completely unrealistic runtime.", 
        "68": "Instead, we have to rely on search-based algorithms and compute summaries close to the upperbound.", 
        "69": "We search for such an approximate solution by employing a meta-heuristic solver introduced recently for extractive MDS by Peyrard and Eckle-Kohler (2016a).", 
        "70": "Specifically, we use the tool published with their paper.2 Their meta-\n2https://github.com/UKPLab/ coling2016-genetic-swarm-MDS\nheuristic solver implements a Genetic Algorithm (GA) to create and iteratively optimize summaries over time.", 
        "71": "In this implementation, the individuals of the population are the candidate solutions which are valid extractive summaries.", 
        "72": "Valid means that the summary meets the length constraint.", 
        "73": "Each summary is represented by a binary vector indicating for each sentence in the source document whether it is included in the summary or not.", 
        "74": "The size of the population is a hyper-parameter that we set to 100.", 
        "75": "Two evolutionary operators are applied: the mutation and the reproduction.", 
        "76": "The mutation happens to several randomly chosen summaries by randomly removing one of its sentences and adding a new one that does not violate the length constraint.", 
        "77": "The reproduction is performed by randomly extracting a valid summary from the union of sentences of randomly selected parent summaries.", 
        "78": "Both operators are controlled by hyperparameters which we set to their default values.", 
        "79": "In our scenario, the fitness function is the AP metric, which takes a summary S as input and outputs its AP score.", 
        "80": "S is converted into a list of propositions pS by looking-up the propositions of each sentence in S from a pre-computed hashmap.", 
        "81": "For all sentences in the document collection D, the hash-map stores the corresponding propositions.", 
        "82": "Then the Munkres-Kuhn algorithm is applied to pS and ppyr in order to find matching propositions, and finally the scores of their corresponding SCUs are used to evaluate the fitness of the summary.", 
        "83": "The runtime might become an issue, because the similarity computation between propositions via ADW is slow.", 
        "84": "However, all the necessary information is present in the similarity matrix A defined by:\nAij = ADW (p D i , p pyr j ) (2)\nHere Aij is the semantic similarity between the proposition pDi from the source document i and the proposition pPj from the Pyramid set j.", 
        "85": "A has dimensions m \u00d7 n if m is the number of propositions in the document collection and n the number of propositions in the Pyramid set.", 
        "86": "We keep the runtime low by pre-computing the similarity matrix A.", 
        "87": "With a population of 100 summaries in the GA, the algorithm converges in less than a minute to high scoring summaries, which we can expect to be close to the real upper-bound.", 
        "88": "3.2 Supervised Setup to Learn an Approximation of AP  We denote the true AP scoring function by \u03c0\u2217.", 
        "89": "\u03c0\u2217 scores summaries by matching the summary propositions to the Pyramid propositions in Ppyr as described before.", 
        "90": "In this work, we aim to learn a function \u03c0, which approximates \u03c0\u2217 without having access to Ppyr, but only to the document collection D.\nFormally, it means that over all document collections D and all summaries S, we look for \u03c0 which minimizes the following loss:\nL(\u03c0) = \u2211\nD\u2208D\n\u2211 S\u2208S \u2016\u03c0(D,S)\u2212 \u03c0\u2217(Ppyr, S)\u20162 (3)\nThis states that the learned \u03c0 minimizes the squared distance from \u03c0\u2217 over the available training data.", 
        "91": "Model Note that we simply denote \u03c0(D,S) by \u03c0(S) as it is not ambiguous which document collection is used when S is a summary of D.\nIn order to be able to use an exact and efficient solver like ILP, we constrain \u03c0 to be a linear function.", 
        "92": "Therefore, we look for \u03c0 of the following form:\n\u03c0(S) = \u2211\ns\u2208S f\u03b8(s)\u2212\n\u2211\ni>j\ng\u03b3(si \u2229 sj) (4)\nTwo functions are jointly learned: f\u03b8 is a function scoring individual sentences, and g\u03b3 is a function scoring the intersection of sentences.", 
        "93": "\u03b8 \u222a \u03b3 is the set of learned paramaters.", 
        "94": "We can interpret this learning scenario as jointly learning the sentence importance and the redundancy to get \u03c0 as close as possible to the true AP \u03c0\u2217.", 
        "95": "f\u03b8 represents the notion of importance learned in the context of AP, while g\u03b3 contains notions of coherence and redundancy by scoring sentence intersections.", 
        "96": "This scenario is intuitive and inspired by previous work on summarization (McDonald, 2007).", 
        "97": "Now, we explain how to learn these two functions while enforcing \u03c0 to be linear.", 
        "98": "Suppose each sentence is represented by a feature set \u03c6 and each sentence intersections is represented by \u03c6\u2229, then the set of features for a summary S is:\n\u03a6(S) = { \u22c3\ns\u2208S \u03c6(s) \u222a\n\u22c3\ni>j\n\u03c6\u2229(si \u2229 sj)} (5)\nIt is clear that the number of features is variable and depends on the number m of sentences\nin S. In order to deal with a variable number of sentences as input, one could use recurrent neural networks, but at the cost of loosing linearity.", 
        "99": "Instead, to keep the linearity and to cope with variable sized inputs, we employ linear models for both f\u03b8 and g\u03b3 :\n\u03c0(S) = \u2211\ns\u2208S \u03b8 \u00b7 \u03c6(s)\u2212\n\u2211\ni>j\n\u03b3 \u00b7 \u03c6\u2229(si \u2229 sj) (6)\nBy leveraging the properties of linear models we end-up with the following formulation:\n\u03c0(S) = \u03b8 \u00b7 \u2211\ns\u2208S \u03c6(s)\u2212 \u03b3 \u00b7\n\u2211 i\u2265j \u03c6\u2229(si \u2229 sj) (7)\nBecause of the linear models, we can sum features over sentences and over sentence intersections to obtain a fixed size feature set:\n\u03a6 \u2211 (S) = {\u03c6 \u2211 (S) \u222a \u03c6 \u2211 \u2229 (S)} (8)\nwhere we introduced the following notations:\n\u03c6 \u2211 (S) = \u2211 s\u2208S \u03c6(s)\n\u03c6 \u2211 \u2229 (S) = \u2211 i>j \u03c6(si \u2229 sj)\nSuppose \u03c6 is composed of k features and \u03c6\u2229 of n features.", 
        "100": "Then \u03c6 \u2211 (S) is a vector of dimension k, and similarly \u03c6 \u2211 \u2229 (S) is of dimension n. Finally, \u03a6\u2211 is a fixed size feature set of dimension k + n. The function \u03c0 as defined in equation 6 is still linear with respect to sentence and sentence intersection features, which is convenient for the subsequent summary extraction stage.", 
        "101": "Features While any feature set for sentences \u03c6 and for sentence intersections \u03c6\u2229 could be used, we focused on simple ones in this work.", 
        "102": "For a sentence s, \u03c6(s) consists of the following features:\n\u2022 Sentence length in number of words.", 
        "103": "\u2022 Sentence position as an integer number starting from 0.", 
        "104": "\u2022 Word overlap with title: Jaccard similarity between the unigrams in the title t and a sentence s:\nJaccard(s, t) = |t \u2229 s| |t \u222a s| (9)\n\u2022 Sum of frequency of unigrams and bigrams in the sentence.", 
        "105": "\u2022 Sum of TF*IDF of unigrams and bigrams in the sentence.", 
        "106": "The idf of unigrams and bigrams is trained on a background corpus of DBpedia articles.3\n\u2022 Centrality of the sentence computed via PageRank: A similarity matrix is built between sentences in the document collection based on their TF*IDF vector similarity.", 
        "107": "Then a power method is applied on the similarity matrix to get PageRank scores of individual sentences.", 
        "108": "It is similar to the classic LexRank algorithm (Erkan and Radev, 2004).", 
        "109": "\u2022 Propositions centrality: We also use the centrality feature for propositions.", 
        "110": "Each sentence is scored by the sum of the centrality of its propositions.", 
        "111": "As PEAK is based on propositions, we expect proposition-level features to provide a useful signal.", 
        "112": "Finally, \u03c6\u2229(si \u2229 sj) consists of the unigram, bigram and trigram overlap between the two sentences si and sj .", 
        "113": "Training The model is trained with a standard linear least squares regression using pairs of (\u03a6(S), \u03c0\u2217(S)) as training examples.", 
        "114": "Because our approach relies on an automatic metric, an arbitrarily large number of summaries and their corresponding scores can be generated.", 
        "115": "In contrast, getting manual Pyramid annotations for a large number of summaries would be expensive and timeconsuming.", 
        "116": "As training examples we take the population of scored summaries created by the same GA we use for computing upper-bound summaries.", 
        "117": "It is important to note that this GA is also a perfect generator of training instances: the summaries in its population are already scored because the fitness function is the AP metric.", 
        "118": "Indeed, for each topic, an arbitrarily large amount of scored summaries can be generated by adjusting the size of the population.", 
        "119": "Moreover, the summaries in the population are very diverse and have a wide range of scores, from almost upper-bound to completely random.", 
        "120": "Optimization-based Summary Extraction Since the function \u03c0 is constrained to be linear, we can extract the best scoring summary by solving an ILP.", 
        "121": "3http://wiki.dbpedia.org/ nif-abstract-datasets\nLet x be a binary vector indicating whether sentence i is in the summary or not.", 
        "122": "Similarly, let \u03b1 be a binary matrix indicating whether both sentence i and j are in the summary.", 
        "123": "Finally, let K be the length constraint.", 
        "124": "With these notations, the best summary is extracted by solving the follwogin ILP:\nargmax S \u2211 si\u2208S xi\u2217\u03b8 \u00b7\u03c6(si)\u2212 \u2211 i\u2265j\n\u03b1i,j \u2217\u03b3 \u00b7\u03c6\u2229(si\u2229sj) m\u2211 i=1\nxi \u2217 len(si) \u2264 K \u2200(i, j), \u03b1i,j \u2212 xi \u2264 0 \u2200(i, j), \u03b1i,j \u2212 xj \u2264 0\n\u2200(i, j), xi + xj \u2212 \u03b1i,j \u2264 1 Which is the ILP directly corresponding to maximizing \u03c0 as defined by equation 6.", 
        "125": "Note that \u00b7 is the dot product while \u2217 is the scalar multiplication in R.  4 Experiments    4.1 Setup  Dataset We perform our experiments on a multidocument summarization dataset from the Text Analysis Conference (TAC) shared task in 2009, TAC-2009.4 TAC-2009 contains 44 topics, each consisting of 10 news articles to be summarized in a maximum of 100 words.", 
        "126": "In our experiments, we use only the so-called initial summaries (A summaries), but not the update summaries.", 
        "127": "For each topic, there are 4 human reference summaries and a manually created Pyramid set.", 
        "128": "As described in section 2, we pre-processed these Pyramid sets with clausIE in order to make them compatible with PEAK.", 
        "129": "Metrics We primarily evaluate our system via automatic Pyramid scoring from PEAK, after preprocessing the summaries with clausIE.", 
        "130": "PEAK has a parameter twhich is the minimal similarity value required for matching a summary proposition and a Pyramid proposition.", 
        "131": "We use two different values: t = 0.6 (AP-60) and t = 0.7 (AP-70).", 
        "132": "For completeness, we also report the ROUGE scores identified by Owczarzak et al.", 
        "133": "(2012a) as strongly correlating with human evaluation methods: ROUGE-1 (R-1) and ROUGE-2 (R-2) recall with stemming and stopwords not removed.", 
        "134": "Finally, we perform significance testing with ttest to compare differences between two means.5\n4http://tac.nist.gov/2009/ Summarization/\n5The symbol * indicates that the difference compared to  4.2 Automatic Evalution  Upper-bound Comparison We compute the set of upper-bound summaries for both ROUGE-2 (RUB) and for AP (AP-UB).6 Both sets of upperbound summaries are evaluated with ROUGE and AP, and the results are reported in Table 1.", 
        "135": "Interestingly, we observe significant differences between the two upper-bounds.", 
        "136": "While it is obvious that each set of upper-bound summaries reaches the best score on the metric it maximizes, the same summary set scores much worse when evaluated with the other metric.", 
        "137": "This observation empirically confirms that the two metrics measure different properties of system summaries.", 
        "138": "Moreover, the upper-bound for AP gives us information about the room for improvement that summarization systems have with respect to AP.", 
        "139": "This is relevant in the next paragraph, where we compare systems in an end-to-end evaluation.", 
        "140": "End-to-end Evaluation We evaluate the quality of the summaries extracted by the summarizer \u03c0 \u2212 ILP in a standard end-to-end evaluation scenario.", 
        "141": "\u03c0 \u2212 ILP is the system composed of the learned function \u03c0 and the ILP defined in the previous section.", 
        "142": "Learning \u03c0 Using our GA data generation method, we produce 100 scored summaries for each of the 44 topics in TAC2009 while computing the upper-bound.", 
        "143": "We use the threshold value of 0.65 as a compromise between AP-60 and AP70.", 
        "144": "The data generated have scores ranging from 0. to 0.4627 with an average of 0.1615.", 
        "145": "The data is well distributed because the standard deviation is 0.1449.", 
        "146": "A highly diverse set of summaries is produced, because on average two summaries in the training set only have 1.5% sentences in common, and most of the sentences of the source documents are contained in at least one summary.", 
        "147": "The model is then trained in a leave-one-out cross-validation setup.", 
        "148": "The parameters \u03b8 and \u03b3 are\nthe previous best baseline is significant with p \u2264 0.05.", 
        "149": "6We use the parameter t = 0.6 during the upper-bound computation of AP-UB.", 
        "150": "trained on all topics but one.", 
        "151": "The trained model is used to extract a high-scoring summary on the remaining topic by solving the ILP defined above.", 
        "152": "Our framework is compared to the following baselines:\nTF*IDF weighting A simple heuristic introduced by Luhn (1958) where each sentence receives a score from the TF*IDF of its terms.", 
        "153": "The best sentences are greedily extracted until the length constraint is met.", 
        "154": "We use the implementation available in the sumy package.7\nLexRank (Erkan and Radev, 2004) is a popular graph-based approach.", 
        "155": "A similarity graph G(V,E) is constructed where V is the set of sentences and an edge eij is drawn between sentences vi and vj if and only if the cosine similarity between them is above a given threshold.", 
        "156": "Sentences are scored according to their PageRank score inG.", 
        "157": "It is also available in the sumy package.", 
        "158": "ICSI (Gillick and Favre, 2009) is a recent system that has been identified as one of the stateof-the-art systems by Hong et al.", 
        "159": "(2014).", 
        "160": "It is an ILP framework that extracts a summary by solving a maximum coverage problem considering the most frequent bigrams in the source documents.", 
        "161": "We use the Python implementation released by Boudin et al.", 
        "162": "(2015).", 
        "163": "JS-Gen (Peyrard and Eckle-Kohler, 2016a) is a recent approach which uses a GA to minimize the Jensen-Shannon (JS) divergence between the extracted summary and the source documents.", 
        "164": "JS divergence measures the difference between probability distributions of words in the source documents and in the summary.", 
        "165": "Results We report the performance of \u03c0\u2212 ILP in comparison to the baselines in Table 2.", 
        "166": "The results confirm an expected behavior.", 
        "167": "Our supervised framework which aims at approximating and maximizing AP, easily and significantly outperforms all the other baselines when evaluated\n7https://github.com/miso-belica/sumy\nwith AP for both values of the threshold.", 
        "168": "While the system is not designed with ROUGE in mind, it still performs reasonably well in the ROUGE evaluation, even though it does not outperform previous works.", 
        "169": "In general, the two metrics ROUGE and AP do not produce the same rankings of systems.", 
        "170": "This is another piece of empirical evidence that they measure different properties of summaries.", 
        "171": "When we compare the system performances to the upper-bound scores reported in Table 1, we see that there is still a large room for improvements.", 
        "172": "We take a closer look at this performance gap in the next paragraph where we evaluate the learning component of our approach.", 
        "173": "Evaluation of Learned \u03c0 In this paragraph, we evaluate the learning of \u03c0 as an approximation of \u03c0\u2217.", 
        "174": "We do so by measuring the correlation between \u03c0 and the true AP \u03c0\u2217.", 
        "175": "We report three correlation metrics to evaluate and compare the ranking of summaries induced by \u03c0 and \u03c0\u2217: Pearson\u2019s r, Spearman\u2019s \u03c1 and NDCG.", 
        "176": "Pearson\u2019s r is a value correlation metric which depicts linear relationship between the scores produced by two ranking lists.", 
        "177": "Spearman\u2019s \u03c1 is a rank correlation metric which compares the ordering of systems induced by the two ranking lists.", 
        "178": "NDCG is a metric from information retrieval which compares ranked lists and puts a special emphasis on the top elements by applying logarithm decay weighting for elements further down in the list.", 
        "179": "Intuitively, it describes how well the \u03c0 function is able to recognize the best scoring summaries.", 
        "180": "In our case, it is particularly desirable to have a high NDCG score, because the optimizer extracts summaries with high \u03c0 scores; we want to confirm that top scoring summaries are also among top scoring summaries according to the true \u03c0\u2217.", 
        "181": "For comparison, we report how well our baselines correlate with \u03c0\u2217.", 
        "182": "For this, we consider the scoring function for summaries which is part of all our baselines, and which they explicitly or implicitly optimize: TF*IDF greedily maximizes fTF\u2217IDF , the sum of the frequency of the words in the summary.", 
        "183": "ICSI maximizes the sum of the document frequency of bigrams (fICSI ).", 
        "184": "LexRank maximizes fLexRank, the sum of the PageRank of sentences in the summary, and fJS is the JS divergence between the summary and the source docu-\nments optimized by JS-Gen. For our supervised learning of \u03c0, the training procedure is the same as described in the previous section.", 
        "185": "The correlation scores are averaged over topics and reported in Table 3.", 
        "186": "We observe that \u03c0 is able to approximate AP significantly better than any baseline for all metrics.", 
        "187": "This explains why optimizing \u03c0 with ILP outperforms the baseline systems in the end-to-end evaluation (Table 2).", 
        "188": "The learned \u03c0 achieves a high NDCG, indicating that optimizing \u03c0 produces summaries very likely to have high \u03c0\u2217 scores.", 
        "189": "This means that \u03c0 is capable of accurately identifying high-scoring summaries, which again explains the strong performance of \u03c0 \u2212 ILP .", 
        "190": "The fact that the overall correlations are lower for every system shows that it is difficult to predict \u03c0 for poor and average quality summaries.", 
        "191": "It is interesting to observe that features such as unigram and bigram frequency, which are known to be strong features to approximate ROUGE, are less useful to approximate the more complex AP.", 
        "192": "Feature Weights The advantage of linear models is their interpretability.", 
        "193": "One can investigate the contribution of each feature by looking at its corresponding weight learned during training.", 
        "194": "The sign of the weight indicates whether the feature correlates positively or negatively with the results, and its amplitude determines the importance of this feature in the final estimation.", 
        "195": "We observe that the most useful feature is the proposition centrality, which confirms our expectation that proposition-based features are useful for approximating PEAK.", 
        "196": "The bigram coverage has also a high weight explaining the strong performance of ICSI.", 
        "197": "The least useful feature is the sentence position, even if it still contains some useful signal.", 
        "198": "Interestingly, the analysis of features from the\nsentence intersection reveals a slightly positive correlation for the unigram and bigram overlap, but a negative correlation for trigram overlap.", 
        "199": "Our interpretation is that the model learns that good summaries tend to have repeated unigrams and bigrams to ensure some coherence, while the repeated trigrams are more indicative of undesired redundancy.", 
        "200": "Agreement between ROUGE and AP In the previous paragraphs, we already saw that different metrics produce different rankings of systems.", 
        "201": "We want to investigate this further and understand to what extent ROUGE and AP disagree.", 
        "202": "To that end, we use the summaries automatically generated by the genetic algorithm during the upperbound computation.", 
        "203": "Remember that for each topic of TAC-2009 it produces 100 summaries with a wide range of AP scores.", 
        "204": "We then score these summaries with both ROUGE-1 and ROUGE-2 and compare how ROUGE metrics correlate with AP.", 
        "205": "In order to get a meaningful picture, we use the same three correlation metrics as above: Pearson\u2019s, Spearman\u2019s \u03c1 and NDCG.", 
        "206": "The results are presented in Table 4.", 
        "207": "We observe a low correlation between ROUGE metrics and AP in terms of both rank correlation (Spearman\u2019s \u03c1) and value correlation (Pearson\u2019s r).", 
        "208": "Even though the NDCG numbers are better, the correlation is also relatively low given that higher numbers are usually expected for NDCG (also observed in Table 3).", 
        "209": "This analysis confirms the initial claim that ROUGE and AP behave quite differently and measure different aspects of summary quality.", 
        "210": "Therefore, we believe systems developed and trained for AP are worth studying because they necessarily capture different aspects of summarization.", 
        "211": "5 Related Work  We discuss (i) related work in extractive summarization where an approximation of an automatic evaluation metric was optimized, and (ii) work re-\nlated to AP specifically.", 
        "212": "As ROUGE is the metric predominantly used for evaluation of extractive summarization, there are several previous optimization-based approaches which included an approximation of ROUGE in the objective function to maximize.", 
        "213": "For example, Takamura and Okumura (2010) and Sipos et al.", 
        "214": "(2012) performed structured output learning (using pairs of summaries and their ROUGE scores available in benchmark datasets as training examples) and thereby learned to maximize the ROUGE scores of the system summaries.", 
        "215": "Peyrard and Eckle-Kohler (2016b) on the other hand, learned an approximation of ROUGE scores for individual sentences in a supervised setup, and subsequently employed these estimated sentence scores in an ILP formulation to extract summaries.", 
        "216": "There is also recent work on considering fully automatic evaluation metrics (not relying on human reference summaries), such as the JS divergence as optimization objective.", 
        "217": "Peyrard and Eckle-Kohler (2016a) used metaheuristics to minimize JS divergence in a multi-document summarization approach and showed that the resulting extractive summaries also scored competitively using ROUGE.", 
        "218": "Regarding AP, there is not much prior work apart from the papers where the different variants of AP have been presented (Harnly et al., 2005; Passonneau et al., 2013; Yang et al., 2016).", 
        "219": "Especially, there is no prior work in optimization-based extractive summarization which has developed an approximation of AP and used it in an objective function.", 
        "220": "However, AP as an evaluation metric is becoming ever more important in the context of abstractive summarization, a research topic which has been gaining momentum in the last few years.", 
        "221": "For example Li (2015) and Bing et al.", 
        "222": "(2015) use an earlier version of AP based on distributional semantics (Passonneau et al., 2013) to evaluate abstractive multi-document summarization.", 
        "223": "6 Discussion and Future Work  We presented a supervised framework that learns automatic Pyramid scores and uses them for optimization-based summary extraction.", 
        "224": "Using the TAC-2009 multi-document summarization dataset, we performed an upper-bound analysis for AP, and we evaluated the summaries extracted with our framework in an end-to-end evaluation\nusing automatic evaluation metrics.", 
        "225": "We observed that the summaries extracted with our framework achieve significantly better AP scores than several strong baselines, but compared to the upper-bound for AP, there is still a large room for improvement.", 
        "226": "We show that AP and ROUGE catch different aspects of summary quality, but further work would be needed in order to substantiate the claim that AP is indeed better than ROUGE.", 
        "227": "One way of doing so would be to perform a human evaluation of high-scoring summaries according to ROUGE and AP.", 
        "228": "In general, ROUGE1 and ROUGE-2 were considered as the baselines for validating the performance of AP because these variants strongly correlate with human evaluation methods (Owczarzak et al., 2012a,b).", 
        "229": "However, the comparison could be repeated with ROUGE-3, ROUGE-4 and ROUGE-BE, which have been found to predict manual Pyramid better than ROUGE-1 and ROUGE-2 (Rankel et al., 2013).", 
        "230": "More generally, we see two main directions for future research: (i) the more specific question on how to improve the approximation of AP and (ii) the general need for more research on AP.", 
        "231": "There are several possible ways how to improve the approximation of AP.", 
        "232": "First, more semanticallyoriented features could be developed, e.g., features based on propositions rather than sentences or n-grams, or word embedding features encoding a large amount of distributional semantic knowledge (Mikolov et al., 2013).", 
        "233": "Second, the linearity constraint we used for efficiency reasons could be relaxed.", 
        "234": "Modeling AP as a non-linear function will presumably enhance the approximation.", 
        "235": "For the extraction of summaries based on a nonlinear function, greedy algorithms or search-based strategies could be used, e.g., the GA we used in this work for the upper-bound computation.", 
        "236": "We see a general need for more research on AP, because the way AP measures the quality aspect of content selection is not only more meaningful than ROUGE, but also applicable to the growing field of abstractive summarization.", 
        "237": "An important direction would be the improvement of AP itself, both in terms of methods used to compute AP, and in terms of tools: while the current off-the-shelf system PEAK is a promising start, it is very slow and therefore difficult to apply in practice.", 
        "238": "In this context, we would like to stress that our\nGA-based method to create training data for learning a model of AP can easily be adapted to any automatic scoring metric, and specifically to other or future AP variants.", 
        "239": "Finally, we hope to encourage the community to move away from ROUGE and instead consider AP as the main summary evaluation metric.", 
        "240": "This would be especially interesting for optimizationbased approaches, since the quality of the summaries created by such approaches depends on the quality of the underlying scoring metric.", 
        "241": "7 Conclusion  We presented the first work on AP in optimizationbased extractive summarization.", 
        "242": "We computed an upper-bound for AP and developed a supervised framework which learns an approximation of AP based on automatically generated training instances.", 
        "243": "We could access a large number of high-quality training data by using the population of a genetic algorithm.", 
        "244": "Our end-to-end evaluation showed that of our framework significantly outperforms strong baselines on the AP metric, but also revealed a large room for improvement in comparison to the upper-bound, which motivates future work on developing systems with better performance on the semantically motivated AP metric.", 
        "245": "Acknowledgments  This work has been supported by the German Research Foundation (DFG) as part of the Research Training Group \u201cAdaptive Preparation of Information from Heterogeneous Sources\u201d (AIPHES) under grant No.", 
        "246": "GRK 1994/1, and via the GermanIsraeli Project Cooperation (DIP, grant No.", 
        "247": "GU 798/17-1)."
    }, 
    "document_id": "P17-1100.pdf.json"
}
