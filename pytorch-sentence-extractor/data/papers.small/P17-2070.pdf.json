{
    "abstract_sentences": {
        "1": "Distributed word representations are widely used for modeling words in NLP tasks.", 
        "2": "Most of the existing models generate one representation per word and do not consider different meanings of a word.", 
        "3": "We present two approaches to learn multiple topic-sensitive representations per word by using Hierarchical Dirichlet Process.", 
        "4": "We observe that by modeling topics and integrating topic distributions for each document we obtain representations that are able to distinguish between different meanings of a given word.", 
        "5": "Our models yield statistically significant improvements for the lexical substitution task indicating that commonly used single word representations, even when combined with contextual information, are insufficient for this task."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 441\u2013447 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-2070  1 Introduction  Word representations in the form of dense vectors, or word embeddings, capture semantic and syntactic information (Mikolov et al., 2013a; Pennington et al., 2014) and are widely used in many NLP tasks (Zou et al., 2013; Levy and Goldberg, 2014; Tang et al., 2014; Gharbieh et al., 2016).", 
        "2": "Most of the existing models generate one representation per word and do not distinguish between different meanings of a word.", 
        "3": "However, many tasks can benefit from using multiple representations per word to capture polysemy (Reisinger and Mooney, 2010).", 
        "4": "There have been several attempts to build repositories for word senses (Miller, 1995; Navigli and Ponzetto, 2010), but this is laborious and limited to few languages.", 
        "5": "Moreover, defining a universal set of word senses is challenging as polysemous words can exist at many levels of\ngranularity (Kilgarriff, 1997; Navigli, 2012).", 
        "6": "In this paper, we introduce a model that uses a nonparametric Bayesian model, Hierarchical Dirichlet Process (HDP), to learn multiple topicsensitive representations per word.", 
        "7": "Yao and van Durme (2011) show that HDP is effective in learning topics yielding state-of-the-art performance for sense induction.", 
        "8": "However, they assume that topics and senses are interchangeable, and train individual models per word making it difficult to scale to large data.", 
        "9": "Our approach enables us to use HDP to model senses effectively using large unannotated training data.", 
        "10": "We investigate to what extent distributions over word senses can be approximated by distributions over topics without assuming these concepts to be identical.", 
        "11": "The contributions of this paper are: (i) We propose three unsupervised, language-independent approaches to approximate senses with topics and learn multiple topic-sensitive embeddings per word.", 
        "12": "(ii) We show that in the Lexical Substitution ranking task our models outperform two competitive baselines.", 
        "13": "2 Topic-Sensitive Representations  In this section we describe the proposed models.", 
        "14": "To learn topics from a corpus we use HDP (Teh et al., 2006; Lau et al., 2014).", 
        "15": "The main advantage of this model compared to non-hierarchical methods like the Chinese Restaurant Process (CRP) is that each document in the corpus is modeled using a mixture model with topics shared between all documents (Teh et al., 2005; Brody and Lapata, 2009).", 
        "16": "HDP yields two sets of distributions that we use in our methods: distributions over topics for words in the vocabulary, and distributions over topics for documents in the corpus.", 
        "17": "Similarly to Neelakantan et al.", 
        "18": "(2014), we use neighboring words to detect the meaning of the context, however, we also use the two HDP dis-\n441\ntributions.", 
        "19": "By doing so, we take advantage of the topic of the document beyond the scope of the neighboring words, which is helpful when the immediate context of the target word is not sufficiently informative.", 
        "20": "We modify the Skipgram model (Mikolov et al., 2013a) to obtain multiple topic-sensitive representations per word type using topic distributions.", 
        "21": "In addition, we do not cluster context windows and train for different senses of the words individually.", 
        "22": "This reduces the sparsity problem and provides a better representation estimation for rare words.", 
        "23": "We assume that meanings of words can be determined by their contextual information and use the distribution over topics to differentiate between occurrences of a word in different contexts, i.e., documents with different topics.", 
        "24": "We propose three different approaches (see Figure 1): two methods with hard topic labeling of words and one with soft labeling.", 
        "25": "2.1 Hard Topic-Labeled Representations  The trained HDP model can be used to hard-label a new corpus with one topic per word through sampling.", 
        "26": "Our first model variant (Figure 1(a)) relies on hard labeling by simply considering each word-topic pair as a separate vocabulary entry.", 
        "27": "To reduce sparsity on the context side and share the word-level information between similar contexts, we use topic-sensitive representations for target words (input to the network) and standard, i.e., unlabeled, word representations for context words (output).", 
        "28": "Note that this results in different input and output vocabularies.", 
        "29": "The training objective is then to maximize the log-likelihood of context words wi`j given the target word-topic pair w\u03c4i :\nLHardT -SG \u201c 1 I\nI\u00ff\ni\u201c1\n\u00ff\n\u00b4c\u010fj\u010fc j\u20300\nlog ppwi`j |w\u03c4i q\nwhere I is the number of words in the training corpus, c is the context size and \u03c4 is the topic assigned towi by HDP sampling.", 
        "30": "The embedding of a word in context hpwiq is obtained by simply extracting the row of the input lookup table (r) corresponding to the HDP-labeled word-topic pair:\nhHTLEpwiq \u201c rpw\u03c4i q (1) A possible shortcoming of the HTLE model is that the representations are trained separately and information is not shared between different topicsensitive representations of the same word.", 
        "31": "To address this issue, we introduce a model variant that learns multiple topic-sensitive word representations and generic word representations simultaneously (Figure 1(b)).", 
        "32": "In this variant (HTLEadd), the target word embedding is obtained by adding the word-topic pair representation (r1) to the generic representation of the corresponding word (r0): hHTLEaddpwiq \u201c r1pw\u03c4i q ` r0pwiq (2)  2.2 Soft Topic-Labeled Representations  The model variants above rely on the hard labeling resulting from HDP sampling.", 
        "33": "As a soft alternative to this, we can directly include the topic distributions estimated by HDP for each document (Figure 1(c)).", 
        "34": "Specifically, for each update, we use the topic distribution to compute a weighted sum over the word-topic representations (r2):\nhSTLEpwiq \u201c T\u00ff\nk\u201c1 pp\u03c4k|diq r2pw\u03c4ki q (3)\nwhere T is the total number of topics, di the document containing wi, and pp\u03c4k|diq the probability assigned to topic \u03c4k by HDP in document di.", 
        "35": "The training objective for this model is:\nLSoftT -SG \u201c 1 I\nI\u00ff\ni\u201c1\n\u00ff\n\u00b4c\u010fj\u010fc j\u20300\nlog ppwi`j |wi, \u03c4q\nwhere \u03c4 is the topic of document di learned by HDP.", 
        "36": "The STLE model has the advantage of directly applying the distribution over topics in the Skipgram model.", 
        "37": "In addition, for each instance, we update all topic representations of a given word with non-zero probabilities, which has the potential to reduce the sparsity problem.", 
        "38": "2.3 Embeddings for Polysemous Words  The representations obtained from our models are expected to capture the meaning of a word in different topics.", 
        "39": "We now investigate whether these representations can distinguish between different word senses.", 
        "40": "Table 1 provides examples of nearest neighbors.", 
        "41": "For comparison we include our own baseline, i.e., embeddings learned with Skipgram on our corpus, as well as Word2Vec (Mikolov et al., 2013b) and GloVe embeddings (Pennington et al., 2014) pre-trained on large data.", 
        "42": "In the first example, the word bat has two different meanings: animal or sports device.", 
        "43": "One can see that the nearest neighbors of the baseline and pre-trained word representations either center around one primary, i.e., most frequent, meaning of the word, or it is a mixture of different meanings.", 
        "44": "The topic-sensitive representations, on the other hand, correctly distinguish between the two different meanings.", 
        "45": "A similar pattern is observed for the word jaguar and its two meanings: car\nor animal.", 
        "46": "The last example, appeal, illustrates a case where topic-sensitive embeddings are not clearly detecting different meanings of the word, despite having some correct words in the lists.", 
        "47": "Here, the meaning attract does not seem to be captured by any embedding set.", 
        "48": "These observations suggest that topic-sensitive representations capture different word senses to some extent.", 
        "49": "To provide a systematic validation of our approach, we now investigate whether topicsensitive representations can improve tasks where polysemy is a known issue.", 
        "50": "3 Evaluation  In this section we present the setup for our experiments and empirically evaluate our approach on the context-aware word similarity and lexical substitution tasks.", 
        "51": "3.1 Experimental setup  All word representations are learned on the English Wikipedia corpus containing 4.8M documents (1B tokens).", 
        "52": "The topics are learned on a 100K-document subset of this corpus using the HDP implementation of Teh et al.", 
        "53": "(2006).", 
        "54": "Once the topics have been learned, we run HDP on the whole corpus to obtain the word-topic labeling (see Section 2.1) and the document-level topic distributions (Section 2.2).", 
        "55": "We train each model vari-\nant with window size c \u201c 10 and different embedding sizes (100, 300, 600) initialized randomly.", 
        "56": "We compare our models to several baselines: Skipgram (SGE) and the best-performing multisense embeddings model per word type (MSSG) (Neelakantan et al., 2014).", 
        "57": "All model variants are trained on the same training data with the same settings, following suggestions by Mikolov et al.", 
        "58": "(2013a) and Levy et al.", 
        "59": "(2015).", 
        "60": "For MSSG we use the best performing similarity measure (avgSimC) as proposed by Neelakantan et al.", 
        "61": "(2014).", 
        "62": "3.2 Context-Aware Word Similarity Task  Despite its shortcomings (Faruqui et al., 2016), word similarity remains the most frequently used method of evaluation in the literature.", 
        "63": "There are multiple test sets available but in almost all of them word pairs are considered out of context.", 
        "64": "To the best of our knowledge, the only word similarity data set providing word context is SCWS (Huang et al., 2012).", 
        "65": "To evaluate our models on SCWS, we run HDP on the data treating each word\u2019s context as a separate document.", 
        "66": "We compute the similarity of each word pair as follows:\nSimpw1, w2q \u201c cosphpw1q,hpw2qq where hpwiq refers to any of the topic-sensitive representations defined in Section 2.", 
        "67": "Note that w1 and w2 can refer to the same word.", 
        "68": "Table 2 provides the Spearman\u2019s correlation scores for different models against the human ranking.", 
        "69": "We see that with dimensions 100 and 300, two of our models obtain improvements over the baseline.", 
        "70": "The MSSG model of Neelakantan et al.", 
        "71": "(2014) performs only slightly better than our HLTE model by requiring considerably more parameters (600 vs. 100 embedding size).", 
        "72": "3.3 Lexical Substitution Task  This task requires one to identify the best replacements for a word in a sentential context.", 
        "73": "The pres-\nence of many polysemous target words makes this task more suitable for evaluating sense embedding.", 
        "74": "Following Melamud et al.", 
        "75": "(2015) we pool substitutions from different instances and rank them by the number of annotators that selected them for a given context.", 
        "76": "We use two evaluation sets: LS-SE07 (McCarthy and Navigli, 2007), and LS-CIC (Kremer et al., 2014).", 
        "77": "Unlike previous work (Szarvas et al., 2013; Kremer et al., 2014; Melamud et al., 2015) we do not use any syntactic information, motivated by the fact that high-quality parsers are not available for most languages.", 
        "78": "The evaluation is performed by computing the Generalized Average Precision (GAP) score (Kishida, 2005).", 
        "79": "We run HDP on the evaluation set and compute the similarity between target word wt and each substitution ws using two different inference methods in line with how we incorporate topics during training:\nSampled (Smp): SimTSEpws, wtq \u201c cosphpw\u03c4s q,hpw\u03c4 1 t qq ` \u0159 c cosphpw\u03c4s q,opwcqq\nC\nExpected (Exp): SimTSEpws, wtq \u201c \u00ff\n\u03c4,\u03c4 1 pp\u03c4q pp\u03c4 1q\ncosphpw\u03c4s q,hpw\u03c4 1 t qq `\n\u0159 \u03c4,c cosphpw\u03c4s q,opwcqq pp\u03c4q\nC\nwhere hpw\u03c4s q and hpw\u03c4 1t q are the representations for substitution word s with topic \u03c4 and target word t with topic \u03c4 1 respectively (cf.", 
        "80": "Section 2), wc are context words of wt taken from a sliding window of the same size as the embeddings, opwcq is the context (i.e., output) representation of wc, and C is the total number of context words.", 
        "81": "Note\nthat these two methods are consistent with how we train HTLE and STLE.", 
        "82": "The sampled method, similar to HTLE, uses the HDP model to assign topics to word occurrences during testing.", 
        "83": "The expected method, similar to STLE, uses the HDP model to learn the probability distribution of topics of the context sentence and uses the entire distribution to compute the similarity.", 
        "84": "For the Skipgram baseline we compute the similarity SimSGE+Cpws, wtq as follows:\ncosphpwsq,hpwtqq ` \u0159 c cosphpwsq,opwcqq\nC\nwhich uses the similarity between the substitution word and all words in the context, as well as the similarity of target and substitution words.", 
        "85": "Table 3 shows the GAP scores of our models and baselines.1 One can see that all models using multiple embeddings per word perform better than SGE.", 
        "86": "Our proposed models outperform both SGE and MSSG in both evaluation sets, with more pronounced improvements for LS-CIC.", 
        "87": "We further observe that our expected method is more robust and performs better for all embedding sizes.", 
        "88": "Table 4 shows the GAP scores broken down by the main word classes: noun, verb, adjective, and adverb.", 
        "89": "With 100 dimensions our best model (HTLE) yields improvements across all POS tags, with the largest improvements for adverbs and smallest improvements for adjectives.", 
        "90": "When increasing the dimension size of embeddings the improvements hold up for all POS tags apart from adverbs.", 
        "91": "It can be inferred that larger dimension sizes capture semantic similarities for adverbs and context words better than other parts-of-speech categories.", 
        "92": "Additionally, we observe for both evaluation sets that the improvements are preserved when increasing the embedding size.", 
        "93": "4 Related Work  While the most commonly used approaches learn one embedding per word type (Mikolov et al.,\n1We use the nonparametric rank-based Mann-WhitneyWilcoxon test (Sprent and Smeeton, 2016) to check for statistically significant differences between runs.", 
        "94": "2013a; Pennington et al., 2014), recent studies have focused on learning multiple embeddings per word due to the ambiguous nature of language (Qiu et al., 2016).", 
        "95": "Huang et al.", 
        "96": "(2012) cluster word contexts and use the average embedding of each cluster as word sense embeddings, which yields improvements on a word similarity task.", 
        "97": "Neelakantan et al.", 
        "98": "(2014) propose two approaches, both based on clustering word contexts: In the first, they fix the number of senses manually, and in the second, they use an ad-hoc greedy procedure that allocates a new representation to a word if existing representations explain the context below a certain threshold.", 
        "99": "Li and Jurafsky (2015) used a CRP model to distinguish between senses of words and train vectors for senses, where the number of senses is not fixed.", 
        "100": "They use two heuristic approaches for assigning senses in a context: \u2018greedy\u2019 which assigns the locally optimum sense label to each word, and \u2018expectation\u2019 which computes the expected value for a word in a given context with probabilities for each possible sense.", 
        "101": "5 Conclusions  We have introduced an approach to learn topicsensitive word representations that exploits the document-level context of words and does not require annotated data or linguistic resources.", 
        "102": "Our evaluation on the lexical substitution task suggests that topic distributions capture word senses to some extent.", 
        "103": "Moreover, we obtain statistically significant improvements in the lexical substitution task while not using any syntactic information.", 
        "104": "The best results are achieved by our hard topiclabeled model which learns topic-sensitive representations by assigning topics to target words.", 
        "105": "Acknowledgments  This research was funded in part by the Netherlands Organization for Scientific Research (NWO) under project numbers 639.022.213 and 639.021.646, and a Google Faculty Research Award.", 
        "106": "We thank the anonymous reviewers for their helpful comments."
    }, 
    "document_id": "P17-2070.pdf.json"
}
