{
    "abstract_sentences": {
        "1": "Neural word segmentation research has benefited from large-scale raw texts by leveraging them for pretraining character and word embeddings.", 
        "2": "On the other hand, statistical segmentation research has exploited richer sources of external information, such as punctuation, automatic segmentation and POS.", 
        "3": "We investigate the effectiveness of a range of external training sources for neural word segmentation by building a modular segmentation model, pretraining the most important submodule using rich external sources.", 
        "4": "Results show that such pretraining significantly improves the model, leading to accuracies competitive to the best methods on six benchmarks."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 839\u2013849 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1078  1 Introduction  There has been a recent shift of research attention in the word segmentation literature from statistical methods to deep learning (Zheng et al., 2013; Pei et al., 2014; Morita et al., 2015; Chen et al., 2015b; Cai and Zhao, 2016; Zhang et al., 2016b).", 
        "2": "Neural network models have been exploited due to their strength in non-sparse representation learning and non-linear power in feature combination, which have led to advances in many NLP tasks.", 
        "3": "So far, neural word segmentors have given comparable accuracies to the best statictical models.", 
        "4": "With respect to non-sparse representation, character embeddings have been exploited as a foundation of neural word segmentors.", 
        "5": "They serve to reduce sparsity of character ngrams, allowing, for example, \u201c\u732b(cat)\u8eba(lie)\u5728(in)\u5899\u89d2(corner)\u201d to be connected with \u201c\u72d7(dog) \u8e72(sit) \u5728(in) \u5899\n\u2217 Equal contribution.", 
        "6": "\u89d2(corner)\u201d (Zheng et al., 2013), which is infeasible by using sparse one-hot character features.", 
        "7": "In addition to character embeddings, distributed representations of character bigrams (Mansur et al., 2013; Pei et al., 2014) and words (Morita et al., 2015; Zhang et al., 2016b) have also been shown to improve segmentation accuracies.", 
        "8": "With respect to non-linear modeling power, various network structures have been exploited to represent contexts for segmentation disambiguation, including multi-layer perceptrons on fivecharacter windows (Zheng et al., 2013; Mansur et al., 2013; Pei et al., 2014; Chen et al., 2015a), as well as LSTMs on characters (Chen et al., 2015b; Xu and Sun, 2016) and words (Morita et al., 2015; Cai and Zhao, 2016; Zhang et al., 2016b).", 
        "9": "For structured learning and inference, CRF has been used for character sequence labelling models (Pei et al., 2014; Chen et al., 2015b) and structural beam search has been used for word-based segmentors (Cai and Zhao, 2016; Zhang et al., 2016b).", 
        "10": "Previous research has shown that segmentation accuracies can be improved by pretraining character and word embeddings over large Chinese texts, which is consistent with findings on other NLP tasks, such as parsing (Andor et al., 2016).", 
        "11": "Pretraining can be regarded as one way of leveraging external resources to improve accuracies, which is practically highly useful and has become a standard practice in neural NLP.", 
        "12": "On the other hand, statistical segmentation research has exploited raw texts for semi-supervised learning, by collecting clues from raw texts more thoroughly such as mutual information and punctuation (Li and Sun, 2009; Sun and Xu, 2011), and making use of selfpredictions (Wang et al., 2011; Liu and Zhang, 2012).", 
        "13": "It has also utilised heterogenous annotations such as POS (Ng and Low, 2004; Zhang and Clark, 2008) and segmentation under different\n839\nstandards (Jiang et al., 2009).", 
        "14": "To our knowledge, such rich external information has not been systematically investigated for neural segmentation.", 
        "15": "We fill this gap by investigating rich external pretraining for neural segmentation.", 
        "16": "Following Cai and Zhao (2016) and Zhang et al.", 
        "17": "(2016b), we adopt a globally optimised beam-search framework for neural structured prediction (Andor et al., 2016; Zhou et al., 2015; Wiseman and Rush, 2016), which allows word information to be modelled explicitly.", 
        "18": "Different from previous work, we make our model conceptually simple and modular, so that the most important sub module, namely a five-character window context, can be pretrained using external data.", 
        "19": "We adopt a multi-task learning strategy (Collobert et al., 2011), casting each external source of information as a auxiliary classification task, sharing a five-character window network.", 
        "20": "After pretraining, the character window network is used to initialize the corresponding module in our segmentor.", 
        "21": "Results on 6 different benchmarks show that our method outperforms the best statistical and neural segmentation models consistently, giving the best reported results on 5 datasets in different domains and genres.", 
        "22": "Our implementation is based on LibN3L1 (Zhang et al., 2016a).", 
        "23": "Code and models can be downloaded from http://gitHub.", 
        "24": "com/jiesutd/RichWordSegmentor  2 Related Work  Work on statistical word segmentation dates back to the 1990s (Sproat et al., 1996).", 
        "25": "State-of-the-art approaches include character sequence labeling models (Xue et al., 2003) using CRFs (Peng et al.,\n1https://github.com/SUTDNLP/LibN3L\n2004; Zhao et al., 2006) and max-margin structured models leveraging word features (Zhang and Clark, 2007; Sun et al., 2009; Sun, 2010).", 
        "26": "Semisupervised methods have been applied to both character-based and word-based models, exploring external training data for better segmentation (Sun and Xu, 2011; Wang et al., 2011; Liu and Zhang, 2012; Zhang et al., 2013).", 
        "27": "Our work belongs to recent neural word segmentation.", 
        "28": "To our knowledge, there has been no work in the literature systematically investigating rich external resources for neural word segmentation training.", 
        "29": "Closest in spirit to our work, Sun and Xu (2011) empirically studied the use of various external resources for enhancing a statistical segmentor, including character mutual information, access variety information, punctuation and other statistical information.", 
        "30": "Their baseline is similar to ours in the sense that both character and word contexts are considered.", 
        "31": "On the other hand, their model is statistical while ours is neural.", 
        "32": "Consequently, they integrate external knowledge as features, while we integrate it by shared network parameters.", 
        "33": "Our results show a similar degree of error reduction compared to theirs by using external data.", 
        "34": "Our model inherits from previous findings on context representations, such as character windows (Mansur et al., 2013; Pei et al., 2014; Chen et al., 2015a) and LSTMs (Chen et al., 2015b; Xu and Sun, 2016).", 
        "35": "Similar to Zhang et al.", 
        "36": "(2016b) and Cai and Zhao (2016), we use word context on top of character context.", 
        "37": "However, words play a relatively less important role in our model, and we find that word LSTM, which has been used by all previous neural segmentation work, is unnecessary for our model.", 
        "38": "Our model is conceptually simpler and more modularised compared with\nZhang et al.", 
        "39": "(2016b) and Cai and Zhao (2016), allowing a central sub module, namely a fivecharacter context window, to be pretrained.", 
        "40": "3 Model  Our segmentor works incrementally from left to right, as the example shown in Table 1.", 
        "41": "At each step, the state consists of a sequence of words that have been fully recognized, denoted as W = [w\u2212k, w\u2212k+1, ..., w\u22121], a current partially recognized word P , and a sequence of next incoming characters, denoted as C = [c0, c1, ..., cm], as shown in Figure 1.", 
        "42": "Given an input sentence, W and P are initialized to [ ] and \u03c6, respectively, and C contains all the input characters.", 
        "43": "At each step, a decision is made on c0, either appending it as a part of P , or seperating it as the beginning of a new word.", 
        "44": "The incremental process repeats until C is empty and P is null again (C = [ ], P = \u03c6).", 
        "45": "Formally, the process can be regarded as a state-transition process, where a state is a tuple S = \u3008W,P,C\u3009, and the transition actions include SEP (seperate) and APP (append), as shown by the deduction system in Figure 22.", 
        "46": "In the figure, V denotes the score of a state, given by a neural network model.", 
        "47": "The score of the initial state (i.e.", 
        "48": "axiom) is 0, and the score of a non-axiom state is the sum of scores of all incremental decisions resulting in the state.", 
        "49": "Similar to Zhang et al.", 
        "50": "(2016b) and Cai and Zhao (2016), our model is a global structural model, using the overall score to disambiguate states, which correspond to sequences of inter-dependent transition actions.", 
        "51": "Different from previous work, the structure of\n2An end of sentence symbol \u3008/s\u3009 is added to the input so that the last partial word can be put onto W as a full word before segmentation finishes.", 
        "52": "our scoring network is shown in Figure 1.", 
        "53": "It consists of three main layers.", 
        "54": "On the bottom is a representation layer, which derives dense representations XW , XP and XC for W,P and C, respectively.", 
        "55": "We compare various distributed representations and neural network structures for learning XW , XP and XC , detailed in Section 3.1.", 
        "56": "On top of the representation layer, we use a hidden layer to merge XW , XP and XC into a single vector\nh = tanh(WhW \u00b7XW +WhP \u00b7XP +WhC \u00b7XC+bh) (1) The hidden feature vector h is used to represent the state S = \u3008W,P,C\u3009, for calculating the scores of the next action.", 
        "57": "In particular, a linear output layer with two nodes is employed:\no = Wo \u00b7 h+ bo (2) The first and second node of o represent the scores of SEP and APP given S, namely Score(S, SEP), Score(S,APP) respectively.", 
        "58": "3.1 Representation Learning  Characters.", 
        "59": "We investigate two different approaches to encode incoming characters, namely a window approach and an LSTM approach.", 
        "60": "For the former, we follow prior methods (Xue et al., 2003; Pei et al., 2014), using five-character window [c\u22122, c\u22121, c0, c1, c2] to represent incoming characters.", 
        "61": "Shown in Figure 3, a multi-layer perceptron (MLP) is employed to derive a five-character window vector DC from single-character vector representations Vc\u22122 , Vc\u22121 , Vc0 , Vc1 , Vc2 .", 
        "62": "DC = MLP([Vc\u22122 ;Vc\u22121 ;Vc0 ;Vc1 ;Vc2 ]) (3)\nFor the latter, we follow recent work (Chen et al., 2015b; Zhang et al., 2016b), using a bidirectional LSTM to encode input character sequence.3 In particular, the bi-directional LSTM\n3The LSTM variation with coupled input and forget gate but without peephole connections is applied (Gers and Schmidhuber, 2000)\nhidden vector [ \u2190\u2212 hC(c0); \u2212\u2192 hC(c0)] of the next incoming character c0 is used to represent the coming characters [c0, c1, ...] given a state.", 
        "63": "Intuitively, a five-character window provides a local context from which the meaning of the middle character can be better disambiguated.", 
        "64": "LSTM, on the other hand, captures larger contexts, which can contain more useful clues for dismbiguation but also irrelevant information.", 
        "65": "It is therefore interesting to investigate a combination of their strengths, by first deriving a locally-disambiguated version of c0, and then feed it to LSTM for a globally disambiguated representation.", 
        "66": "Now with regard to the single-character vector representation Vci(i \u2208 [\u22122, 2]), we follow previous work and consider both character embedding ec(ci) and character-bigram embedding eb(ci, ci+1) , investigating the effect of each on the accuracies.", 
        "67": "When both ec(ci) and eb(ci, ci+1) are utilized, the concatenated vector is taken as Vci .", 
        "68": "Partial Word.", 
        "69": "We take a very simple approach to representing the partial word P , by using the embedding vectors of its first and last characters, as well as the embedding of its length.", 
        "70": "Length embeddings are randomly initialized and then tuned in model training.", 
        "71": "XP has relatively less influence on the empirical segmentation accuracies.", 
        "72": "XP = [e c(P [0]); ec(P [\u22121]); el(LEN(P ))] (4)\nWord.", 
        "73": "Similar to the character case, we investigate two different approaches to encoding incoming characters, namely a window approach and an LSTM approach.", 
        "74": "For the former, we follow prior methods (Zhang and Clark, 2007; Sun, 2010), using the two-word window [w\u22122, w\u22121] to represent recognized words.", 
        "75": "A hidden layer is employed to derive a two-word vector XW from single word embeddings ew(w\u22122) and ew(w\u22121).", 
        "76": "XW = tanh(Ww[e w(w\u22122); ew(w\u22121)] + bw) (5)\nFor the latter, we follow Zhang et al.", 
        "77": "(2016b) and Cai and Zhao (2016), using an uni-directional LSTM on words that have been recognized.", 
        "78": "3.2 Pretraining  Neural network models for NLP benefit from pretraining of word/character embeddings, learning distributed sementic information from large raw texts for reducing sparsity.", 
        "79": "The three basic elements in our neural segmentor, namely characters, character bigrams and words, can all be pretrained\nover large unsegmented data.", 
        "80": "We pretrain the fivecharacter window network in Figure 3 as an unit, learning the MLP parameter together with character and bigram embeddings.", 
        "81": "We consider four types of commonly explored external data to this end, all of which have been studied for statistical word segmentation, but not for neural network segmentors.", 
        "82": "Raw Text.", 
        "83": "Although raw texts do not contain explicit word boundary information, statistics such as mutual information between consecutive characters can be useful features for guiding segmentation (Sun and Xu, 2011).", 
        "84": "For neural segmentation, these distributional statistics can be implicitly learned by pretraining character embeddings.", 
        "85": "We therefore consider a more explicit clue for pretraining our character window network, namely punctuations (Li and Sun, 2009).", 
        "86": "Punctuation can serve as a type of explicit markup (Spitkovsky et al., 2010), indicating that the two characters on its left and right belong to two different words.", 
        "87": "We leverage this source of information by extracting character five-grams excluding punctuation from raw sentences, using them as inputs to classify whether there is punctuation before middle character.", 
        "88": "Denoting the resulting five character window as [c\u22122, c\u22121, c0, c1, c2], the MLP in Figure 3 is used to derive its representation DC , which is then fed to a softmax layer for binary classification:\nP (punc) = softmax(Wpunc \u00b7DC + bpunc) (6)\nHere P (punc) indicates the probability of a punctuation mark existing before c0.", 
        "89": "Standard backpropagation training of the MLP in Figure 3 can be done jointly with the training of Wpunc and bpunc.", 
        "90": "After such training, the embedding Vci and MLP values can be used to initialize the corresponding parameters for DC in the main segmentor, before\nits training.", 
        "91": "Automatically Segmented Text.", 
        "92": "Large texts automatically segmented by a baseline segmentor can be used for self-training (Liu and Zhang, 2012) or deriving statistical features (Wang et al., 2011).", 
        "93": "We adopt a simple strategy, taking automatically segmented text as silver data to pretrain the five-character window network.", 
        "94": "Given [c\u22122, c\u22121, c0, c1.c2], DC is derived using the MLP in Figure 3, and then used to classify the segmentation of c0 into B(begining)/M(middle)/E(end)/S(single character word) labels.", 
        "95": "P (silver) = softmax(Wsilv \u00b7DC + bsilv) (7)\nHere Wsilv and bsilv are model parameters.", 
        "96": "Training can be done in the same way as training with punctuation.", 
        "97": "Heterogenous Training Data.", 
        "98": "Multiple segmentation corpora exist for Chinese, with different segmentation granularities.", 
        "99": "There has been investigation on leveraging two corpora under different annotation standards to improve statistical segmentation (Jiang et al., 2009).", 
        "100": "We try to utilize heterogenous treebanks by taking an external treebank as labeled data, training a B/M/E/S classifier for the character windows network.", 
        "101": "P (hete) = softmax(Whete \u00b7DC + bhete) (8)\nPOS Data.", 
        "102": "Previous research has shown that POS information is closely related to segmentation (Ng and Low, 2004; Zhang and Clark, 2008).", 
        "103": "We verify the utility of POS information for our segmentor by pretraining a classifier that predicts the POS on each character, according to the character window representation DC .", 
        "104": "In particular, given [c\u22122, c\u22121, c0, c1, c2], the POS of the word that c0 belongs to is used as the output.", 
        "105": "P (pos) = softmax(Wpos \u00b7DC + bpos) (9)\nMultitask Learning.", 
        "106": "While each type of external training data can offer one source of segmentation information, different external data can be complimentary to each other.", 
        "107": "We aim to inject all sources of information into the character window representation DC by using it as a shared representation for different classification tasks.", 
        "108": "Neural model have been shown capable of doing multi-task learning via parameter sharing (Collobert et al., 2011).", 
        "109": "Shown in Figure 3, in our\nAlgorithm 1: Training Input : (xi, yi) Parameters: \u0398 Process: agenda\u2190 (S = \u3008[ ], \u03c6,Xi\u3009, V = 0) for j in [0:LEN(Xi)] do\nbeam = [] for y\u0302 in agenda do\ny\u0302\u2032 = ACTION(y\u0302, SEP) ADD(y\u0302\u2032, beam) y\u0302\u2032 = ACTION(y\u0302, APP) ADD(y\u0302\u2032, beam) end agenda\u2190 TOP(beam, B) if yij /\u2208 agenda then\ny\u0302j = BESTIN(agenda) UPDATE(yij , y\u0302j ,\u0398) return\nend end y\u0302 = BESTIN(agenda) UPDATE(yi, y\u0302,\u0398) return\ncase, the output layer for each task is independent, but the hidden layer DC and all layers below DC are shared.", 
        "110": "For training with all sources above, we randomly sample sentences from the Punc./Autoseg/Heter./POS sources with the ratio of 10/1/1/1, for each sentence in punctuation corpus we take only 2 characters (character before and after the punctuation) as input instances.", 
        "111": "4 Decoding and Training  To train the main segmentor, we adopt the global transition-based learning and beam-search strategy of Zhang and Clark (2011).", 
        "112": "For decoding, standard beam search is used, where the B best partial output hypotheses at each step are maintained in an agenda.", 
        "113": "Initially, the agenda contains only the start state.", 
        "114": "At each step, all hypotheses in the agenda are expanded, by applying all possible actions and B highest scored resulting hypotheses are used as the agenda for the next step.", 
        "115": "For training, the same decoding process is applied to each training example (xi, yi).", 
        "116": "At step j, if the gold-standard sequence of transition actions yij falls out of the agenda, max-margin update is performed by taking the current best hypothesis y\u0302j in the beam as a negative example, and yij as\na positive example.", 
        "117": "The loss function is\nl(y\u0302j , y i j) = max((score(y\u0302j) + \u03b7 \u00b7 \u03b4(y\u0302j , yij)\n\u2212 score(yij)), 0), (10)\nwhere \u03b4(y\u0302j , yij) is the number of incorrect local decisions in y\u0302j , and \u03b7 controls the score margin.", 
        "118": "The strategy above is early-update (Collins and Roark, 2004).", 
        "119": "On the other hand, if the goldstandard hypothesis does not fall out of the agenda until the full sentence has been segmented, a final update is made between the highest scored hypothesis y\u0302 (non-gold standard) in the agenda and the gold-standard yi, using exactly the same loss function.", 
        "120": "Pseudocode for the online learning algorithm is shown in Algorithm 1.", 
        "121": "We use Adagrad (Duchi et al., 2011) to optimize model parameters, with an initial learning rate \u03b1. L2 regularization and dropout (Srivastava et al., 2014) on input are used to reduce overfitting, with a L2 weight \u03bb and a dropout rate p. All the parameters in our model are randomly initialized to a value (\u2212r, r), where r = \u221a 6.0\nfanin+fanout (Ben-\ngio, 2012).", 
        "122": "We fine-tune character and character bigram embeddings, but not word embeddings, acccording to Zhang et al.", 
        "123": "(2016b).", 
        "124": "5 Experiments    5.1 Experimental Settings  Data.", 
        "125": "We use Chinese Treebank 6.0 (CTB6) (Xue et al., 2005) as our main dataset.", 
        "126": "Training, development and test set splits follow previous work (Zhang et al., 2014).", 
        "127": "In order to verify the robustness of our model, we additionally use SIGHAN 2005 bake-off (Emerson, 2005) and NLPCC 2016 shared task for Weibo segmentation (Qiu et al., 2016) as test datasets, where the standard splits are used.", 
        "128": "For pretraining embedding of\nwords, characters and character bigrams, we use Chinese Gigaword (simplified Chinese sections)4, automatically segmented using ZPar 0.6 off-theshelf (Zhang and Clark, 2007), the statictics of which are shown in Table 3.", 
        "129": "For pretraining character representations, we extract punctuation classification data from the Gigaword corpus, and use the word-based ZPar and a standard character-based CRF model (Tseng et al., 2005) to obtain automatic segmentation results.", 
        "130": "We compare pretraining using ZPar results only and using results that both segmentors agree on.", 
        "131": "For heterogenous segmentation corpus and POS data, we use a People\u2019s Daily corpus of 5 months5.", 
        "132": "Statistics are listed in Table 3.", 
        "133": "Evaluation.", 
        "134": "The standard word precision, recall and F1 measure (Emerson, 2005) are used to evaluate segmentation performances.", 
        "135": "Hyper-parameter Values.", 
        "136": "We adopt commonly used values for most hyperparameters, but tuned the sizes of hidden layers on the development set.", 
        "137": "The values are summarized in Table 2.", 
        "138": "5.2 Development Experiments  We perform development experiments to verify the usefulness of various context representations, network configurations and different pretraining methods, respectively.", 
        "139": "5.2.1 Context Representations  The influence of character and word context representations are empirically studied by varying the network structures forXC andXW in Figure 1, respectively.", 
        "140": "All the experiments in this section are performed using a beam size of 8.", 
        "141": "Character Context.", 
        "142": "We fix the word representation XW to a 2-word window and compare different character context representations.", 
        "143": "The results are shown in Table 4, where \u201cno char\u201d represents our model without XC , \u201c5-char window\u201d represents a five-character window context, \u201cchar LSTM\u201d represents character LSTM context and\n4https://catalog.ldc.upenn.edu/LDC2011T13 5http://www.icl.pku.edu.cn/icl res\n\u201c5-char window + LSTM\u201d represents a combination, detailed in Section 3.1.", 
        "144": "\u201c-char emb\u201d and \u201c- bichar emb\u201d represent the combined window and LSTM context without character and characterbigram information, respectively.", 
        "145": "As can be seen from the table, without character information, the F-score is 84.62%, demonstrating the necessity of character contexts.", 
        "146": "Using window and LSTM representations, the Fscores increase to 95.41% and 95.51%, respectively.", 
        "147": "A combination of the two lead to further improvement, showing that local and global character contexts are indeed complementary, as hypothesized in Section 3.1.", 
        "148": "Finally, by removing character and character-bigram embeddings, the F-score decreases to 95.20% and 94.27%, respectively, which suggests that character bigrams are more useful compared to character unigrams.", 
        "149": "This is likely because they contain more distinct tokens and hence offer a larger parameter space.", 
        "150": "Word Context.", 
        "151": "The influence of various word contexts are shown in Table 5.", 
        "152": "Without using word information, our segmentor gives an F-score of 95.66% on the development data.", 
        "153": "Using a context of only w\u22121 (1-word window), the F-measure increases to 95.78%.", 
        "154": "This shows that word contexts are far less important in our model compared to character contexts, and also compared to word contexts in previous word-based segmentors (Zhang et al., 2016b; Cai and Zhao, 2016).", 
        "155": "This is likely due to the difference in our neural network structures, and that we fine-tune both character and character bigram embeddings, which significantly enlarges the adjustable parameter space as compared with Zhang et al.", 
        "156": "(2016b).", 
        "157": "The fact that word contexts can contribute relatively less than characters in a word is also not surprising in the sense that word-based neural segmentors do not outperform the best character-based models by large margins.", 
        "158": "Given that character context is what we pretrain, our model relies more heavily\non them.", 
        "159": "With both w\u22122 and w\u22121 being used for the context, the F-score further increases to 95.86%, showing that a 2-word window is useful by offering more contextual information.", 
        "160": "On the other hand, when w\u22123 is also considered, the F-score does not improve further.", 
        "161": "This is consistent with previous findings of statistical word segmentation (Zhang and Clark, 2007), which adopt a 2-word context.", 
        "162": "Interestingly, using a word LSTM does not bring further improvements, even when it is combined with a window context.", 
        "163": "This suggests that global word contexts may not offer crucial additional information compared with local word contexts.", 
        "164": "Intuitively, words are significantly less polysemous compared with characters, and hence can serve as effective contexts even if used locally, to supplement a more crucial character context.", 
        "165": "5.2.2 Stuctured Learning and Inference  We verify the effectiveness of structured learning and inference by measuring the influence of beam size on the baseline segmentor.", 
        "166": "Figure 4 shows the F-scores against different numbers of training iterations with beam size 1,2,4,8 and 16, respectively.", 
        "167": "When the beam size is 1, the inference is local and greedy.", 
        "168": "As the size of the beam increases, more global structural ambiguities can be resolved since learning is designed to guide search.", 
        "169": "A contrast between beam sizes 1 and 2 demonstrates the usefulness of structured learning and inference.", 
        "170": "As the beam size increases, the gain by doubling the beam size decreases.", 
        "171": "We choose a beam size of 8 for the remaining experiments for a tradeoff between speed and accuracy.", 
        "172": "5.2.3 Pretraining Results  Table 6 shows the effectiveness of rich pretraining of Dc on the development set.", 
        "173": "In particular, by using punctuation information, the F-score increases from 95.86% to 96.25%, with a relative error reduction of 9.4%.", 
        "174": "This is consistent with\nthe observation of Sun and Xu (2011), who show that punctuation is more effective compared with mutual information and access variety as semisupervised data for a statistical word segmentation model.", 
        "175": "With automatically-segmented data6, heterogenous segmentation and POS information, the F-score increases to 96.26%, 96.27% and 96.22%, respectively, showing the relevance of all information sources to neural segmentation, which is consistent with observations made for statistical word segmentation (Jiang et al., 2009; Wang et al., 2011; Zhang et al., 2013).", 
        "176": "Finally, by integrating all above information via multi-task learning, the F-score is further improved to 96.48%, with a 15.0% relative error reduction.", 
        "177": "5.2.4 Comparision with Zhang et al.", 
        "178": "(2016b)  Both our model and Zhang et al.", 
        "179": "(2016b) use global learning and beam search, but our network is different.", 
        "180": "Zhang et al.", 
        "181": "(2016b) utilizes the action history with LSTM encoder, while we use partial word rather than action information.", 
        "182": "Besides, the character and character bigram embeddings are fine-tuned in our model while Zhang et al.", 
        "183": "(2016b) set the embeddings fixed during training.", 
        "184": "6By using ZPar alone, the auto-segmented result is 96.02%, less than using results by matching ZPar and the CRF segmentor outputs.", 
        "185": "We study the F-measure distribution with respect to sentence length on our baseline model, multitask pretraining model and Zhang et al.", 
        "186": "(2016b).", 
        "187": "In particular, we cluster the sentences in the development dataset into 6 categories based on their length and evaluate their F1-values, respectively.", 
        "188": "As shown in Figure 5, the models give different error distributions, with our models being more robust to the sentence length compared with Zhang et al.", 
        "189": "(2016b).", 
        "190": "Their model is better on very short sentences, but worse on all other cases.", 
        "191": "This shows the relative advantages of our model.", 
        "192": "5.3 Final Results  Our final results on CTB6 are shown in Table 7, which lists the results of several current state-ofthe-art methods.", 
        "193": "Without multitask pretraining, our model gives an F-score of 95.44%, which is higher than the neural segmentor of Zhang et al.", 
        "194": "(2016b), which gives the best accuracies among pure neural segments on this dataset.", 
        "195": "By using multitask pretraining, the result increases to 96.21%, with a relative error reduction of 16.9%.", 
        "196": "In comparison, Sun and Xu (2011) investigated heterogenous semi-supervised learning on a stateof-the-art statistical model, obtaining a relative error reduction of 13.8%.", 
        "197": "Our findings show that external data can be as useful for neural segmentation as for statistical segmentation.", 
        "198": "Our final results compare favourably to the best statistical models, including those using semisupervised learning (Sun and Xu, 2011; Wang et al., 2011), and those leveraging joint POS and syntactic information (Zhang et al., 2014).", 
        "199": "In addition, it also outperforms the best neural models, in particular Zhang et al.", 
        "200": "(2016b)*, which is a hybrid neural and statistical model, integrating man-\nual discrete features into their word-based neural model.", 
        "201": "We achieve the best reported F-score on this dataset.", 
        "202": "To our knowledge, this is the first time a pure neural network model outperforms all existing methods on this dataset, allowing the use of external data 7.", 
        "203": "We also evaluate our model pretrained only on punctuation and auto-segmented data, which do not include additional manual labels.", 
        "204": "The results on CTB test data show the accuracy of 95.8% and 95.7%, respectivley, which are comparable with those statistical semi-supervised methods (Sun and Xu, 2011; Wang et al., 2011).", 
        "205": "They are also among the top performance methods in Table 7.", 
        "206": "Compared with discrete semisupervised methods (Sun and Xu, 2011; Wang et al., 2011), our semi-supervised model is free from hand-crafted features.", 
        "207": "In addition to CTB6, which has been the most commonly adopted by recent segmentation research, we additionally evaluate our results on the SIGHAN 2005 bakeoff and Weibo datasets, to examine cross domain robustness.", 
        "208": "Different stateof-the-art methods for which results are recorded on these datasets are listed in Table 8.", 
        "209": "Most neural models reported results only on the PKU 8 and MSR datasets of the bakeoff test sets, which are in simplified Chinese.", 
        "210": "The AS and CityU corpora are in traditional Chinese, sourced from Taiwan and\n7 We did not investigate the use of lexicons (Chen et al., 2015a,b) in our research, since lexicons might cover different OOV in the training and test data, and hence directly affecting the accuracies, which makes it relatively difficult to compare different methods fairly unless a single lexicon is used for all methods, as observed by Cai and Zhao (2016).", 
        "211": "8We notice that both PKU dataset and our heterogenous data are based on the news of People\u2019s Daily.", 
        "212": "While the heterogenous data only collect news from Febuary 1998 to June 1998, it does not contain the sentences in the dev and test datasets of PKU.", 
        "213": "Hong Kong corpora, respectively.", 
        "214": "We map them into simplified Chinese before segmentation.", 
        "215": "The Weibo corpus is in a yet different genre, being social media text.", 
        "216": "Xia et al.", 
        "217": "(2016) achieved the best results on this dataset by using a statistical model with features learned using external lexicons, the CTB7 corpus and the People Daily corpus.", 
        "218": "Similar to Table 7, our method gives the best accuracies on all corpora except for MSR, where it underperforms the hybrid model of Zhang et al.", 
        "219": "(2016b) by 0.2%.", 
        "220": "To our knowledge, we are the first to report results for a neural segmentor on more than 3 datasets, with competitive results consistently.", 
        "221": "It verifies that knowledge learned from a certain set of resources can be used to enhance cross-domain robustness in training a neural segmentor for different datasets, which is of practical importance.", 
        "222": "6 Conclusion  We investigated rich external resources for enhancing neural word segmentation, by building a globally optimised beam-search model that leverages both character and word contexts.", 
        "223": "Taking each type of external resource as an auxiliary classification task, we use neural multi-task learning to pre-train a set of shared parameters for character contexts.", 
        "224": "Results show that rich pretraining leads to 15.4% relative error reduction, and our model gives results highly competitive to the best systems on six different benchmarks.", 
        "225": "Acknowledgments  We thank the anonymous reviewers for their insightful comments and the support of NSFC 61572245.", 
        "226": "We would like to thank Meishan Zhang for his insightful discussion and assisting coding.", 
        "227": "Yue Zhang is the corresponding author."
    }, 
    "document_id": "P17-1078.pdf.json"
}
