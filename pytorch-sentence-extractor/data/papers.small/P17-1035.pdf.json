{
    "abstract_sentences": {
        "1": "Cognitive NLP systemsi.e., NLP systems that make use of behavioral data augment traditional text-based features with cognitive features extracted from eye-movement patterns, EEG signals, brain-imaging etc..", 
        "2": "Such extraction of features is typically manual.", 
        "3": "We contend that manual extraction of features may not be the best way to tackle text subtleties that characteristically prevail in complex classification tasks like sentiment analysis and sarcasm detection, and that even the extraction and choice of features should be delegated to the learning system.", 
        "4": "We introduce a framework to automatically extract cognitive features from the eye-movement / gaze data of human readers reading the text and use them as features along with textual features for the tasks of sentiment polarity and sarcasm detection.", 
        "5": "Our proposed framework is based on Convolutional Neural Network (CNN).", 
        "6": "The CNN learns features from both gaze and text and uses them to classify the input text.", 
        "7": "We test our technique on published sentiment and sarcasm labeled datasets, enriched with gaze information, to show that using a combination of automatically learned text and gaze features often yields better classification performance over (i) CNN based systems that rely on text input alone and (ii) existing systems that rely on handcrafted gaze and textual features."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 377\u2013387 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1035  1 Introduction  Detection of sentiment and sarcasm in usergenerated short reviews is of primary importance for social media analysis, recommendation and dialog systems.", 
        "2": "Traditional sentiment analyzers and\nsarcasm detectors face challenges that arise at lexical, syntactic, semantic and pragmatic levels (Liu and Zhang, 2012; Mishra et al., 2016c).", 
        "3": "Featurebased systems (Akkaya et al., 2009; Sharma and Bhattacharyya, 2013; Poria et al., 2014) can aptly handle lexical and syntactic challenges (e.g.", 
        "4": "learning that the word deadly conveys a strong positive sentiment in opinions such as Shane Warne is a deadly bowler, as opposed to The high altitude Himalayan roads have deadly turns).", 
        "5": "It is, however, extremely difficult to tackle subtleties at semantic and pragmatic levels.", 
        "6": "For example, the sentence I really love my job.", 
        "7": "I work 40 hours a week to be this poor.", 
        "8": "requires an NLP system to be able to understand that the opinion holder has not expressed a positive sentiment towards her / his job.", 
        "9": "In the absence of explicit clues in the text, it is difficult for automatic systems to arrive at a correct classification decision, as they often lack external knowledge about various aspects of the text being classified.", 
        "10": "Mishra et al.", 
        "11": "(2016b) and Mishra et al.", 
        "12": "(2016c) show that NLP systems based on cognitive data (or simply, Cognitive NLP systems) , that leverage eye-movement information obtained from human readers, can tackle the semantic and pragmatic challenges better.", 
        "13": "The hypothesis here is that human gaze activities are related to the cognitive processes in the brain that combine the \u201cexternal knowledge\u201d that the reader possesses with textual clues that she / he perceives.", 
        "14": "While incorporating behavioral information obtained from gaze-data in NLP systems is intriguing and quite plausible, especially due to the availability of low cost eye-tracking machinery (Wood and Bulling, 2014; Yamamoto et al., 2013), few methods exist for text classification, and they rely on handcrafted features extracted from gaze data (Mishra et al., 2016b,c).", 
        "15": "These systems have limited capabilities due to two reasons: (a) Manually designed gaze based features may not adequately\n377\ncapture all forms of textual subtleties (b) Eyemovement data is not as intuitive to analyze as text which makes the task of designing manual features more difficult.", 
        "16": "So, in this work, instead of handcrafting the gaze based and textual features, we try to learn feature representations from both gaze and textual data using Convolutional Neural Network (CNN).", 
        "17": "We test our technique on two publicly available datasets enriched with eyemovement information, used for binary classification tasks of sentiment polarity and sarcasm detection.", 
        "18": "Our experiments show that the automatically extracted features often help to achieve significant classification performance improvement over (a) existing systems that rely on handcrafted gaze and textual features and (b) CNN based systems that rely on text input alone.", 
        "19": "The datasets used in our experiments, resources and other relevant pointers are available at http://www.cfilt.iitb.ac.in/ cognitive-nlp\nThe rest of the paper is organized as follows.", 
        "20": "Section 2 discusses the motivation behind using readers\u2019 eye-movement data in a text classification setting.", 
        "21": "In Section 3, we argue why CNN is preferred over other available alternatives for feature extraction.", 
        "22": "The CNN architecture is proposed and discussed in Section 4.", 
        "23": "Section 5 describes our experimental setup and results are discussed in Section 6.", 
        "24": "We provide a detailed analysis of the results along with some insightful observations in Section 7.", 
        "25": "Section 8 points to relevant literature followed by Section 9 that concludes the paper.", 
        "26": "Terminology A fixation is a relatively long stay of gaze on a visual object (such as words in text) where as a sacccade corresponds to quick shifting of gaze between two positions of rest.", 
        "27": "Forward and backward saccades are called progressions and regressions respectively.", 
        "28": "A scanpath is a line graph that contains fixations as nodes and saccades as edges.", 
        "29": "2 Eye-movement and Linguistic Subtleties  Presence of linguistic subtleties often induces (a) surprisal (Kutas and Hillyard, 1980; Malsburg et al., 2015), due to the underlying disparity /context incongruity or (b) higher cognitive load (Rayner and Duffy, 1986), due to the presence of lexically and syntactically complex structures.", 
        "30": "While surprisal accounts for irregular saccades (Malsburg et al., 2015), higher cognitive\nload results in longer fixation duration (Kliegl et al., 2004).", 
        "31": "Mishra et al.", 
        "32": "(2016b) find that presence of sarcasm in text triggers either irregular saccadic patterns or unusually high duration fixations than non-sarcastic texts (illustrated through example scanpath representations in Figure 1).", 
        "33": "For sentiment bearing texts, highly subtle eyemovement patterns are observed for semantically/pragmatically complex negative opinions (expressing irony, sarcasm, thwarted expectations, etc.)", 
        "34": "than the simple ones (Mishra et al., 2016b).", 
        "35": "The association between linguistic subtleties and eye-movement patterns could be captured through sophisticated feature engineering that considers both gaze and text inputs.", 
        "36": "In our work, CNN takes the onus of feature engineering.", 
        "37": "3 Why Convolutional Neural Network?", 
        "38": "CNNs have been quite effective in learning filters for image processing tasks, filters being used to transform the input image into more informative feature space (Krizhevsky et al., 2012).", 
        "39": "Filters learned at various CNN layers are quite similar to handcrafted filters used for detection of edges, contours, and removal of redundant backgrounds.", 
        "40": "We believe, a similar technique can also be applied to eye-movement data, where the learned filters will, hopefully, extract informative cognitive features.", 
        "41": "For instance, for sarcasm, we expect the network to learn filters that detect long distance saccades (refer to Figure 2 for an analogical il-\nlustration).", 
        "42": "With more number of convolution filters of different dimensions, the network may extract multiple features related to different gaze attributes (such as fixations, progressions, regressions and skips) and will be free from any form of human bias that manually extracted features are susceptible to.", 
        "43": "4 Learning Feature Representations: The CNN Architecture  Figure 3 shows the CNN architecture with two components for processing and extracting features from text and gaze inputs.", 
        "44": "The components are explained below.", 
        "45": "4.1 Text Component  The text component is quite similar to the one proposed by Kim (2014) for sentence classification.", 
        "46": "Words (in the form of one-hot representation) in the input text are first replaced by their embeddings of dimension K (ith word in the sentence represented by an embedding vector xi \u2208 RK).", 
        "47": "As per Kim (2014), a multi-channel variant of CNN (referred to as MULTICHANNELTEXT) can be implemented by using two channels of embeddingsone that remains static throughout training (referred to as STATICTEXT), and the other one that gets updated during training (referred to as NONSTATICTEXT).", 
        "48": "We separately experiment with static, non-static and multi-channel variants.", 
        "49": "For each possible input channel of the text component, a given text is transformed into a tensor of fixed length N (padded with zero-tensors wherever\nnecessary to tackle length variations) by concatenating the word embeddings.", 
        "50": "x1:N = x1 \u2295 x2 \u2295 x3 \u2295 ...\u2295 xN (1)\nwhere \u2295 is the concatenation operator.", 
        "51": "To extract local features1, convolution operation is applied.", 
        "52": "Convolution operation involves a filter, W \u2208 RHK , which is convolved with a window of H embeddings to produce a local feature for the H words.", 
        "53": "A local feature, ci is generated from a window of embeddings xi:i+H\u22121 by applying a non linear function (such as a hyperbolic tangent) over the convoluted output.", 
        "54": "Mathematically,\nci = f(W.xi:i+H\u22121 + b) (2)\nwhere b \u2208 R is the bias and f is the non-linear function.", 
        "55": "This operation is applied to each possible window of H words to produce a feature map (c) for the window size H .", 
        "56": "c = [c1, c2, c3, ..., cN\u2212H+1] (3)\nA global feature is then obtained by applying max pooling operation2 (Collobert et al., 2011) over the feature map.", 
        "57": "The idea behind max-pooling is to capture the most important feature - one with the highest value - for each feature map.", 
        "58": "We have described the process by which one feature is extracted from one filter (red bordered portions in Figure 3 illustrate the case of H = 2).", 
        "59": "The model uses multiple filters for each filter size to obtain multiple features representing the text.", 
        "60": "In the MULTICHANNELTEXT variant, for a window of H words, the convolution operation is separately applied on both the embedding channels.", 
        "61": "Local features learned from both the channels are concatenated before applying max-pooling.", 
        "62": "4.2 Gaze Component  The gaze component deals with scanpaths of multiple participants annotating the same text.", 
        "63": "Scanpaths can be pre-processed to extract two sequences3 of gaze data to form separate channels of input: (1) A sequence of normalized4 durations of fixations (in milliseconds) in the order in which\n1features specific to a region in case of images or window of words in case of text\n2mean pooling does not perform well.", 
        "64": "3like text-input, gaze sequences are padded where necessary 4scaled across participants using min-max normalization to reduce subjectivity\nthey appear in the scanpath, and (2) A sequence of position of fixations (in terms of word id) in the order in which they appear in the scanpath.", 
        "65": "These channels are related to two fundamental gaze attributes such as fixation and saccade respectively.", 
        "66": "With two channels, we thus have three possible configurations of the gaze component such as (i) FIXATION, where the input is normalized fixation duration sequence, (ii) SACCADE, where the input is fixation position sequence, and (iii) MULTICHANNELGAZE, where both the inputs channels are considered.", 
        "67": "For each possible input channel, the input is in the form of a P \u00d7 G matrix (with P \u2192 number of participants and G \u2192 length of the input sequence).", 
        "68": "Each element of the matrix gij \u2208 R, with i \u2208 P and j \u2208 G, corresponds to the jth gaze attribute (either fixation duration or word id, depending on the channel) of the input sequence of the ith participant.", 
        "69": "Now, unlike the text component, here we apply convolution operation across two dimensions i.e.", 
        "70": "choosing a two dimensional convolution filter W \u2208 RJK (for simplicity, we have kept J = K, thus , making the dimension of W , J2).", 
        "71": "For the dimension size of J2, a local feature cij is computed from the window of gaze elements gij:(i+J\u22121)(j+J\u22121) by,\ncij = f(W.gij:(i+J\u22121)(j+J\u22121) + b) (4)\nwhere b \u2208 R is the bias and f is a non-linear func-\ntion.", 
        "72": "This operation is applied to each possible window of size J2 to produce a feature map (c),\nc =[c11, c12, c13, ..., c1(G\u2212J+1),\nc21, c22, c23, ..., c2(G\u2212J+1), ...,\nc(P\u2212J+1)1, c(P\u2212J+1)2, ..., c(P\u2212J+1)(G\u2212J+1)]\n(5)\nA global feature is then obtained by applying max pooling operation.", 
        "73": "Unlike the text component, max-pooling operator is applied to a 2D window of local features size M \u00d7 N (for simplicity, we set M = N , denoted henceforth as M2).", 
        "74": "For the window of size M2, the pooling operation on c will result in as set of global features c\u0302J = max{cij:(i+M\u22121)(j+M\u22121)} for each possible i, j.", 
        "75": "We have described the process by which one feature is extracted from one filter (of 2D window size J2 and the max-pooling window size of M2).", 
        "76": "In Figure 3, red and blue bordered portions illustrate the cases of J2 = [3, 3] and M2 = [2, 2] respectively.", 
        "77": "Like the text component, the gaze component also uses multiple filters for each filter size to obtain multiple features representing the gaze input.", 
        "78": "In the MULTICHANNELGAZE variant, for a 2D window of J2, the convolution operation is separately applied on both fixation duration and saccade channels and local features learned from both the channels are concatenated before maxpooling is applied.", 
        "79": "Once the global features are learned from both the text and gaze components, they are merged\nand passed to a fully connected feed forward layer (with number of units set to 150) followed by a SoftMax layer that outputs the the probabilistic distribution over the class labels.", 
        "80": "The gaze component of our network is not invariant of the order in which the scanpath data is given as input- i.e., the P rows in the P \u00d7 G can not be shuffled, even if each row is independent from others.", 
        "81": "The only way we can think of for addressing this issue is by applying convolution operations to all P \u00d7 G matrices formed with all the permutations of P , capturing every possible ordering.", 
        "82": "Unfortunately, this makes the training process significantly less scalable, as the number of model parameters to be learned becomes huge.", 
        "83": "As of now, training and testing are carried out by keeping the order of the input constant.", 
        "84": "5 Experiment Setup  We now share several details regarding our experiments below.", 
        "85": "5.1 Dataset  We conduct experiments for two binaryclassification tasks of sentiment and sarcasm using two publicly available datasets enriched with eye-movement information.", 
        "86": "Dataset 1 has been released by Mishra et al.", 
        "87": "(2016a).", 
        "88": "It contains 994 text snippets with 383 positive and 611 negative examples.", 
        "89": "Out of the 994 snippets, 350 are sarcastic.", 
        "90": "Dataset 2 has been used by Joshi et al.", 
        "91": "(2014) and it consists of 843 snippets comprising movie reviews and normalized tweets out of which 443 are positive, and 400 are negative.", 
        "92": "Eye-movement data of 7 and 5 readers is available for each snippet for dataset 1 and 2 respectively.", 
        "93": "5.2 CNN Variants  With text component alone we have three variants such as STATICTEXT, NONSTATICTEXT and MULTICHANNELTEXT (refer to Section 4.1).", 
        "94": "Similarly, with gaze component we have variants such as FIXATION, SACCADE and MULTICHANNELGAZE (refer to Section 4.2).", 
        "95": "With both text and gaze components, 9 more variants could thus beexperimented with.", 
        "96": "5.3 Hyper-parameters  For text component, we experiment with filter widths (H) of [3, 4].", 
        "97": "For the gaze component, 2D filters (J2) set to [3\u00d7 3], [4\u00d7 4] respectively.", 
        "98": "The\nmax pooling 2D window, M2, is set to [2\u00d7 2].", 
        "99": "In both gaze and text components, number of filters is set to 150, resulting in 150 feature maps for each window.", 
        "100": "These model hyper-parameters are fixed by trial and error and are possibly good enough to provide a first level insight into our system.", 
        "101": "Tuning of hyper-parameters might help in improving the performance of our framework, which is on our future research agenda.", 
        "102": "5.4 Regularization  For regularization dropout is employed both on the embedding and the penultimate layers with a constraint on l2-norms of the weight vectors (Hinton et al., 2012).", 
        "103": "Dropout prevents co-adaptation of hidden units by randomly dropping out - i.e., setting to zero - a proportion p of the hidden units during forward propagation.", 
        "104": "We set p to 0.25.", 
        "105": "5.5 Training  We use ADADELTA optimizer (Zeiler, 2012), with a learning rate of 0.1.", 
        "106": "The input batch size is set to 32 and number of training iterations (epochs) is set to 200.", 
        "107": "10% of the training data is used for validation.", 
        "108": "5.6 Use of Pre-trained Embeddings:  Initializing the embedding layer with of pretrained embeddings can be more effective than random initialization (Kim, 2014).", 
        "109": "In our experiments, we have used embeddings learned using the movie reviews with one sentence per review dataset (Pang and Lee, 2005).", 
        "110": "It is worth noting that, for a small dataset like ours, using a small data-set like the one from (Pang and Lee, 2005) helps in reducing the number model parameters resulting in faster learning of embeddings.", 
        "111": "The results are also quite close to the ones obtained using word2vec facilitated by Mikolov et al.", 
        "112": "(2013).", 
        "113": "5.7 Comparison with Existing Work  For sentiment analysis, we compare our systems\u2019s accuracy (for both datasets 1 and 2) with Mishra et al.", 
        "114": "(2016c)\u2019s systems that rely on handcrafted text and gaze features.", 
        "115": "For sarcasm detection, we compare Mishra et al.", 
        "116": "(2016b)\u2019s sarcasm classifier with ours using dataset 1 (with available gold standard labels for sarcasm).", 
        "117": "We follow the same 10-fold train-test configuration as these existing works for consistency.", 
        "118": "6 Results  In this section, we discuss the results for different model variants for sentiment polarity and sarcasm detection tasks.", 
        "119": "6.1 Results for Sentiment Analysis Task  Table 1 presents results for sentiment analysis task.", 
        "120": "For dataset 1, different variants of our CNN architecture outperform the best systems reported by Mishra et al.", 
        "121": "(2016c), with a maximum F-score improvement of 3.8%.", 
        "122": "This improvement is statistically significant of p < 0.05 as confirmed by McNemar test.", 
        "123": "Moreover, we observe an F-score improvement of around 5% for CNNs with both gaze and text components as compared to CNNs with only text components (similar to the system by Kim (2014)), which is also statistically significant (with p < 0.05).", 
        "124": "For dataset 2, CNN based approaches do not perform better than manual feature based approaches.", 
        "125": "However, variants with both text and gaze components outperform the ones with only text component (Kim, 2014), with a maximum Fscore improvement of 2.9%.", 
        "126": "We observe that for dataset 2, training accuracy reaches 100 within 25 epochs with validation accuracy stable around 50%, indicating the possibility of overfitting.", 
        "127": "Tuning the regularization parameters specific to dataset 2 may help here.", 
        "128": "Even though CNN might\nnot be proving to be a choice as good as handcrafted features for dataset 2, the bottom line remains that incorporation of gaze data into CNN consistently improves the performance over onlytext-based CNN variants.", 
        "129": "6.2 Results for Sarcasm Detection Task  For sarcasm detection, our CNN model variants outperform traditional systems by a maximum margin of 11.27% (Table 2).", 
        "130": "However, the improvement by adding the gaze component to the CNN network is just 1.34%, which is statistically insignificant over CNN with text component.", 
        "131": "While inspecting the sarcasm dataset, we observe a clear difference between the vocabulary of sarcasm and non-sarcasm classes in our dataset.", 
        "132": "This, perhaps, was captured well by the text component, especially the variant with only non-static embeddings.", 
        "133": "7 Discussion  In this section, some important observations from our experiments are discussed.", 
        "134": "7.1 Effect of Embedding Dimension Variation  Embedding dimension has proven to have a deep impact on the performance of neural systems (dos Santos and Gatti, 2014; Collobert et al., 2011).", 
        "135": "We repeated our experiments by varying the embedding dimensions in the range of [50-300]5 and observed that reducing embedding dimension improves the F-scores by a little margin.", 
        "136": "Small embedding dimensions are probably reducing the chances of over-fitting when the data size is small.", 
        "137": "We also observe that for different embedding dimensions, performance of CNN with both gaze and text components is consistently better than that with only text component.", 
        "138": "7.2 Effect of Static / Non-static Text Channels  Non-static embedding channel has a major role in tuning embeddings for sentiment analysis by bringing adjectives expressing similar sentiment close to each other (e.g, good and nice), where as static channel seems to prevent over-tuning of embeddings (over-tuning often brings verbs like love closer to the pronoun I in embedding space, purely due to higher co-occurrence of these two words in sarcastic examples).", 
        "139": "7.3 Effect of Fixation / Saccade Channels  For sentiment detection, saccade channel seems to be handing text having semantic incongruity (due\n5a standard range (Liu et al., 2015; Melamud et al., 2016)\nto the presence of irony / sarcasm) better.", 
        "140": "Fixation channel does not help much, may be because of higher variance in fixation duration.", 
        "141": "For sarcasm detection, fixation and saccade channels perform with similar accuracy when employed separately.", 
        "142": "Accuracy reduces with gaze multichannel, may be because of higher variation of both fixations and saccades across sarcastic and nonsarcastic classes, as opposed to sentiment classes.", 
        "143": "7.4 Effectiveness of the CNN-learned Features  To examine how good the features learned by the CNN are, we analyzed the features for a few example cases.", 
        "144": "Figure 4 presents some of the example test cases for the task of sarcasm detection.", 
        "145": "Example 1 contains sarcasm while examples 2, 3 and 4 are non-sarcastic.", 
        "146": "To see if there is any difference in the automatically learned features between text-only and combined text and gaze variants, we examine the feature vector (of dimension 150) for the examples obtained from different model variants.", 
        "147": "Output of the hidden layer after merge layer is considered as features learned by the network.", 
        "148": "We plot the features, in the form of color-bars, following Li et al.", 
        "149": "(2016) - denser col-\nors representing feature with higher magnitude.", 
        "150": "In Figure 4, we show only two representative model variants viz., MULTICHANNELTEXT and MULTICHANNELTEXT+ MULTICHANNELGAZE.", 
        "151": "As one can see, addition of gaze information helps to generate features with more subtle differences (marked by blue rectangular boxes) for sarcastic and non-sarcastic texts.", 
        "152": "It is also interesting to note that in the marked region, features for the sarcastic texts exhibit more intensity than the nonsarcastic ones - perhaps capturing the notion that sarcasm typically conveys an intensified negative opinion.", 
        "153": "This difference is not clear in feature vectors learned by text-only systems for instances like example 2, which has been incorrectly classified by MULTICHANNELTEXT.", 
        "154": "Example 4 is incorrectly classified by both the systems, perhaps due to lack of context.", 
        "155": "In cases like this, addition of gaze information does not help much in learning more distinctive features, as it becomes difficult for even humans to classify such texts.", 
        "156": "8 Related Work  Sentiment and sarcasm classification are two important problems in NLP and have been the focus of research for many communities for quite some time.", 
        "157": "Popular sentiment and sarcasm detection systems are feature based and are based on unigrams, bigrams etc.", 
        "158": "(Dave et al., 2003; Ng et al., 2006), syntactic properties (Martineau and Finin, 2009; Nakagawa et al., 2010), semantic properties (Balamurali et al., 2011).", 
        "159": "For sarcasm detection, supervised approaches rely on (a) Unigrams and Pragmatic features (Gonza\u0301lez-Iba\u0301nez et al., 2011; Barbieri et al., 2014; Joshi et al., 2015) (b) Stylistic patterns (Davidov et al., 2010) and patterns related to situational disparity (Riloff et al., 2013) and (c) Hastag interpretations (Liebrecht et al., 2013; Maynard and Greenwood, 2014).", 
        "160": "Recent systems are based on variants of deep neural network built on the top of embeddings.", 
        "161": "A few representative works in this direction for sentiment analysis are based on CNNs (dos Santos and Gatti, 2014; Kim, 2014; Tang et al., 2014), RNNs (Dong et al., 2014; Liu et al., 2015) and combined archi-\ntecture (Wang et al., 2016).", 
        "162": "Few works exist on using deep neural networks for sarcasm detection, one of which is by (Ghosh and Veale, 2016) that uses a combination of RNNs and CNNs.", 
        "163": "Eye-tracking technology is a relatively new NLP, with very few systems directly making use of gaze data in prediction frameworks.", 
        "164": "Klerke et al.", 
        "165": "(2016) present a novel multi-task learning approach for sentence compression using labeled data, while, Barrett and S\u00f8gaard (2015) discriminate between grammatical functions using gaze features.", 
        "166": "The closest works to ours are by Mishra et al.", 
        "167": "(2016b) and Mishra et al.", 
        "168": "(2016c) that introduce feature engineering based on both gaze and text data for sentiment and sarcasm detection tasks.", 
        "169": "These recent advancements motivate us to explore the cognitive NLP paradigm.", 
        "170": "9 Conclusion and Future Directions  In this work, we proposed a multimodal ensemble of features, automatically learned using variants of CNNs from text and readers\u2019 eye-movement data, for the tasks of sentiment and sarcasm classification.", 
        "171": "On multiple published datasets for which gaze information is available, our systems could often achieve significant performance improvements over (a) systems that rely on handcrafted gaze and textual features and (b) CNN based systems that rely on text input alone.", 
        "172": "An analysis of the learned features confirms that the combination of automatically learned features is indeed capable of representing deep linguistic subtleties in text that pose challenges to sentiment and sarcasm classifiers.", 
        "173": "Our future agenda includes: (a) optimizing the CNN framework hyper-parameters (e.g., filter width, dropout, embedding dimensions, etc.)", 
        "174": "to obtain better results, (b) exploring the applicability of our technique for documentlevel sentiment analysis and (c) applying our framework to related problems, such as emotion analysis, text summarization, and questionanswering, where considering textual clues alone may not prove to be sufficient.", 
        "175": "Acknowledgments  We thank Anoop Kunchukuttan, Joe Cheri Ross, and Sachin Pawar, research scholars of the Center for Indian Language Technology (CFILT), IIT Bombay for their valuable inputs."
    }, 
    "document_id": "P17-1035.pdf.json"
}
