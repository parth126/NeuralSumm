{
    "abstract_sentences": {
        "1": "Existing Knowledge Base Population methods extract relations from a closed relational schema with limited coverage, leading to sparse KBs.", 
        "2": "We propose Pocket Knowledge Base Population (PKBP), the task of dynamically constructing a KB of entities related to a query and finding the best characterization of relationships between entities.", 
        "3": "We describe novel Open Information Extraction methods which leverage the PKB to find informative trigger words.", 
        "4": "We evaluate using existing KBP shared-task data as well as new annotations collected for this work.", 
        "5": "Our methods produce high quality KBs from just text with many more entities and relationships than existing KBP systems."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 305\u2013310 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-2048  1 Introduction  Much of human knowledge is contained in text in books, encyclopedias, the internet, and written communications.", 
        "2": "Building knowledge bases to store, search, and reason over this information is an important problem in natural language understanding.", 
        "3": "A lot of work in knowledge base population (KBP) has focused on the NIST Text Analysis Conference track of the same name, and specifically the slot filling task.", 
        "4": "Slot Filling (SF) defines a relational schema similar to Wikipedia infoboxes.", 
        "5": "SF KBP systems extract facts from text corresponding to an entity called the query.", 
        "6": "This work addresses two issues concerning SF KBP.", 
        "7": "First, the SF schema has strict semantics for the relations which can be extracted, and thus no SF relation can be extracted for most related entities, leading to sparse KBs.", 
        "8": "Second, because SF has a small static schema, most research has focused on batch processing for a single schema,\nlimiting downstream usefulness.", 
        "9": "This means KBs built by slot filling have limited applicability in some real world settings of interest.", 
        "10": "We address these issues by proposing Pocket Knowledge Base Population.", 
        "11": "Pocket KBs (PKBs) are dense entity-centric KBs dynamically constructed for a query.", 
        "12": "In both SF and pocket KBP, a query is an entity of interest and a document mentioning that entity.", 
        "13": "However, in PKB the primary goal is to populate the KB with nodes for all entities related to the query, irrespective of any prior beliefs about relations.", 
        "14": "PKB edges store representations of mentions referring to the entities connected by that edge, and thus may better serve downstream tasks which don\u2019t perfectly align to a particular schema.", 
        "15": "We describe a PKBP system which builds KBs from text corpora.", 
        "16": "This includes unsupervised methods for finding related entities and mentions of them and the query with accuracies of 89.5 and 93.1 respectively when evaluated on SF queries.", 
        "17": "We also propose novel entity-centric Open IE (Banko et al., 2007) methods for characterizing the relationship between entities which perform twice as well as a syntactically-informed baseline.", 
        "18": "Our contributions also include a comparison between pocket and SF KBs constructed on SF queries, showing our KBs are multiple times larger while remaining high quality.", 
        "19": "We make our system publicly available.1  2 Pocket Knowledge Base Population  The defining characteristic of pocket KBs is they are small, entity-centric, and dynamically generated according to a query.", 
        "20": "Most work in KBP is centered around batch processing with a relation extractor, whereas PKBP is based on entity men-\n1https://hub.docker.com/r/hltcoe/pocket-knowledge-basepopulation\n305\ntion search and ad-hoc trigger extraction.", 
        "21": "PKBs resemble a hub and spoke graph where the hub is the query and nodes on the outside are related entities.", 
        "22": "The spokes represent mentions proving that an entity is related to the query.", 
        "23": "Traversing this graph by crossing a spoke is akin to building a new PKB with that related entity as the new hub.", 
        "24": "PKBs are aids for \u201cknowledge-based\u201d search over a document collection.", 
        "25": "KBs are useful for question answering (Yao, 2014) and PKBs serve this goal because related entities are good answer candidates for questions about a query.", 
        "26": "SF KBs are specialized to the case where you know the questions ahead of time, like \u201cWhere does Mary work?\u201d and \u201cWho is ACME\u2019s parent company?\u201d.", 
        "27": "PKBs offer a set of answers for queries with clues as to their relationship, like Marc Bolland and Stuart Rose are related because of events described using the word replaced.", 
        "28": "KBs are also useful information retrieval (IR) tools (Dietz and Schuhmacher, 2015) for human guided corpus exploration.", 
        "29": "PKBs serve this goal by providing ranked lists of related entities and over the mentions describing their relationship to the query.", 
        "30": "We describe a system which achieves the goals of PKBP using low-resource and unsupervised methods.", 
        "31": "We discuss how PKBs are built in \u00a73 and evaluate their quality in \u00a74 on SF queries.", 
        "32": "3 Construction  There are three steps to PKB construction: \u00a73.1 discovering related entities, \u00a73.2 finding mentions of the query and related entities, and \u00a73.3 extracting trigger word explanations.", 
        "33": "3.1 Discovering Related Entities  Candidate related entities are collected by searching for mentions of the query and taking other mentions which appear in the results.", 
        "34": "This process is similar to cross document entity coreference and\nwe adopt the vector space model (Bagga and Baldwin, 1998).", 
        "35": "First, triage features are used to locate sentences in an inverted index, including the mention headword and all word unigrams and bigrams (case sensitive and insensitive).", 
        "36": "Next, we use context features: a word unigram tf-idf vector.", 
        "37": "We implement a compromise between Cucerzan (2007) (used sentences before, after, and containing a mention) and Bagga and Baldwin (1998) (used any sentence in a coreference chain).", 
        "38": "Instead of running a coreference resolver, we use the high-precision heuristic of linking mentions with the same headword and NER type.", 
        "39": "Terms are weighted as 21+d where d is the distance in sentences to the nearest mention.", 
        "40": "Our attribute features are a generalization of Mann and Yarowsky (2003).", 
        "41": "They train a few ad-hoc relation extractors like birth year and occupation from seed facts.", 
        "42": "Their extractions provide high-precision signal for merging entity mentions.", 
        "43": "We found extracting all NNP* or capitalized JJ* words within 4 edges in a dependency tree was less sparse, requires no seeds, and produced similar quality attributes.", 
        "44": "We union these attributes across mentions found by the headword and NER type coreference heuristic to build a fine-grain tf-idf vector.", 
        "45": "We use the same 21+d re-weighting for attributes, except where d is the distance in dependency edges to the entity mention head.", 
        "46": "The closest attributes are descriptors within a noun phrase like HEAD-nn-Dr.. We include the NER type of the headword to distinguish between attributes like PERSON-nn-American and ORGANIZATION-nn-American.", 
        "47": "Given the triage features t(m), context features c(m), and attribute features a(m), we search for mentions m which maximize\n(1 + \u03b1t cos \u03b8t)(1 + \u03b1c cos \u03b8c)(1 + \u03b1a\u03b8a)\nwhere cos \u03b8t is the cosine similarity between\nt(mquery) and t(m).", 
        "48": "We only consider the subset of mentions that have cos \u03b8t > 0, which can be efficiently retrieved via an inverted index.", 
        "49": "Any mention with a score higher than \u03c4 is considered coreferent with the query.", 
        "50": "We extract mentions in the same sentences as the query as candidate related entities if they have an NER type of PER, ORG, or LOC.", 
        "51": "We link candidate mentions against entities in the PKB using the same coreference score used to retrieve query mentions.", 
        "52": "If a candidate\u2019s best link has a score s < \u03c4 , we promote it to an entity and add it to the PKB with probability 1\u2212 s\u03c4 .2  3.2 Joint Linking of Related Entities  At this point there are on the order of 100 mentions of the query and 20 to 50 related entities.3 For each entity, we perform a joint search for it and the query.", 
        "53": "These entity co-occurrences will form the spokes in the PKB and be used to characterize the relationship between and relatedness to the query.", 
        "54": "Joint entity searches are similar to singlemention searches in \u00a73.1 with two differences.", 
        "55": "First, instead of having a single mention to compute feature vectors from, there are multiple.", 
        "56": "Feature vectors for entities are built up from mentions, where the weight of a mention w(m) = \u03c1b for \u03c1 \u2208 (0, 1) and b is how many mentions were linked before m. Second, we are scoring mention pairs (with both mentions in the same sentence) as the geometric mean of the coreference scores of both links.", 
        "57": "The coreference score function does not need to change, but the triage step does: we only consider sentences which have cos \u03b8t > 0 for both the query and the related entity and use the same \u03c4 .", 
        "58": "Entity relatedness is a function of how often entities are mentioned together.", 
        "59": "We modeled it as the sum of the joint entity linking probabilities, where the probability of a link is logit\u22121( s\u03c4 ).", 
        "60": "3.3 Trigger Word Analysis  At this stage we have found on the order of 2 to 20 sentences which mention the query and a related entity which will be used to determine the relation between them.", 
        "61": "There is work on rule-based (Banko et al., 2007; Fader et al., 2011; Angeli et al., 2015), supervised (Mausam et al., 2012),\n2Mentions with a score near \u03c4 may be coreferent, so we prefer low scoring mentions to avoid over-splitting entities.", 
        "62": "3These values depend on the query (which are more or less rare in a corpus) and pruning thresholds (for our experiments we stop at 100 query mentions)\nand distantly-supervised (Mintz et al., 2009) methods for characterizing relations in text.", 
        "63": "Our method is similar to distant supervision, where a KB of known facts is used to infer how relations are expressed, but we use supervision from the KB being constructed.", 
        "64": "We cast the problem of characterizing a relation as a search for trigger words.", 
        "65": "We state our priors on trigger words and condition on the data to find likely triggers.", 
        "66": "Predicate (triggers) and arguments are syntactically close together.", 
        "67": "Assuming the related entity mention heads are arguments, we compute the probability that these two random walks in a dependency tree end up at the same token.", 
        "68": "This serves as a weak syntactically informed prior.", 
        "69": "Information is conveyed as a surprisal under a background distribution (codebook).", 
        "70": "We compute a unigram distribution over words which are likely under our syntactic prior for triggers (conditioned on the NER type of the two arguments).", 
        "71": "We use this marginal distribution as a codebook.", 
        "72": "We divide out this codebook probability in every pair of related entity mentions in the PKB giving a cost in bits (log probability ratio) of each trigger word.", 
        "73": "Repetition indicates importance.", 
        "74": "We sum the costs for each trigger across sentences.", 
        "75": "We weaken this assumption by averaging the max and the sum for each trigger for the final score.", 
        "76": "This process yields a score for every trigger word, and we use the top k triggers to characterize the relationship between entities.", 
        "77": "For each trigger we keep, we also maintain provenance information for mentions using a given trigger.", 
        "78": "4 Experiments  We use the TAC SF13 query entities to evaluate our methods; 50 person and 50 organization entities are used as queries to construct 100 PKBs.", 
        "79": "70 of the 100 query entities were NIL (26/60 PER and 44/50 ORG), meaning that they do not appear in the TAC KB, though our methods aren\u2019t in principle sensitive to this because they create entities on the fly.", 
        "80": "We use annotated versions of Gigaword 5 (Parker et al., 2011; Ferraro et al., 2014) and English Wikipedia (February 24, 2016 dump) to construct our PKBs.4 We use Amazon Mechanical Turk workers as annotators.", 
        "81": "We generated our PKBs with \u03c4 = 15, \u03c1 = 0.5, \u03b1t = 40, \u03b1c = 20, and \u03b1a = 10.", 
        "82": "These constants were tuned by hand\n4We do not use the coreference annotations provided by Annotated Gigaword, only the features described in \u00a73.1.", 
        "83": "and are not sensitive to small changes.", 
        "84": "We take a subset of the PKB which covers the 15 most related entities and the one-best trigger for each.", 
        "85": "We call these \u201cexplanations\u201d where each is a sentence with three labels: a) a mention of the query mq, b) a mention of the a related entity mr, and c) a trigger word t.\nEntity Linking and Relatedness For each explanation, we ask: COREF: Does the query mention refer to the same entity as mq?", 
        "86": "RELATED: Is the query entity meaningfully related to the referent of mr?", 
        "87": "These annotations are not done by the same annotators to avoid confirmation bias.", 
        "88": "Worried annotators might be lulled into thinking all COREF instances were true, we made the task ternary by adding an intruder entity (randomly drawn from SF13 queries).", 
        "89": "Annotators were shown mq and could choose coreference with the query, the intruder, or neither.5 We drop annotations from annotators who chose an intruder6 because we know these to be incorrect, and compute accuracy as proportion of the remaining annotations which chose the query.", 
        "90": "RELATED was posed as a binary task of whether mr is more related to the query or the intruder (without highlighting mq).", 
        "91": "In positive cases, the annotator should observe that sentence shown contains a mention of the query entity and explains why they are related.", 
        "92": "The results are in Table 1.", 
        "93": "Our system retrieves coreferent and related mentions with high accuracy.", 
        "94": "For coreference, mistakes usually happen when there is significant lexical overlap but some distinguishing feature that proves too subtle for our system to doubt the match, like Midwest High Speed Rail Association vs U.S. High Speed Rail Association or [English] Nationwide Building Society vs Irish Nationwide Building Society.", 
        "95": "For relatedness, the biggest source of errors are news organizations listed as related entities because it is common to see sentences like \u201cMohammed Sobeih, Moussa\u2019s deputy, told The Associated Press on Monday that...\u201d.", 
        "96": "Future work might address this problem by using normalized measures of statistical relatedness like PMI rather than raw co-occurrence counts.", 
        "97": "Trigger Words To evaluate the informativeness of chosen triggers, we present annotators withmq,\n5The order of the intruder and the query were randomized.", 
        "98": "6This affected 6.1% of COREF annotations.", 
        "99": "mr, and two potential trigger words highlighted.", 
        "100": "One trigger is chosen according to \u00a73.3 and the other is an NN*|VB*|JJ*|RB* word in the projection of the dependency node dominating both entities.7 The annotator may choose either trigger as a good characterization of the situation involving mq and mr, or label neither as sufficient.", 
        "101": "Note that this baseline is strong: it shares the entity linking (\u00a73.2), trigger sentence selection (\u00a73.3), and dependency parse tree as our system.", 
        "102": "We report the results in Table 2.", 
        "103": "Our method is chosen about twice as often as a syntactically informed baseline, but fails to find a high quality trigger word more than half of the time.", 
        "104": "Some mistakes are caused by rare but oftrepeated words like \u201c50\u201d in: \u201cBolland, 50, ... will replace Briton Stuart Rose\u201d.", 
        "105": "\u201c50\u201d has nothing to do with the relationship between Bolland and Rose, but it\u2019s repeated in 4 sentences about both of them, a stylistic coincidence our system cannot ignore.", 
        "106": "In other cases there is no word in situ which can explain entities\u2019 relatedness, like \u201c... the day after Wimbledon concludes, Montcourt must serve a five-week ban and ...\u201d.", 
        "107": "The author and the reader can likely infer that Montcourt competed at Wimbledon, but this fact is not explicitly committed to, limiting our systems ability to extract a trigger.", 
        "108": "Related Entities vs Slot Fillers There is no fair way to evaluate systems without a common schema, but we offer some extraction statistics.", 
        "109": "On SF13 queries our system generated 17.6 relevant entities/query,8 each having 4.6 trigger words/pair, 2.1 mentions/trigger word, and 9.8\n7If no nodes match this, we walk up the tree until we find a node which has at least one allowed descendant.", 
        "110": "8This is given a cap of 20 relevant entities per query to avoid a skewed average and keep construction time down.", 
        "111": "mentions/pair.", 
        "112": "In extractions from all systems in the SF13 evaluation (pooling answers, filtering out incorrect), they filled 6.0 slots/query with 14.2 fillers/query and 38.3 mentions/query as provenance.", 
        "113": "Some slots have string-valued fillers, but many could be related entities in the PKB sense.", 
        "114": "In these cases, we found 2.2 entities/query overlapping, 1.7 fillers not in their corresponding PKB and 10.8 related entities which weren\u2019t fillers.", 
        "115": "5 Related Work  Blanco and Zaragoza (2010) study the information retrieval problem of finding support sentences which explain the relationship between a query and an entity, which is similar to this work.", 
        "116": "Our work addresses two new aspects of this problem: 1) how to automatically find related entities, which are assumed given in that work and 2) how to find the salient parts of support sentences (trigger words) by aggregating evidence across sentences.", 
        "117": "This work shares goals with Dalton and Dietz (2013) and Dietz and Schuhmacher (2015), who create \u201cknowledge sketches\u201d: distributions over documents, entities, and relations related to a query.", 
        "118": "The primary difference is that our work creates a KB instead of returning results from an existing one.", 
        "119": "They use Freebase for relations and Wikipedia for anchor text and links.", 
        "120": "Our approach uses parsed and NER tagged text.", 
        "121": "Open vocabulary characterization of entities was investigated by Raghavan et al.", 
        "122": "(2004).", 
        "123": "They found intersecting entity language models yields\ncommon descriptors.", 
        "124": "Their notion of similarity (e.g.", 
        "125": "Ronald Reagan and Richard Nixon are both presidents) is different from our notion of relatedness (e.g.", 
        "126": "Alexander Haig and Princeton, NJ are related via Meredith \u2013 Haig\u2019s sister).", 
        "127": "Finally other work has used Open IE for SF KBP.", 
        "128": "Soderland et al.", 
        "129": "(2013) and Finin et al.", 
        "130": "(2015) manually created a mapping between the Ollie (Mausam et al., 2012) and SF schemas.", 
        "131": "Angeli et al.", 
        "132": "(2015) perform OpenIE and then map between their schema and SF with PMI2.", 
        "133": "6 Conclusion  We propose Pocket Knowledge Base Population for dynamically building dense entity-centric KBs.", 
        "134": "We evaluate our methods on SF queries and find high accuracies of related entity discovery and coreference.", 
        "135": "We propose novel Open Information Extraction methods which leverage the PKB to identify trigger words and show they are effective at explaining related entities.", 
        "136": "In future work we hope to use PKBs for tasks like QA and IR.", 
        "137": "Acknowledgments  This research was supported by the Human Language Technology Center of Excellence (HLTCOE) and Bloomberg L.P.", 
        "138": "The views and conclusions contained in this publication are those of the authors."
    }, 
    "document_id": "P17-2048.pdf.json"
}
