{
    "abstract_sentences": {
        "1": "A fundamental advantage of neural models for NLP is their ability to learn representations from scratch.", 
        "2": "However, in practice this often means ignoring existing external linguistic resources, e.g., WordNet or domain specific ontologies such as the Unified Medical Language System (UMLS).", 
        "3": "We propose a general, novel method for exploiting such resources via weight sharing.", 
        "4": "Prior work on weight sharing in neural networks has considered it largely as a means of model compression.", 
        "5": "In contrast, we treat weight sharing as a flexible mechanism for incorporating prior knowledge into neural models.", 
        "6": "We show that this approach consistently yields improved performance on classification tasks compared to baseline strategies that do not exploit weight sharing."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 155\u2013160 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-2024  1 Introduction  Neural models are powerful in part due to their ability to learn good representations of raw textual inputs, mitigating the need for extensive task-specific feature engineering (Collobert et al., 2011).", 
        "2": "However, a downside of learning from scratch is failing to capitalize on prior linguistic or semantic knowledge, often encoded in existing resources such as ontologies.", 
        "3": "Such prior knowledge can be particularly valuable when estimating highly flexible models.", 
        "4": "In this work, we address how to exploit known relationships between words when training neural models for NLP tasks.", 
        "5": "We propose exploiting the feature-hashing trick, originally proposed as a means of neural network compression (Chen et al., 2015).", 
        "6": "Here we instead view the partial parameter sharing induced by feature hashing as a flexible mechanism for tying together network node weights that we believe\nto be similar a priori.", 
        "7": "In effect, this acts as a regularizer that constrains the model to learn weights that agree with the domain knowledge codified in external resources like ontologies.", 
        "8": "More specifically, as external resources we use Brown clusters (Brown et al., 1992), WordNet (Miller, 1995) and the Unified Medical Language System (UMLS) (Bodenreider, 2004).", 
        "9": "From these we derive groups of words with similar meaning.", 
        "10": "We then use feature hashing to share a subset of weights between the embeddings of words that belong to the same semantic group(s).", 
        "11": "This forces the model to respect prior domain knowledge, insofar as words similar under a given ontology are compelled to have similar embeddings.", 
        "12": "Our contribution is a novel, simple and flexible method for injecting domain knowledge into neural models via stochastic weight sharing.", 
        "13": "Results on seven diverse classification tasks (three sentiment and four biomedical) show that our method consistently improves performance over (1) baselines that fail to capitalize on domain knowledge, and (2) an approach that uses retrofitting (Faruqui et al., 2014) as a preprocessing step to encode domain knowledge prior to training.", 
        "14": "155  2 Grouped Weight Sharing  We incorporate similarity relations codified in existing resources (here derived from Brown clusters, SentiWordNet and the UMLS) as prior knowledge in a Convolutional Neural Network (CNN).1 To achieve this we construct a shared embedding matrix such that words known a priori to be similar are constrained to share some fraction of embedding weights.", 
        "15": "Concretely, suppose we have N groups of words derived from an external resource.", 
        "16": "Note that one could derive such groups in several ways; e.g., using the synsets in SentiWordNet.", 
        "17": "We denote groups by {g1, g2, ..., gN}.", 
        "18": "Each group is associated with an embedding ggi , which we initialize by averaging the pre-trained embeddings of each word in the group.", 
        "19": "To exploit both grouped and independent word weights, we adopt a two-channel CNN model (Zhang et al., 2016b).", 
        "20": "The embedding matrix of the first channel is initialized with pre-trained word vectors.", 
        "21": "We denote this input by Ep \u2208 RV\u00d7d (V is the vocabulary size and d the dimension of the word embeddings).", 
        "22": "The second channel input matrix is initialized with our proposed weightsharing embedding Es \u2208 RV\u00d7d.", 
        "23": "Es is initialized by drawing from both Ep and the external resource following the process we describe below.", 
        "24": "Given an input text sequence of length l, we construct sequence embedding representations Wp \u2208 Rl\u00d7d and Ws \u2208 Rl\u00d7d using the corresponding embedding matrices.", 
        "25": "We then apply independent sets of linear convolution filters on these two matrices.", 
        "26": "Each filter will generate a feature map vector v \u2208 Rl\u2212h+1 (h is the filter height).", 
        "27": "We perform 1-max pooling over each v, extracting one scalar per feature map.", 
        "28": "Finally, we concatenate scalars from all of the feature maps (from both channels) into a feature vector which is fed to a softmax function to predict the label (Figure 2).", 
        "29": "We initialize Es as follows.", 
        "30": "Each row ei \u2208 Rd of Es is the embedding of word i.", 
        "31": "Words may belong to one or more groups.", 
        "32": "A mapping function G(i) retrieves the groups that word i belongs to, i.e., G(i) returns a subset of {g1, g2, ..., gN}, which we denote by {g(i)1 , g (i) 2 ...g (i) K }, where K is the number of groups that contain word i.", 
        "33": "To initialize Es, for each dimension j of each word embedding ei, we use a hash function hi to map\n1The idea of sharing weights to reflect known similarity is general and could be applied with other neural architectures.", 
        "34": "(hash) the index j to one of the K group IDs: hi : N \u2192 {g(i)1 , g (i) 2 ...g (i) K }.", 
        "35": "Following (Weinberger et al., 2009; Shi et al., 2009), we use a second hash function b to remove bias induced by hashing.", 
        "36": "This is a signing function, i.e., it maps (i, j) tuples to {+1,\u22121} 2.", 
        "37": "We then set ei,j to the product of ghi(j),j and b(i, j).", 
        "38": "h and b are both approximately uniform hash functions.", 
        "39": "Algorithm 1 provides the full initialization procedure.", 
        "40": "Algorithm 1 Initialization of Es\n1: for i in {1, .", 
        "41": ".", 
        "42": ".", 
        "43": ", V } do 2: {g(i)1 , g (i) 2 , .", 
        "44": ".", 
        "45": ".", 
        "46": ", g (i) K } := G(i).", 
        "47": "3: for j \u2208 {1, .", 
        "48": ".", 
        "49": ".", 
        "50": ", d} do 4: ei,j := ghi(j),j \u00b7 b(i, j) 5: end for 6: end for\nFor illustration, consider Figure 1.", 
        "51": "Here g1 contains three words: good, nice and amazing, while g2 has two words: good and interesting.", 
        "52": "The group embeddings gg1 , gg2 are initialized as averages over the pre-trained embeddings of the words they comprise.", 
        "53": "Here, embedding parameters e1,1 and e2,1 are both mapped to gg1,1, and thus share this value.", 
        "54": "Similarly, e1,3 and e2,3 will share value at gg1,3.", 
        "55": "We have elided the second hash function b from this figure for simplicity.", 
        "56": "2Empirically, we found that using this signing function does not affect performance.", 
        "57": "During training, we update Ep as usual using back-propagation (Rumelhart et al., 1986).", 
        "58": "We update Es and group embeddings g in a manner similar to Chen et al.", 
        "59": "(2015).", 
        "60": "In the forward propagation before each training step (mini-batch), we derive the value of ei,j from g:\nei,j := ghi(j),j \u2217 b(i, j) (1)\nWe use this newly updated ei,j to perform forward propagation in the CNN.", 
        "61": "During backward propagation, we first compute the gradient of Es, and then we use this to derive the gradient w.r.t gs.", 
        "62": "To do this, for each dimension j in ggk , we aggregate the gradients w.r.t E s whose elements are mapped to this dimension:\n\u2207ggk,j := \u2211\n(i,j)\n\u2207Esi,j \u00b7 \u03b4hi(j)=gk \u00b7 b(i, j) (2)\nwhere \u03b4hi(j)=gk = 1 when h i(j) = gk, and 0 otherwise.", 
        "63": "Each training step involves executing Equations 1 and 2.", 
        "64": "Once the shared gradient is calculated, gradient descent proceeds as usual.", 
        "65": "We update all parameters aside from the shared weights in the standard way.", 
        "66": "The number of parameters in our approach scales linearly with the number of channels.", 
        "67": "But the gradients can actually be back-propagated in a distributed way for each channel, since the convolutional and embedding layers are independent across these.", 
        "68": "Thus training time scales approximately linearly with the number of parameters in one channel (if the gradient is back-propagated in a distributed way).", 
        "69": "3 Experimental Setup    3.1 Datasets  We use three sentiment datasets: a movie review (MR) dataset (Pang and Lee, 2005)3; a customer review (CR) dataset (Hu and Liu, 2004)4; and an opinion dataset (MPQA) (Wiebe et al., 2005)5.", 
        "70": "We also use four biomedical datasets, which concern systematic reviews.", 
        "71": "The task here is to classify published articles describing clinical trials as relevant or not to a well-specified clinical question.", 
        "72": "Articles deemed relevant are included in\n3www.cs.cornell.edu/people/pabo/ movie-review-data/\n4www.cs.uic.edu/\u02dcliub/FBS/ sentiment-analysis.html\n5mpqa.cs.pitt.edu/corpora/mpqa_corpus/\nthe corresponding review, which is a synthesis of all pertinent evidence (Wallace et al., 2010).", 
        "73": "We use data from reviews that concerned: clopidogrel (CL) for cardiovascular conditions (Dahabreh et al., 2013); biomarkers for assessing iron deficiency in anemia (AN) experienced by patients with kidney disease (Chung et al., 2012); statins (ST) (Cohen et al., 2006); and proton beam (PB) therapy (Terasawa et al., 2009).", 
        "74": "3.2 Implementation Details and Baselines  We use SentiWordNet (Baccianella et al., 2010)6 for the sentiment tasks.", 
        "75": "SentiWordNet assigns to each synset of wordnet three sentiment scores: positivity, negativity and objectivity, constrained to sum to 1.", 
        "76": "We keep only the synsets with positivity or negativity scores greater than 0, i.e., we remove synsets deemed objective.", 
        "77": "The synsets in SentiWordNet constitute our groups.", 
        "78": "We also use the Brown clustering algorithm7 on the three sentiment datasets.", 
        "79": "We generate 1000 clusters and treat each as a group.", 
        "80": "For the biomedical datasets, we use the Medical Subject Headings (MeSH) terms8 attached to each abstract to classify them.", 
        "81": "Each MeSH term has a tree number indicating the path from the root in the UMLS.", 
        "82": "For example, \u2018Alagille Syndrome\u2019 has tree number \u2018C06.552.150.125\u2019; periods denote tree splits, numbers are nodes.", 
        "83": "We induce groups comprising MeSH terms that share the same first three parent nodes, e.g., all terms with \u2018C06.552.150\u2019 as their tree number prefix constitute one group.", 
        "84": "We compare our approach to several baselines.", 
        "85": "All use pre-trained embeddings to initialize Ep, but we explore several approaches to exploiting Es: (1) randomly initialize Es; (2) initialize Es to reflect the group embedding g, but do not share weights during the training process, i.e., do not constrain their weights to be equal when we perform back-propagation; (3) use linguistic resources to retro-fit (Faruqui et al., 2014) the pretrained embeddings, and use these to initialize Es.", 
        "86": "For retro-fitting, we first construct a graph derived from SentiWordNet.", 
        "87": "Then we run beliefpropagation on the graph to encourage linked words to have similar vectors.", 
        "88": "This is a preprocessing step only; we do not impose weight sharing constraints during training.", 
        "89": "6sentiwordnet.isti.cnr.it 7github.com/percyliang/brown-cluster 8www.nlm.nih.gov/bsd/disted/\nmeshtutorial/\nFor the sentiment datasets we use three filter heights (3,4,5) for each of the two CNN channels.", 
        "90": "For the biomedical datasets, we use only one filter height (1), because the inputs are unstructured MeSH terms.9 In both cases we use 100 filters of each unique height.", 
        "91": "For the sentiment datasets, we use Google word2vec (Mikolov et al., 2013)10 to initialize Ep.", 
        "92": "For the biomedical datasets, we use word2vec trained on biomedical texts (Moen and Ananiadou, 2013)11 to initialize Ep.", 
        "93": "For parameter estimation, we use Adadelta (Zeiler, 2012).", 
        "94": "Because the biomedical datasets are imbalanced, we use downsampling (Zhang et al., 2016a; Zhang and Wallace, 2015) to effectively train on balanced subsets of the data.", 
        "95": "We developed our approach using the MR sentiment dataset, tuning our approach to constructing groups from the available resources \u2013 experiments on other sentiment datasets were run after we finalized the model and hyperparameters.", 
        "96": "Similarly, we used the anemia (AN) review as a development set for the biomedical tasks, especially w.r.t.", 
        "97": "constructing groups from MeSH terms using UMLS.", 
        "98": "4 Results  We replicate each experiment five times (each is a 10-fold cross validation), and report the mean (min, max) across these replications.", 
        "99": "Results on the sentiment and biomedical corpora in are presented in Tables 2 and 3, respectively.12 These exploit different external resources to induce the word groupings that in turn inform weight sharing.", 
        "100": "We report AUC for the biomedical datasets because these are highly imbalanced (see Table 1).", 
        "101": "Our method improves performance compared to all relevant baselines (including an approach that\n9For this work we are ignoring title and abstract texts.", 
        "102": "10code.google.com/archive/p/word2vec/ 11bio.nlplab.org/ 12Sentiment task results are not directly comparable to\nprior work due to different preprocessing steps.", 
        "103": "also exploits external knowledge via retrofitting) in six of seven cases.", 
        "104": "Informing weight initialization using external resources improves performance independently, but additional gains are realized by also enforcing sharing during training.", 
        "105": "We note that our aim here is not necessarily to achieve state-of-art results on any given dataset, but rather to evaluate the proposed method for incorporating external linguistic resources into neural models via weight sharing.", 
        "106": "We have therefore compared to baselines that enable us to assess this.", 
        "107": "5 Related Work  Neural Models for NLP.", 
        "108": "Recently there has been enormous interest in neural models for NLP generally (Collobert et al., 2011; Goldberg, 2016).", 
        "109": "Most relevant to this work, simple CNN based models (which we have built on here) have proven extremely effective for text categorization (Kim, 2014; Zhang and Wallace, 2015).", 
        "110": "Exploiting Linguistic Resources.", 
        "111": "A potential drawback to learning from scratch in end-to-end neural models is a failure to capitalize on existing knowledge sources.", 
        "112": "There have been efforts to exploit such resources specifically to induce better word vectors (Yu and Dredze, 2014; Faruqui et al., 2014; Yu et al., 2016; Xu et al., 2014).", 
        "113": "But these models do not attempt to exploit external resources jointly during training for a particular downstream task (which uses word embeddings as inputs), as we do here.", 
        "114": "Past work on sparse linear models has shown the potential of exploiting linguistic knowledge in statistical NLP models.", 
        "115": "For example, Yogatama and Smith (2014) used external resources to inform structured, grouped regularization of loglinear text classification models, yielding improvements over standard regularization approaches.", 
        "116": "Elsewhere, Doshi-Velez et al.", 
        "117": "(2015) proposed a variant of LDA that exploits a priori known tree-\nstructured relations between tokens (e.g., derived from the UMLS) in topic modeling.", 
        "118": "Weight-sharing in NNs.", 
        "119": "Recent work has considered stochastically sharing weights in neural models.", 
        "120": "Notably, Chen et al.", 
        "121": "(2015).", 
        "122": "proposed randomly sharing weights in neural networks.", 
        "123": "Elsewhere, Han et al.", 
        "124": "(2015) proposed quantized weight sharing as an intermediate step in their deep compression model.", 
        "125": "In these works, the primary motivation was model compression, whereas here we view the hashing trick as a mechanism to encode domain knowledge.", 
        "126": "6 Conclusion  We have proposed a novel method for incorporating prior semantic knowledge into neural models via stochastic weight sharing.", 
        "127": "We have showed it generally improves text classification performance vs. model variants which do not exploit external resources and vs. an approach based on retrofitting prior to training.", 
        "128": "In future work, we will investigate generalizing our approach beyond classification, and to inform weight sharing using other varieties and sources of linguistic knowledge.", 
        "129": "Acknowledgements.", 
        "130": "This work was made possible by NPRP grant NPRP 7-1313-1-245 from the Qatar National Research\nFund (a member of Qatar Foundation).", 
        "131": "The statements made\nherein are solely the responsibility of the authors."
    }, 
    "document_id": "P17-2024.pdf.json"
}
