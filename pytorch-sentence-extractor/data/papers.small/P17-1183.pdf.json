{
    "abstract_sentences": {
        "1": "We present a neural model for morphological inflection generation which employs a hard attention mechanism, inspired by the nearly-monotonic alignment commonly found between the characters in a word and the characters in its inflection.", 
        "2": "We evaluate the model on three previously studied morphological inflection generation datasets and show that it provides state of the art results in various setups compared to previous neural and nonneural approaches.", 
        "3": "Finally we present an analysis of the continuous representations learned by both the hard and soft attention (Bahdanau et al., 2015) models for the task, shedding some light on the features such models extract."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 2004\u20132015 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1183\nWe present a neural model for morphological inflection generation which employs a hard attention mechanism, inspired by the nearly-monotonic alignment commonly found between the characters in a word and the characters in its inflection.", 
        "2": "We evaluate the model on three previously studied morphological inflection generation datasets and show that it provides state of the art results in various setups compared to previous neural and nonneural approaches.", 
        "3": "Finally we present an analysis of the continuous representations learned by both the hard and soft attention (Bahdanau et al., 2015) models for the task, shedding some light on the features such models extract.", 
        "4": "1 Introduction  Morphological inflection generation involves generating a target word (e.g.", 
        "5": "\u201cha\u0308rtestem\u201d, the German word for \u201chardest\u201d), given a source word (e.g.", 
        "6": "\u201chart\u201d, the German word for \u201chard\u201d) and the morpho-syntactic attributes of the target (POS=adjective, gender=masculine, type=superlative, etc.).", 
        "7": "The task is important for many down-stream NLP tasks such as machine translation, especially for dealing with data sparsity in morphologically rich languages where a lemma can be inflected into many different word forms.", 
        "8": "Several studies have shown that translating into lemmas in the target language and then applying inflection generation as a post-processing step is beneficial for phrase-based machine translation (Minkov et al., 2007; Toutanova et al., 2008; Clifton and Sarkar, 2011; Fraser et al., 2012; Chahuneau et al., 2013)\nand more recently for neural machine translation (Garc\u0131\u0301a-Mart\u0131\u0301nez et al., 2016).", 
        "9": "The task was traditionally tackled with hand engineered finite state transducers (FST) (Koskenniemi, 1983; Kaplan and Kay, 1994) which rely on expert knowledge, or using trainable weighted finite state transducers (Mohri et al., 1997; Eisner, 2002) which combine expert knowledge with datadriven parameter tuning.", 
        "10": "Many other machinelearning based methods (Yarowsky and Wicentowski, 2000; Dreyer and Eisner, 2011; Durrett and DeNero, 2013; Hulden et al., 2014; Ahlberg et al., 2015; Nicolai et al., 2015) were proposed for the task, although with specific assumptions about the set of possible processes that are needed to create the output sequence.", 
        "11": "More recently, the task was modeled as neural sequence-to-sequence learning over character sequences with impressive results (Faruqui et al., 2016).", 
        "12": "The vanilla encoder-decoder models as used by Faruqui et al.", 
        "13": "compress the input sequence to a single, fixed-sized continuous representation.", 
        "14": "Instead, the soft-attention based sequence to sequence learning paradigm (Bahdanau et al., 2015) allows directly conditioning on the entire input sequence representation, and was utilized for morphological inflection generation with great success (Kann and Schu\u0308tze, 2016b,a).", 
        "15": "However, the neural sequence-to-sequence models require large training sets in order to perform well: their performance on the relatively small CELEX dataset is inferior to the latent variable WFST model of Dreyer et al.", 
        "16": "(2008).", 
        "17": "Interestingly, the neural WFST model by Rastogi et al.", 
        "18": "(2016) also suffered from the same issue on the CELEX dataset, and surpassed the latent variable model only when given twice as much data to train on.", 
        "19": "We propose a model which handles the above issues by directly modeling an almost monotonic\n2004\nalignment between the input and output character sequences, which is commonly found in the morphological inflection generation task (e.g.", 
        "20": "in languages with concatenative morphology).", 
        "21": "The model consists of an encoder-decoder neural network with a dedicated control mechanism: in each step, the model attends to a single input state and either writes a symbol to the output sequence or advances the attention pointer to the next state from the bi-directionally encoded sequence, as described visually in Figure 1.", 
        "22": "This modeling suits the natural monotonic alignment between the input and output, as the network learns to attend to the relevant inputs before writing the output which they are aligned to.", 
        "23": "The encoder is a bi-directional RNN, where each character in the input word is represented using a concatenation of a forward RNN and a backward RNN states over the word\u2019s characters.", 
        "24": "The combination of the bi-directional encoder and the controllable hard attention mechanism enables to condition the output on the entire input sequence.", 
        "25": "Moreover, since each character representation is aware of the neighboring characters, nonmonotone relations are also captured, which is important in cases where segments in the output word are a result of long range dependencies in the input word.", 
        "26": "The recurrent nature of the decoder, together with a dedicated feedback connection that passes the last prediction to the next decoder step explicitly, enables the model to also condition the current output on all the previous outputs at each prediction step.", 
        "27": "The hard attention mechanism allows the network to jointly align and transduce while using a focused representation at each step, rather then the weighted sum of representations used in the soft attention model.", 
        "28": "This makes our model Resolution Preserving (Kalchbrenner et al., 2016) while also keeping decoding time linear in the output sequence length rather than multiplicative in the input and output lengths as in the softattention model.", 
        "29": "In contrast to previous sequenceto-sequence work, we do not require the training procedure to also learn the alignment.", 
        "30": "Instead, we use a simple training procedure which relies on independently learned character-level alignments, from which we derive gold transduction+control sequences.", 
        "31": "The network can then be trained using straightforward cross-entropy loss.", 
        "32": "To evaluate our model, we perform extensive\nexperiments on three previously studied morphological inflection generation datasets: the CELEX dataset (Baayen et al., 1993), the Wiktionary dataset (Durrett and DeNero, 2013) and the SIGMORPHON2016 dataset (Cotterell et al., 2016).", 
        "33": "We show that while our model is on par with or better than the previous neural and non-neural state-of-the-art approaches, it also performs significantly better with very small training sets, being the first neural model to surpass the performance of the weighted FST model with latent variables which was specifically tailored for the task by Dreyer et al.", 
        "34": "(2008).", 
        "35": "Finally, we analyze and compare our model and the soft attention model, showing how they function very similarly with respect to the alignments and representations they learn, in spite of our model being much simpler.", 
        "36": "This analysis also sheds light on the representations such models learn for the morphological inflection generation task, showing how they encode specific features like a symbol\u2019s type and the symbol\u2019s location in a sequence.", 
        "37": "To summarize, our contributions in this paper are three-fold:\n1.", 
        "38": "We present a hard attention model for nearlymonotonic sequence to sequence learning, as common in the morphological inflection setting.", 
        "39": "2.", 
        "40": "We evaluate the model on the task of morphological inflection generation, establishing a new state of the art on three previouslystudied datasets for the task.", 
        "41": "3.", 
        "42": "We perform an analysis and comparison of our model and the soft-attention model, shedding light on the features such models extract for the inflection generation task.", 
        "43": "2 The Hard Attention Model    2.1 Motivation  We would like to transduce an input sequence, x1:n \u2208 \u03a3\u2217x into an output sequence, y1:m \u2208 \u03a3\u2217y, where \u03a3x and \u03a3y are the input and output vocabularies, respectively.", 
        "44": "Imagine a machine with read-only random access to the encoding of the input sequence, and a single pointer that determines the current read location.", 
        "45": "We can then model sequence transduction as a series of pointer movement and write operations.", 
        "46": "If we assume the alignment is monotone, the machine can be simpli-\nfied: the memory can be read in sequential order, where the pointer movement is controlled by a single \u201cmove forward\u201d operation (step) which we add to the output vocabulary.", 
        "47": "We implement this behavior using an encoder-decoder neural network, with a control mechanism which determines in each step of the decoder whether to write an output symbol or promote the attention pointer the next element of the encoded input.", 
        "48": "2.2 Model Definition  In prediction time, we seek the output sequence y1:m \u2208 \u03a3\u2217y, for which:\ny1:m = arg max y\u2032\u2208\u03a3\u2217y\np(y\u2032|x1:n, f) (1)\nWhere x \u2208 \u03a3\u2217x is the input sequence and f = {f1, .", 
        "49": ".", 
        "50": ".", 
        "51": ", fl} is a set of attributes influencing the transduction task (in the inflection generation task these would be the desired morpho-syntactic attributes of the output sequence).", 
        "52": "Given a nearlymonotonic alignment between the input and the output, we replace the search for a sequence of letters with a sequence of actions s1:q \u2208 \u03a3\u2217s, where \u03a3s = \u03a3y \u222a {step}.", 
        "53": "This sequence is a series of step and write actions required to go from x1:n to y1:m according to the monotonic alignment between them (we will elaborate on the deterministic process of getting s1:q from a monotonic alignment between x1:n to y1:m in section 2.4).", 
        "54": "In this case we define: 1\ns1:q = arg max s\u2032\u2208\u03a3\u2217s\np(s\u2032|x1:n, f)\n= arg max s\u2032\u2208\u03a3\u2217s\n\u220f\ns\u2032i\u2208s\u2032 p(s\u2032i|s\u20321 .", 
        "55": ".", 
        "56": ".", 
        "57": "s\u2032i\u22121, x1:n, f)\n(2)\nwhich we can estimate using a neural network:\ns1:q = arg max s\u2032\u2208\u03a3\u2217s NN(x1:n, f,\u0398) (3)\nwhere the network\u2019s parameters \u0398 are learned using a set of training examples.", 
        "58": "We will now describe the network architecture.", 
        "59": "1We note that our model (Eq.", 
        "60": "2) solves a different objective than (Eq 1), as it searches for the best derivation and not the best sequence.", 
        "61": "In order to accurately solve (1) we would need to marginalize over the different derivations leading to the same sequence, which is computationally challenging.", 
        "62": "However, as we see in the experiments section, the bestderivation approximation is effective in practice.", 
        "63": "2.3 Network Architecture  Notation We use bold letters for vectors and matrices.", 
        "64": "We treat LSTM as a parameterized function LSTM\u03b8(x1 .", 
        "65": ".", 
        "66": ".xn) mapping a sequence of input vectors x1 .", 
        "67": ".", 
        "68": ".xn to a an output vector hn.", 
        "69": "The equations for the LSTM variant we use are detailed in the supplementary material of this paper.", 
        "70": "Encoder For every element in the input sequence: x1:n = x1 .", 
        "71": ".", 
        "72": ".", 
        "73": "xn, we take the corresponding embedding: ex1 .", 
        "74": ".", 
        "75": ".", 
        "76": "exn , where: exi \u2208 RE .", 
        "77": "These embeddings are parameters of the model which will be learned during training.", 
        "78": "We then feed the embeddings into a bi-directional LSTM encoder (Graves and Schmidhuber, 2005) which results in a sequence of vectors: x1:n = x1 .", 
        "79": ".", 
        "80": ".xn, where each vector xi \u2208 R2H is a concatenation of: LSTMforward(ex1 , ex2 , .", 
        "81": ".", 
        "82": ".", 
        "83": "exi) and LSTMbackward(exn , exn\u22121 .", 
        "84": ".", 
        "85": ".", 
        "86": "exi), the forward LSTM and the backward LSTM outputs when fed with exi .", 
        "87": "Decoder Once the input sequence is encoded, we feed the decoder RNN, LSTMdec, with three inputs at each step:\n1.", 
        "88": "The current attended input, xa \u2208 R2H , initialized with the first element of the encoded sequence, x1.", 
        "89": "2.", 
        "90": "A set of embeddings for the attributes that influence the generation process, concatenated to a single vector: f = [f1 .", 
        "91": ".", 
        "92": ".", 
        "93": "fl] \u2208 RF \u00b7l.", 
        "94": "3. si\u22121 \u2208 RE , which is an embedding for the\npredicted output symbol in the previous decoder step.", 
        "95": "Those three inputs are concatenated into a single vector zi = [xa, f , si\u22121] \u2208 R2H+F \u00b7l+E , which is fed into the decoder, providing the decoder output vector: LSTMdec(z1 .", 
        "96": ".", 
        "97": ".", 
        "98": "zi) \u2208 RH .", 
        "99": "Finally, to model the distribution over the possible actions, we project the decoder output to a vector of |\u03a3s| elements, followed by a softmax layer:\np(si = c) = softmax c(W \u00b7 LSTMdec(z1 .", 
        "100": ".", 
        "101": ".", 
        "102": "zi) + b) (4)\nControl Mechanism When the most probable action is step, the attention is promoted so xa contains the next encoded input representation to be used in the next step of the decoder.", 
        "103": "The process is demonstrated visually in Figure 1.", 
        "104": "2.4 Training the Model  For every example: (x1:n, y1:m, f) in the training data, we should produce a sequence of step and write actions s1:q to be predicted by the decoder.", 
        "105": "The sequence is dependent on the alignment between the input and the output: ideally, the network will attend to all the input characters aligned to an output character before writing it.", 
        "106": "While recent work in sequence transduction advocate jointly training the alignment and the decoding mechanisms (Bahdanau et al., 2015; Yu et al., 2016), we instead show that in our case it is worthwhile to decouple these stages and learn a hard alignment beforehand, using it to guide the training of the encoder-decoder network and enabling the use of correct alignments for the attention mechanism from the beginning of the network training phase.", 
        "107": "Thus, our training procedure consists of three stages: learning hard alignments, deriving oracle actions from the alignments, and learning a neural transduction model given the oracle actions.", 
        "108": "Learning Hard Alignments We use the character alignment model of Sudoh et al.", 
        "109": "(2013), based on a Chinese Restaurant Process which weights single alignments (character-to-character) in proportion to how many times such an alignment has been seen elsewhere out of all possible alignments.", 
        "110": "The aligner implementation we used produces either 0- to-1, 1-to-0 or 1-to-1 alignments.", 
        "111": "Deriving Oracle Actions We infer the sequence of actions s1:q from the alignments by the deterministic procedure described in Algorithm 1.", 
        "112": "An\nexample of an alignment with the resulting oracle action sequence is shown in Figure 2, where a4 is a 0-to-1 alignment and the rest are 1-to-1 alignments.", 
        "113": "Algorithm 1 Generates the oracle action sequence s1:q from the alignment between x1:n and y1:m Require: a, the list of either 1-to-1, 1-to-0 or 0-\nto-1 alignments between x1:n and y1:m 1: Initialize s as an empty sequence 2: for each ai = (xai , yai) \u2208 a do 3: if ai is a 1-to-0 alignment then 4: s.append(step) 5: else 6: s.append(yai) 7: if ai+1 is not a 0-to-1 alignment then 8: s.append(step)\nreturn s\nThis procedure makes sure that all the source input elements aligned to an output element are read (using the step action) before writing it.", 
        "114": "Learning a Neural Transduction Model The network is trained to mimic the actions of the oracle, and at inference time, it will predict the actions according to the input.", 
        "115": "We train it using a conventional cross-entropy loss function per example:\nL(x1:n, y1:m, f,\u0398) = \u2212 \u2211\nsj\u2208s1:q log softmax sj (d),\nd = W \u00b7 LSTMdec(z1 .", 
        "116": ".", 
        "117": ".", 
        "118": "zi) + b (5)\nTransition System An alternative view of our model is that of a transition system with ADVANCE and WRITE(CH) actions, where the oracle is derived from a given hard alignment, the input is encoded using a biRNN, and the next action is determined by an RNN over the previous inputs and actions.", 
        "119": "3 Experiments  We perform extensive experiments with three previously studied morphological inflection generation datasets to evaluate our hard attention model in various settings.", 
        "120": "In all experiments we compare our hard attention model to the best performing neural and non-neural models which were previously published on those datasets, and to our implementation of the global (soft) attention model presented by Luong et al.", 
        "121": "(2015) which we train with identical hyper-parameters as our hardattention model.", 
        "122": "The implementation details for our models are described in the supplementary material section of this paper.", 
        "123": "The source code and data for our models is available on github.2\nCELEX Our first evaluation is on a very small dataset, to see if our model indeed avoids the tendency to overfit with small training sets.", 
        "124": "We report exact match accuracy on the German inflection generation dataset compiled by Dreyer et al.", 
        "125": "(2008) from the CELEX database (Baayen et al., 1993).", 
        "126": "The dataset includes only 500 training examples for each of the four inflection types: 13SIA\u219213SKE, 2PIE\u219213PKE, 2PKE\u2192z, and rP\u2192pA which we refer to as 13SIA, 2PIE, 2PKE and rP, respectively.3 We first compare our model to three competitive models from the literature that reported results on this dataset: the Morphological Encoder-Decoder (MED) of Kann and Schu\u0308tze (2016a) which is based on the soft-attention model of Bahdanau et al.", 
        "127": "(2015), the neural-weighted FST of Rastogi et al.", 
        "128": "(2016) which uses stacked bi-directional LSTM\u2019s to weigh its arcs (NWFST), and the model of Dreyer et al.", 
        "129": "(2008) which uses a weighted FST with latent-variables structured particularly for morphological string transduction tasks (LAT).", 
        "130": "Following previous reports on this dataset, we use the same data splits as Dreyer et al.", 
        "131": "(2008), dividing the data for each inflection type into five folds, each consisting of 500 training, 1000 development and 1000 test examples.", 
        "132": "We train a separate model for each fold and report exact match accuracy, averaged over the five folds.", 
        "133": "2https://github.com/roeeaharoni/ morphological-reinflection\n3The acronyms stand for: 13SIA=1st/3rd person, singular, indefinite, past;13SKE=1st/3rd person, subjunctive, present; 2PIE=2nd person, plural, indefinite, present;13PKE=1st/3rd person, plural, subjunctive, present; 2PKE=2nd person, plural, subjunctive, present; z=infinitive; rP=imperative, plural; pA=past participle.", 
        "134": "Wiktionary To neutralize the negative effect of very small training sets on the performance of the different learning approaches, we also evaluate our model on the dataset created by Durrett and DeNero (2013), which contains up to 360k training examples per language.", 
        "135": "It was built by extracting Finnish, German and Spanish inflection tables from Wiktionary, used in order to evaluate their system based on string alignments and a semi-CRF sequence classifier with linguistically inspired features, which we use a baseline.", 
        "136": "We also used the dataset expansion made by Nicolai et al.", 
        "137": "(2015) to include French and Dutch inflections as well.", 
        "138": "Their system also performs an alignand-transduce approach, extracting rules from the aligned training set and applying them in inference time with a proprietary character sequence classifier.", 
        "139": "In addition to those systems we also compare to the results of the recent neural approach of Faruqui et al.", 
        "140": "(2016), which did not use an attention mechanism, and Yu et al.", 
        "141": "(2016), which coupled the alignment and transduction tasks.", 
        "142": "SIGMORPHON As different languages show different morphological phenomena, we also experiment with how our model copes with these various phenomena using the morphological inflection dataset from the SIGMORPHON2016 shared task (Cotterell et al., 2016).", 
        "143": "Here the training data consists of ten languages, with five morphological system types (detailed in Table 3): Russian (RU), German (DE), Spanish (ES), Georgian (GE), Finnish (FI), Turkish (TU), Arabic (AR), Navajo (NA), Hungarian (HU) and Maltese (MA) with roughly 12,800 training and 1600 development examples per language.", 
        "144": "We compare our model to two soft attention baselines on this dataset: MED (Kann and Schu\u0308tze, 2016b), which was the best participating system in the shared task, and our implementation of the global (soft) attention model presented by Luong et al.", 
        "145": "(2015).", 
        "146": "4 Results  In all experiments, for both the hard and soft attention models we implemented, we report results using an ensemble of 5 models with different random initializations by using majority voting on the final sequences the models predicted, as proposed by Kann and Schu\u0308tze (2016a).", 
        "147": "This was done to perform fair comparison to the models of Kann and Schu\u0308tze (2016a,b); Faruqui et al.", 
        "148": "(2016) which we compare to, that also perform a similar ensem-\nbling technique.", 
        "149": "On the low resource setting (CELEX), our hard attention model significantly outperforms both the recent neural models of Kann and Schu\u0308tze (2016a) (MED) and Rastogi et al.", 
        "150": "(2016) (NWFST) and the morphologically aware latent variable model of Dreyer et al.", 
        "151": "(2008) (LAT), as detailed in Table 1.", 
        "152": "In addition, it significantly outperforms our implementation of the soft attention model (Soft).", 
        "153": "It is also, to our knowledge, the first model that surpassed in overall accuracy the latent variable model on this dataset.", 
        "154": "We attribute our advantage over the soft attention models to the ability of the hard attention control mechanism to harness the monotonic alignments found in the data.", 
        "155": "The advantage over the FST models may be explained by our conditioning on the entire output history which is not available in those models.", 
        "156": "Figure 3 plots the train-set and dev-set accuracies of the soft and hard attention models as a function of the training epoch.", 
        "157": "While both models perform similarly on the train-set (with the soft attention model fitting it slightly faster), the hard attention model performs significantly better on the dev-set.", 
        "158": "This shows the soft attention model\u2019s tendency to overfit on the\nsmall dataset, as it is not enforcing the monotonic assumption of the hard attention model.", 
        "159": "On the large training set experiments (Wiktionary), our model is the best performing model on German verbs, Finnish nouns/adjectives and Dutch verbs, resulting in the highest reported average accuracy across all inflection types when compared to the four previous neural and nonneural state of the art baselines, as detailed in Table 2.", 
        "160": "This shows the robustness of our model also with large amounts of training examples, and the advantage the hard attention mechanism provides over the encoder-decoder approach of Faruqui et al.", 
        "161": "(2016) which does not employ an attention mechanism.", 
        "162": "Our model is also significantly more accurate than the model of Yu et al.", 
        "163": "(2016), which shows the advantage of using independently learned alignments to guide the network\u2019s attention from the beginning of the training process.", 
        "164": "While our soft-attention implementation outperformed the models of Yu et al.", 
        "165": "(2016) and Durrett and DeNero (2013), it still performed inferiorly to the hard attention model.", 
        "166": "As can be seen in Table 3, on the SIGMORPHON 2016 dataset our model performs\nbetter than both soft-attention baselines for the suffixing+stem-change languages (Russian, German and Spanish) and is slightly less accurate than our implementation of the soft attention model on the rest of the languages, which is now the best performing model on this dataset to our knowledge.", 
        "167": "We explain this by looking at the languages from a linguistic typology point of view, as detailed in Cotterell et al.", 
        "168": "(2016).", 
        "169": "Since Russian, German and Spanish employ a suffixing morphology with internal stem changes, they are more suitable for monotonic alignment as the transformations they need to model are the addition of suffixes and changing characters in the stem.", 
        "170": "The rest of the languages in the dataset employ more context sensitive morphological phenomena like vowel harmony and consonant harmony, which require to model long range dependencies in the input sequence which better suits the soft attention mechanism.", 
        "171": "While our implementation of the soft attention model and MED are very similar modelwise, we hypothesize that our soft attention model results are better due to the fact that we trained the model for 100 epochs and picked the best performing model on the development set, while the MED system was trained for a fixed amount of 20 epochs (although trained on more data \u2013 both train and development sets).", 
        "172": "5 Analysis  The Learned Alignments In order to see if the alignments predicted by our model fit the mono-\ntonic alignment structure found in the data, and whether are they more suitable for the task when compared to the alignments found by the soft attention model, we examined alignment predictions of the two models on examples from the development portion of the CELEX dataset, as depicted in Figure 4.", 
        "173": "First, we notice the alignments found by the soft attention model are also monotonic, supporting our modeling approach for the task.", 
        "174": "Figure 4 (bottom-right) also shows how the hardattention model performs deletion (legte\u2192lege) by predicting a sequence of two step operations.", 
        "175": "Another notable morphological transformation is the one-to-many alignment, found in the top example: flog\u2192fliege, where the model needs to transform a character in the input, o, to two characters in the output, ie.", 
        "176": "This is performed by two consecutive write operations after the step operation of the relevant character to be replaced.", 
        "177": "Notice that in this case, the soft attention model performs a different alignment by aligning the character i to o and the character g to the sequence eg, which is not the expected alignment in this case from a linguistic point of view.", 
        "178": "The Learned Representations How does the soft-attention model manage to learn nearlyperfect monotonic alignments?", 
        "179": "Perhaps the the network learns to encode the sequential position as part of its encoding of an input element?", 
        "180": "More generally, what information is encoded by the soft and hard alignment encoders?", 
        "181": "We selected 500 random encoded characters-in-context from input\nwords in the CELEX development set, where every encoded representation is a vector in R200.", 
        "182": "Since those vectors are outputs from the bi-LSTM encoders of the models, every vector of this form carries information of the specific character with its entire context.", 
        "183": "We project these encodings into 2-D using SVD and plot them twice, each time using a different coloring scheme.", 
        "184": "We first color each point according to the character it represents (Figures 5a, 5b).", 
        "185": "In the second coloring scheme (Figures 5c, 5d), each point is colored according to the character\u2019s sequential position in the word it came from, blue indicating positions near the beginning of the word, and red positions near its end.", 
        "186": "While both models tend to cluster representations for similar characters together (Figures 5a, 5b), the hard attention model tends to have much more isolated character clusters.", 
        "187": "Figures 5c, 5d show that both models also tend to learn representations which are sensitive to the position of the character, although it seems that here the soft attention model is more sensitive to this information as its coloring forms a nearly-perfect red-to-blue transition on the X axis.", 
        "188": "This may be explained by the soft-attention mechanism encouraging the\nencoder to encode positional information in the input representations, which may help it to predict better attention scores, and to avoid collisions when computing the weighted sum of representations for the context vector.", 
        "189": "In contrast, our hardattention model has other means of obtaining the position information in the decoder using the step actions, and for that reason it does not encode it as strongly in the representations of the inputs.", 
        "190": "This behavior may allow it to perform well even with fewer examples, as the location information is represented more explicitly in the model using the step actions.", 
        "191": "6 Related Work  Many previous works on inflection generation used machine learning methods (Yarowsky and Wicentowski, 2000; Dreyer and Eisner, 2011; Durrett and DeNero, 2013; Hulden et al., 2014; Ahlberg et al., 2015; Nicolai et al., 2015) with assumptions about the set of possible processes needed to create the output word.", 
        "192": "Our work was mainly inspired by Faruqui et al.", 
        "193": "(2016) which trained an independent encoder-decoder neural\nnetwork for every inflection type in the training data, alleviating the need for feature engineering.", 
        "194": "Kann and Schu\u0308tze (2016b,a) tackled the task with a single soft attention model (Bahdanau et al., 2015) for all inflection types, which resulted in the best submission at the SIGMORPHON 2016 shared task (Cotterell et al., 2016).", 
        "195": "In another closely related work, Rastogi et al.", 
        "196": "(2016) model the task with a WFST in which the arc weights are learned by optimizing a global loss function over all the possible paths in the state graph, while modeling contextual features with bi-directional LSTMS.", 
        "197": "This is similar to our approach, where instead of learning to mimic a single greedy alignment as we do, they sum over all possible alignments.", 
        "198": "While not committing to a single greedy alignment could in theory be beneficial, we see in Table 1 that\u2014at least for the low resource scenario\u2014our greedy approach is more effective in practice.", 
        "199": "Another recent work (Kann et al., 2016) proposed performing neural multi-source morphological reinflection, generating an inflection from several source forms of a word.", 
        "200": "Previous works on neural sequence transduction include the RNN Transducer (Graves, 2012) which uses two independent RNN\u2019s over monotonically aligned sequences to predict a distribution over the possible output symbols in each step, including a null symbol to model the alignment.", 
        "201": "Yu et al.", 
        "202": "(2016) improved this by replacing the null symbol with a dedicated learned transition probability.", 
        "203": "Both models are trained using a forwardbackward approach, marginalizing over all possible alignments.", 
        "204": "Our model differs from the above by learning the alignments independently, thus enabling a dependency between the encoder and decoder.", 
        "205": "While providing better results than Yu et al.", 
        "206": "(2016), this also simplifies the model training using a simple cross-entropy loss.", 
        "207": "A recent work by Raffel et al.", 
        "208": "(2017) jointly learns the hard monotonic alignments and transduction while maintaining the dependency between the encoder and the decoder.", 
        "209": "Jaitly et al.", 
        "210": "(2015) proposed the Neural Transducer model, which is also trained on external alignments.", 
        "211": "They divide the input into blocks of a constant size and perform soft attention separately on each block.", 
        "212": "Lu et al.", 
        "213": "(2016) used a combination of an RNN encoder with a CRF layer to model the dependencies in the output sequence.", 
        "214": "An interesting comparison between \u201dtraditional\u201d sequence transduction models (Bisani and Ney,\n2008; Jiampojamarn et al., 2010; Novak et al., 2012) and encoder-decoder neural networks for monotone string transduction tasks was done by Schnober et al.", 
        "215": "(2016), showing that in many cases there is no clear advantage to one approach over the other.", 
        "216": "Regarding task-specific improvements to the attention mechanism, a line of work on attentionbased speech recognition (Chorowski et al., 2015; Bahdanau et al., 2016) proposed adding location awareness by using the previous attention weights when computing the next ones, and preventing the model from attending on too many or too few inputs using \u201csharpening\u201d and \u201csmoothing\u201d techniques on the attention weight distributions.", 
        "217": "Cohn et al.", 
        "218": "(2016) offered several changes to the attention score computation to encourage wellknown modeling biases found in traditional machine translation models like word fertility, position and alignment symmetry.", 
        "219": "Regarding the utilization of independent alignment models for training attention-based networks, Mi et al.", 
        "220": "(2016) showed that the distance between the attentioninfused alignments and the ones learned by an independent alignment model can be added to the networks\u2019 training objective, resulting in an improved translation and alignment quality.", 
        "221": "7 Conclusion  We presented a hard attention model for morphological inflection generation.", 
        "222": "The model employs an explicit alignment which is used to train a neural network to perform transduction by decoding with a hard attention mechanism.", 
        "223": "Our model performs better than previous neural and non-neural approaches on various morphological inflection generation datasets, while staying competitive with dedicated models even with very few training examples.", 
        "224": "It is also computationally appealing as it enables linear time decoding while staying resolution preserving, i.e.", 
        "225": "not requiring to compress the input sequence to a single fixedsized vector.", 
        "226": "Future work may include applying our model to other nearly-monotonic alignand-transduce tasks like abstractive summarization, transliteration or machine translation.", 
        "227": "Acknowledgments  This work was supported by the Intel Collaborative Research Institute for Computational Intelligence (ICRI-CI), and The Israeli Science Foundation (grant number 1555/15)."
    }, 
    "document_id": "P17-1183.pdf.json"
}
