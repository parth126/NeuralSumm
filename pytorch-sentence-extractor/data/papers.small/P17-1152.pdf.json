{
    "abstract_sentences": {
        "1": "Reasoning and inference are central to human and artificial intelligence.", 
        "2": "Modeling inference in human language is very challenging.", 
        "3": "With the availability of large annotated data (Bowman et al., 2015), it has recently become feasible to train neural network based inference models, which have shown to be very effective.", 
        "4": "In this paper, we present a new state-of-the-art result, achieving the accuracy of 88.6% on the Stanford Natural Language Inference Dataset.", 
        "5": "Unlike the previous top models that use very complicated network architectures, we first demonstrate that carefully designing sequential inference models based on chain LSTMs can outperform all previous models.", 
        "6": "Based on this, we further show that by explicitly considering recursive architectures in both local inference modeling and inference composition, we achieve additional improvement.", 
        "7": "Particularly, incorporating syntactic parsing information contributes to our best result\u2014it further improves the performance even when added to the already very strong model."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 1657\u20131668 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1152  1 Introduction  Reasoning and inference are central to both human and artificial intelligence.", 
        "2": "Modeling inference in human language is notoriously challenging but is a basic problem towards true natural language understanding, as pointed out by MacCartney and Manning (2008), \u201ca necessary (if not sufficient)\ncondition for true natural language understanding is a mastery of open-domain natural language inference.\u201d The previous work has included extensive research on recognizing textual entailment.", 
        "3": "Specifically, natural language inference (NLI) is concerned with determining whether a naturallanguage hypothesis h can be inferred from a premise p, as depicted in the following example from MacCartney (2009), where the hypothesis is regarded to be entailed from the premise.", 
        "4": "p: Several airlines polled saw costs grow more than expected, even after adjusting for inflation.", 
        "5": "h: Some of the companies in the poll reported cost increases.", 
        "6": "The most recent years have seen advances in modeling natural language inference.", 
        "7": "An important contribution is the creation of a much larger annotated dataset, the Stanford Natural Language Inference (SNLI) dataset (Bowman et al., 2015).", 
        "8": "The corpus has 570,000 human-written English sentence pairs manually labeled by multiple human subjects.", 
        "9": "This makes it feasible to train more complex inference models.", 
        "10": "Neural network models, which often need relatively large annotated data to estimate their parameters, have shown to achieve the state of the art on SNLI (Bowman et al., 2015, 2016; Munkhdalai and Yu, 2016b; Parikh et al., 2016; Sha et al., 2016; Paria et al., 2016).", 
        "11": "While some previous top-performing models use rather complicated network architectures to achieve the state-of-the-art results (Munkhdalai and Yu, 2016b), we demonstrate in this paper that enhancing sequential inference models based on chain\n1657\nmodels can outperform all previous results, suggesting that the potentials of such sequential inference approaches have not been fully exploited yet.", 
        "12": "More specifically, we show that our sequential inference model achieves an accuracy of 88.0% on the SNLI benchmark.", 
        "13": "Exploring syntax for NLI is very attractive to us.", 
        "14": "In many problems, syntax and semantics interact closely, including in semantic composition (Partee, 1995), among others.", 
        "15": "Complicated tasks such as natural language inference could well involve both, which has been discussed in the context of recognizing textual entailment (RTE) (Mehdad et al., 2010; Ferrone and Zanzotto, 2014).", 
        "16": "In this paper, we are interested in exploring this within the neural network frameworks, with the presence of relatively large training data.", 
        "17": "We show that by explicitly encoding parsing information with recursive networks in both local inference modeling and inference composition and by incorporating it into our framework, we achieve additional improvement, increasing the performance to a new state of the art with an 88.6% accuracy.", 
        "18": "2 Related Work  Early work on natural language inference has been performed on rather small datasets with more conventional methods (refer to MacCartney (2009) for a good literature survey), which includes a large bulk of work on recognizing textual entailment, such as (Dagan et al., 2005; Iftene and Balahur-Dobrescu, 2007), among others.", 
        "19": "More recently, Bowman et al.", 
        "20": "(2015) made available the SNLI dataset with 570,000 human annotated sentence pairs.", 
        "21": "They also experimented with simple classification models as well as simple neural networks that encode the premise and hypothesis independently.", 
        "22": "Rockt\u00e4schel et al.", 
        "23": "(2015) proposed neural attention-based models for NLI, which captured the attention information.", 
        "24": "In general, attention based models have been shown to be effective in a wide range of tasks, including machine translation (Bahdanau et al., 2014), speech recognition (Chorowski et al., 2015; Chan et al., 2016), image caption (Xu et al., 2015), and text summarization (Rush et al., 2015; Chen et al., 2016), among others.", 
        "25": "For NLI, the idea allows neural models to pay attention to specific areas of the sentences.", 
        "26": "A variety of more advanced networks have been developed since then (Bowman et al., 2016; Vendrov et al., 2015; Mou et al., 2016; Liu et al., 2016;\nMunkhdalai and Yu, 2016a; Rockt\u00e4schel et al., 2015; Wang and Jiang, 2016; Cheng et al., 2016; Parikh et al., 2016; Munkhdalai and Yu, 2016b; Sha et al., 2016; Paria et al., 2016).", 
        "27": "Among them, more relevant to ours are the approaches proposed by Parikh et al.", 
        "28": "(2016) and Munkhdalai and Yu (2016b), which are among the best performing models.", 
        "29": "Parikh et al.", 
        "30": "(2016) propose a relatively simple but very effective decomposable model.", 
        "31": "The model decomposes the NLI problem into subproblems that can be solved separately.", 
        "32": "On the other hand, Munkhdalai and Yu (2016b) propose much more complicated networks that consider sequential LSTM-based encoding, recursive networks, and complicated combinations of attention models, which provide about 0.5% gain over the results reported by Parikh et al.", 
        "33": "(2016).", 
        "34": "It is, however, not very clear if the potential of the sequential inference networks has been well exploited for NLI.", 
        "35": "In this paper, we first revisit this problem and show that enhancing sequential inference models based on chain networks can actually outperform all previous results.", 
        "36": "We further show that explicitly considering recursive architectures to encode syntactic parsing information for NLI could further improve the performance.", 
        "37": "3 Hybrid Neural Inference Models  We present here our natural language inference networks which are composed of the following major components: input encoding, local inference modeling, and inference composition.", 
        "38": "Figure 1 shows a high-level view of the architecture.", 
        "39": "Vertically, the figure depicts the three major components, and horizontally, the left side of the figure represents our sequential NLI model named ESIM, and the right side represents networks that incorporate syntactic parsing information in tree LSTMs.", 
        "40": "In our notation, we have two sentences a = (a1, .", 
        "41": ".", 
        "42": ".", 
        "43": ",a`a) and b = (b1, .", 
        "44": ".", 
        "45": ".", 
        "46": ",b`b), where a is a premise and b a hypothesis.", 
        "47": "The ai or bj \u2208 Rl is an embedding of l-dimensional vector, which can be initialized with some pre-trained word embeddings and organized with parse trees.", 
        "48": "The goal is to predict a label y that indicates the logic relationship between a and b.", 
        "49": "3.1 Input Encoding  We employ bidirectional LSTM (BiLSTM) as one of our basic building blocks for NLI.", 
        "50": "We first use it\nto encode the input premise and hypothesis (Equation (1) and (2)).", 
        "51": "Here BiLSTM learns to represent a word (e.g., ai) and its context.", 
        "52": "Later we will also use BiLSTM to perform inference composition to construct the final prediction, where BiLSTM encodes local inference information and its interaction.", 
        "53": "To bookkeep the notations for later use, we write as a\u0304i the hidden (output) state generated by the BiLSTM at time i over the input sequence a.", 
        "54": "The same is applied to b\u0304j :\na\u0304i = BiLSTM(a, i),\u2200i \u2208 [1, .", 
        "55": ".", 
        "56": ".", 
        "57": ", `a], (1) b\u0304j = BiLSTM(b, j),\u2200j \u2208 [1, .", 
        "58": ".", 
        "59": ".", 
        "60": ", `b].", 
        "61": "(2)\nDue to the space limit, we will skip the description of the basic chain LSTM and readers can refer to Hochreiter and Schmidhuber (1997) for details.", 
        "62": "Briefly, when modeling a sequence, an LSTM employs a set of soft gates together with a memory cell to control message flows, resulting in an effective modeling of tracking long-distance information/dependencies in a sequence.", 
        "63": "A bidirectional LSTM runs a forward and backward LSTM on a sequence starting from the left and the right end, respectively.", 
        "64": "The hidden states\ngenerated by these two LSTMs at each time step are concatenated to represent that time step and its context.", 
        "65": "Note that we used LSTM memory blocks in our models.", 
        "66": "We examined other recurrent memory blocks such as GRUs (Gated Recurrent Units) (Cho et al., 2014) and they are inferior to LSTMs on the heldout set for our NLI task.", 
        "67": "As discussed above, it is intriguing to explore the effectiveness of syntax for natural language inference; for example, whether it is useful even when incorporated into the best-performing models.", 
        "68": "To this end, we will also encode syntactic parse trees of a premise and hypothesis through treeLSTM (Zhu et al., 2015; Tai et al., 2015; Le and Zuidema, 2015), which extends the chain LSTM to a recursive network (Socher et al., 2011).", 
        "69": "Specifically, given the parse of a premise or hypothesis, a tree node is deployed with a tree-LSTM memory block depicted as in Figure 2 and computed with Equations (3\u201310).", 
        "70": "In short, at each node, an input vector xt and the hidden vectors of its two children (the left child hLt\u22121 and the right h R t\u22121) are taken in as the input to calculate the current node\u2019s hidden vector ht.", 
        "71": "We describe the updating of a node at a high level with Equation (3) to facilitate references later in the paper, and the detailed computation is described in (4\u201310).", 
        "72": "Specifically, the input of a node is used to configure four gates: the input gate it, output gate ot, and the two forget gates fLt and f R t .", 
        "73": "The memory cell ct considers each child\u2019s cell vector, cLt\u22121 and c R t\u22121, which are gated by the left forget\ngate fLt and right forget gate f R t , respectively.", 
        "74": "ht = TrLSTM(xt,hLt\u22121,h R t\u22121), (3)\nht = ot tanh(ct), (4) ot = \u03c3(Woxt + U L o h L t\u22121 + U R o h R t\u22121), (5) ct = f L t cLt\u22121 + fRt cRt\u22121 + it ut, (6) fLt = \u03c3(Wfxt + U LL f h L t\u22121 + U LR f h R t\u22121), (7) fRt = \u03c3(Wfxt + U RL f h L t\u22121 + U RR f h R t\u22121), (8)\nit = \u03c3(Wixt + U L i h L t\u22121 + U R i h R t\u22121), (9)\nut = tanh(Wcxt + U L c h L t\u22121 + U R c h R t\u22121), (10)\nwhere \u03c3 is the sigmoid function, is the elementwise multiplication of two vectors, and all W \u2208 Rd\u00d7l, U \u2208 Rd\u00d7d are weight matrices to be learned.", 
        "75": "In the current input encoding layer, xt is used to encode a word embedding for a leaf node.", 
        "76": "Since a non-leaf node does not correspond to a specific word, we use a special vector x\u2032t as its input, which is like an unknown word.", 
        "77": "However, in the inference composition layer that we discuss later, the goal of using tree-LSTM is very different; the input xt will be very different as well\u2014it will encode local inference information and will have values at all tree nodes.", 
        "78": "3.2 Local Inference Modeling  Modeling local subsentential inference between a premise and hypothesis is the basic component for determining the overall inference between these two statements.", 
        "79": "To closely examine local inference, we explore both the sequential and syntactic tree models that have been discussed above.", 
        "80": "The former helps collect local inference for words and their context, and the tree LSTM helps collect local information between (linguistic) phrases and clauses.", 
        "81": "Locality of inference Modeling local inference needs to employ some forms of hard or soft alignment to associate the relevant subcomponents between a premise and a hypothesis.", 
        "82": "This includes early methods motivated from the alignment in conventional automatic machine translation (MacCartney, 2009).", 
        "83": "In neural network models, this is often achieved with soft attention.", 
        "84": "Parikh et al.", 
        "85": "(2016) decomposed this process: the word sequence of the premise (or hypothesis) is regarded as a bag-of-word embedding vector and inter-sentence \u201calignment\u201d (or attention) is computed individually to softly align each word\nto the content of hypothesis (or premise, respectively).", 
        "86": "While their basic framework is very effective, achieving one of the previous best results, using a pre-trained word embedding by itself does not automatically consider the context around a word in NLI.", 
        "87": "Parikh et al.", 
        "88": "(2016) did take into account the word order and context information through an optional distance-sensitive intra-sentence attention.", 
        "89": "In this paper, we argue for leveraging attention over the bidirectional sequential encoding of the input, as discussed above.", 
        "90": "We will show that this plays an important role in achieving our best results, and the intra-sentence attention used by Parikh et al.", 
        "91": "(2016) actually does not further improve over our model, while the overall framework they proposed is very effective.", 
        "92": "Our soft alignment layer computes the attention weights as the similarity of a hidden state tuple <a\u0304i, b\u0304j> between a premise and a hypothesis with Equation (11).", 
        "93": "We did study more complicated relationships between a\u0304i and b\u0304j with multilayer perceptrons, but observed no further improvement on the heldout data.", 
        "94": "eij = a\u0304 T i b\u0304j .", 
        "95": "(11)\nIn the formula, a\u0304i and b\u0304j are computed earlier in Equations (1) and (2), or with Equation (3) when tree-LSTM is used.", 
        "96": "Again, as discussed above, we will use bidirectional LSTM and tree-LSTM to encode the premise and hypothesis, respectively.", 
        "97": "In our sequential inference model, unlike in Parikh et al.", 
        "98": "(2016) which proposed to use a function F (a\u0304i), i.e., a feedforward neural network, to map the original word representation for calculating eij , we instead advocate to use BiLSTM, which encodes the information in premise and hypothesis very well and achieves better performance shown in the experiment section.", 
        "99": "We tried to apply the F (.)", 
        "100": "function on our hidden states before computing eij and it did not further help our models.", 
        "101": "Local inference collected over sequences Local inference is determined by the attention weight eij computed above, which is used to obtain the local relevance between a premise and hypothesis.", 
        "102": "For the hidden state of a word in a premise, i.e., a\u0304i (already encoding the word itself and its context), the relevant semantics in the hypothesis is identified and composed using eij , more specifically\nwith Equation (12).", 
        "103": "a\u0303i =\n`b\u2211\nj=1 exp(eij)\u2211`b k=1 exp(eik) b\u0304j ,\u2200i \u2208 [1, .", 
        "104": ".", 
        "105": ".", 
        "106": ", `a], (12)\nb\u0303j =\n`a\u2211\ni=1 exp(eij)\u2211`a k=1 exp(ekj) a\u0304i,\u2200j \u2208 [1, .", 
        "107": ".", 
        "108": ".", 
        "109": ", `b], (13)\nwhere a\u0303i is a weighted summation of {b\u0304j}`bj=1.", 
        "110": "Intuitively, the content in {b\u0304j}`bj=1 that is relevant to a\u0304i will be selected and represented as a\u0303i.", 
        "111": "The same is performed for each word in the hypothesis with Equation (13).", 
        "112": "Local inference collected over parse trees We use tree models to help collect local inference information over linguistic phrases and clauses in this layer.", 
        "113": "The tree structures of the premise and hypothesis are produced by a constituency parser.", 
        "114": "Once the hidden states of a tree are all computed with Equation (3), we treat all tree nodes equally as we do not have further heuristics to discriminate them, but leave the attention weights to figure out their relationship.", 
        "115": "So, we use Equation (11) to compute the attention weights for all node pairs between a premise and hypothesis.", 
        "116": "This connects all words, constituent phrases, and clauses between the premise and hypothesis.", 
        "117": "We then collect the information between all the pairs with Equations (12) and (13) and feed them into the next layer.", 
        "118": "Enhancement of local inference information In our models, we further enhance the local inference information collected.", 
        "119": "We compute the difference and the element-wise product for the tuple <a\u0304, a\u0303> as well as for <b\u0304, b\u0303>.", 
        "120": "We expect that such operations could help sharpen local inference information between elements in the tuples and capture inference relationships such as contradiction.", 
        "121": "The difference and element-wise product are then concatenated with the original vectors, a\u0304 and a\u0303, or b\u0304 and b\u0303, respectively (Mou et al., 2016; Zhang et al., 2017).", 
        "122": "The enhancement is performed for both the sequential and the tree models.", 
        "123": "ma = [a\u0304; a\u0303; a\u0304\u2212 a\u0303; a\u0304 a\u0303], (14) mb = [b\u0304; b\u0303; b\u0304\u2212 b\u0303; b\u0304 b\u0303].", 
        "124": "(15)\nThis process could be regarded as a special case of modeling some high-order interaction between the tuple elements.", 
        "125": "Along this direction, we have\nalso further modeled the interaction by feeding the tuples into feedforward neural networks and added the top layer hidden states to the above concatenation.", 
        "126": "We found that it does not further help the inference accuracy on the heldout dataset.", 
        "127": "3.3 Inference Composition  To determine the overall inference relationship between a premise and hypothesis, we explore a composition layer to compose the enhanced local inference information ma and mb.", 
        "128": "We perform the composition sequentially or in its parse context using BiLSTM and tree-LSTM, respectively.", 
        "129": "The composition layer In our sequential inference model, we keep using BiLSTM to compose local inference information sequentially.", 
        "130": "The formulas for BiLSTM are similar to those in Equations (1) and (2) in their forms so we skip the details, but the aim is very different here\u2014they are used to capture local inference information ma and mb and their context here for inference composition.", 
        "131": "In the tree composition, the high-level formulas of how a tree node is updated to compose local inference is as follows:\nva,t = TrLSTM(F (ma,t),hLt\u22121,h R t\u22121), (16) vb,t = TrLSTM(F (mb,t),hLt\u22121,h R t\u22121).", 
        "132": "(17)\nWe propose to control model complexity in this layer, since the concatenation we described above to compute ma and mb can significantly increase the overall parameter size to potentially overfit the models.", 
        "133": "We propose to use a mapping F as in Equation (16) and (17).", 
        "134": "More specifically, we use a 1-layer feedforward neural network with the ReLU activation.", 
        "135": "This function is also applied to BiLSTM in our sequential inference composition.", 
        "136": "Pooling Our inference model converts the resulting vectors obtained above to a fixed-length vector with pooling and feeds it to the final classifier to determine the overall inference relationship.", 
        "137": "We consider that summation (Parikh et al., 2016) could be sensitive to the sequence length and hence less robust.", 
        "138": "We instead suggest the following strategy: compute both average and max pooling, and concatenate all these vectors to form the final fixed length vector v. Our experiments show that this leads to significantly better results than summation.", 
        "139": "The final fixed length vector v is calculated\nas follows:\nva,ave =\n`a\u2211\ni=1\nva,i `a , va,max = `a max i=1 va,i, (18)\nvb,ave =\n`b\u2211\nj=1\nvb,j `b , vb,max = `b max j=1 vb,j , (19)\nv = [va,ave;va,max;vb,ave;vb,max].", 
        "140": "(20)\nNote that for tree composition, Equation (20) is slightly different from that in sequential composition.", 
        "141": "Our tree composition will concatenate also the hidden states computed for the roots with Equations (16) and (17), which are not shown here.", 
        "142": "We then put v into a final multilayer perceptron (MLP) classifier.", 
        "143": "The MLP has a hidden layer with tanh activation and softmax output layer in our experiments.", 
        "144": "The entire model (all three components described above) is trained end-to-end.", 
        "145": "For training, we use multi-class cross-entropy loss.", 
        "146": "Overall inference models Our model can be based only on the sequential networks by removing all tree components and we call it Enhanced Sequential Inference Model (ESIM) (see the left part of Figure 1).", 
        "147": "We will show that ESIM outperforms all previous results.", 
        "148": "We will also encode parse information with tree LSTMs in multiple layers as described (see the right side of Figure 1).", 
        "149": "We train this model and incorporate it into ESIM by averaging the predicted probabilities to get the final label for a premise-hypothesis pair.", 
        "150": "We will show that parsing information complements very well with ESIM and further improves the performance, and we call the final model Hybrid Inference Model (HIM).", 
        "151": "4 Experimental Setup  Data The Stanford Natural Language Inference (SNLI) corpus (Bowman et al., 2015) focuses on three basic relationships between a premise and a potential hypothesis: the premise entails the hypothesis (entailment), they contradict each other (contradiction), or they are not related (neutral).", 
        "152": "The original SNLI corpus contains also \u201cthe other\u201d category, which includes the sentence pairs lacking consensus among multiple human annotators.", 
        "153": "As in the related work, we remove this category.", 
        "154": "We used the same split as in Bowman et al.", 
        "155": "(2015) and other previous work.", 
        "156": "The parse trees used in this paper are produced by the Stanford PCFG Parser 3.5.3 (Klein and Manning, 2003) and they are delivered as part of the SNLI corpus.", 
        "157": "We use classification accuracy as the evaluation metric, as in related work.", 
        "158": "Training We use the development set to select models for testing.", 
        "159": "To help replicate our results, we publish our code1.", 
        "160": "Below, we list our training details.", 
        "161": "We use the Adam method (Kingma and Ba, 2014) for optimization.", 
        "162": "The first momentum is set to be 0.9 and the second 0.999.", 
        "163": "The initial learning rate is 0.0004 and the batch size is 32.", 
        "164": "All hidden states of LSTMs, tree-LSTMs, and word embeddings have 300 dimensions.", 
        "165": "We use dropout with a rate of 0.5, which is applied to all feedforward connections.", 
        "166": "We use pre-trained 300-D Glove 840B vectors (Pennington et al., 2014) to initialize our word embeddings.", 
        "167": "Out-of-vocabulary (OOV) words are initialized randomly with Gaussian samples.", 
        "168": "All vectors including word embedding are updated during training.", 
        "169": "5 Results  Overall performance Table 1 shows the results of different models.", 
        "170": "The first row is a baseline classifier presented by Bowman et al.", 
        "171": "(2015) that considers handcrafted features such as BLEU score of the hypothesis with respect to the premise, the overlapped words, and the length difference between them, etc.", 
        "172": "The next group of models (2)-(7) are based on sentence encoding.", 
        "173": "The model of Bowman et al.", 
        "174": "(2016) encodes the premise and hypothesis with two different LSTMs.", 
        "175": "The model in Vendrov et al.", 
        "176": "(2015) uses unsupervised \u201cskip-thoughts\u201d pre-training in GRU encoders.", 
        "177": "The approach proposed by Mou et al.", 
        "178": "(2016) considers tree-based CNN to capture sentence-level semantics, while the model of Bowman et al.", 
        "179": "(2016) introduces a stack-augmented parser-interpreter neural network (SPINN) which combines parsing and interpretation within a single tree-sequence hybrid model.", 
        "180": "The work by Liu et al.", 
        "181": "(2016) uses BiLSTM to generate sentence representations, and then replaces average pooling with intra-attention.", 
        "182": "The approach proposed by Munkhdalai and Yu (2016a) presents a memory augmented neural network, neural semantic encoders (NSE), to encode sentences.", 
        "183": "The next group of methods in the table, models\n1https://github.com/lukecq1231/nli\n(8)-(15), are inter-sentence attention-based model.", 
        "184": "The model marked with Rockt\u00e4schel et al.", 
        "185": "(2015) is LSTMs enforcing the so called word-by-word attention.", 
        "186": "The model of Wang and Jiang (2016) extends this idea to explicitly enforce word-by-word matching between the hypothesis and the premise.", 
        "187": "Long short-term memory-networks (LSTMN) with deep attention fusion (Cheng et al., 2016) link the current word to previous words stored in memory.", 
        "188": "Parikh et al.", 
        "189": "(2016) proposed a decomposable attention model without relying on any word-order information.", 
        "190": "In general, adding intra-sentence attention yields further improvement, which is not very surprising as it could help align the relevant text spans between premise and hypothesis.", 
        "191": "The model of Munkhdalai and Yu (2016b) extends the framework of Wang and Jiang (2016) to a full n-ary tree model and achieves further improvement.", 
        "192": "Sha et al.", 
        "193": "(2016) proposes a special LSTM variant which considers the attention vector of another sentence as an inner state of LSTM.", 
        "194": "Paria et al.", 
        "195": "(2016) use a neural architecture with a complete binary tree-LSTM encoders without syntactic information.", 
        "196": "The table shows that our ESIM model achieves an accuracy of 88.0%, which has already outperformed all the previous models, including those using much more complicated network architectures (Munkhdalai and Yu, 2016b).", 
        "197": "We ensemble our ESIM model with syntactic tree-LSTMs (Zhu et al., 2015) based on syntactic parse trees and achieve significant improvement over our best sequential encoding model ESIM, attaining an accuracy of 88.6%.", 
        "198": "This shows that syntactic tree-LSTMs complement well with ESIM.", 
        "199": "Ablation analysis We further analyze the major components that are of importance to help us achieve good performance.", 
        "200": "From the best model, we first replace the syntactic tree-LSTM with the full tree-LSTM without encoding syntactic parse information.", 
        "201": "More specifically, two adjacent words in a sentence are merged to form a parent node, and\nthis process continues and results in a full binary tree, where padding nodes are inserted when there are no enough leaves to form a full tree.", 
        "202": "Each tree node is implemented with a tree-LSTM block (Zhu et al., 2015) same as in model (17).", 
        "203": "Table 2 shows that with this replacement, the performance drops\nto 88.2%.", 
        "204": "Furthermore, we note the importance of the layer performing the enhancement for local inference information in Section 3.2 and the pooling layer in inference composition in Section 3.3.", 
        "205": "Table 2 suggests that the NLI task seems very sensitive to the\nlayers.", 
        "206": "If we remove the pooling layer in inference composition and replace it with summation as in Parikh et al.", 
        "207": "(2016), the accuracy drops to 87.1%.", 
        "208": "If we remove the difference and elementwise product from the local inference enhancement layer, the accuracy drops to 87.0%.", 
        "209": "To provide some detailed comparison with Parikh et al.", 
        "210": "(2016), replacing bidirectional LSTMs in inference composition and also input encoding with feedforward neural network reduces the accuracy to 87.3% and 86.3% respectively.", 
        "211": "The difference between ESIM and each of the other models listed in Table 2 is statistically significant under the one-tailed paired t-test at the 99% significance level.", 
        "212": "The difference between model (17) and (18) is also significant at the same level.", 
        "213": "Note that we cannot perform significance test between our models with the other models listed in Table 1 since we do not have the output of the other models.", 
        "214": "If we remove the premise-based attention from ESIM (model 23), the accuracy drops to 87.2% on the test set.", 
        "215": "The premise-based attention means when the system reads a word in a premise, it uses soft attention to consider all relevant words in hypothesis.", 
        "216": "Removing the hypothesis-based attention (model 24) decrease the accuracy to 86.5%, where hypothesis-based attention is the attention performed on the other direction for the sentence pairs.", 
        "217": "The results show that removing hypothesisbased attention affects the performance of our model more, but removing the attention from the other direction impairs the performance too.", 
        "218": "The stand-alone syntactic tree-LSTM model achieves an accuracy of 87.8%, which is comparable to that of ESIM.", 
        "219": "We also computed the oracle score of merging syntactic tree-LSTM and ESIM, which picks the right answer if either is right.", 
        "220": "Such an oracle/upper-bound accuracy on test set is 91.7%, which suggests how much tree-LSTM and ESIM could ideally complement each other.", 
        "221": "As far as the speed is concerned, training tree-LSTM takes about 40 hours on Nvidia-Tesla K40M and ESIM takes about 6 hours, which is easily extended to larger scale of data.", 
        "222": "Further analysis We showed that encoding syntactic parsing information helps recognize natural language inference\u2014it additionally improves the strong system.", 
        "223": "Figure 3 shows an example where tree-LSTM makes a different and correct decision.", 
        "224": "In subfigure (d), the larger values at the input gates\non nodes 9 and 10 indicate that those nodes are important in making the final decision.", 
        "225": "We observe that in subfigure (c), nodes 9 and 10 are aligned to node 29 in the premise.", 
        "226": "Such information helps the system decide that this pair is a contradiction.", 
        "227": "Accordingly, in subfigure (e) of sequential BiLSTM, the words sitting and down do not play an important role for making the final decision.", 
        "228": "Subfigure (f) shows that sitting is equally aligned with reading and standing and the alignment for word down is not that useful.", 
        "229": "6 Conclusions and Future Work  We propose neural network models for natural language inference, which achieve the best results reported on the SNLI benchmark.", 
        "230": "The results are first achieved through our enhanced sequential inference model, which outperformed the previous models, including those employing more complicated network architectures, suggesting that the potential of sequential inference models have not been fully exploited yet.", 
        "231": "Based on this, we further show that by explicitly considering recursive architectures in both local inference modeling and inference composition, we achieve additional improvement.", 
        "232": "Particularly, incorporating syntactic parsing information contributes to our best result: it further improves the performance even when added to the already very strong model.", 
        "233": "Future work interesting to us includes exploring the usefulness of external resources such as WordNet and contrasting-meaning embedding (Chen et al., 2015) to help increase the coverage of wordlevel inference relations.", 
        "234": "Modeling negation more closely within neural network frameworks (Socher et al., 2013; Zhu et al., 2014) may help contradiction detection.", 
        "235": "Acknowledgments  The first and the third author of this paper were supported in part by the Science and Technology Development of Anhui Province, China (Grants No.", 
        "236": "2014z02006), the Fundamental Research Funds for the Central Universities (Grant No.", 
        "237": "WK2350000001) and the Strategic Priority Research Program of the Chinese Academy of Sciences (Grant No.", 
        "238": "XDB02070006)."
    }, 
    "document_id": "P17-1152.pdf.json"
}
