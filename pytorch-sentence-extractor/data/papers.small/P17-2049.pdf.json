{
    "abstract_sentences": {
        "1": "While there has been substantial progress in factoid question-answering (QA), answering complex questions remains challenging, typically requiring both a large body of knowledge and inference techniques.", 
        "2": "Open Information Extraction (Open IE) provides a way to generate semi-structured knowledge for QA, but to date such knowledge has only been used to answer simple questions with retrievalbased methods.", 
        "3": "We overcome this limitation by presenting a method for reasoning with Open IE knowledge, allowing more complex questions to be handled.", 
        "4": "Using a recently proposed support graph optimization framework for QA, we develop a new inference model for Open IE, in particular one that can work effectively with multiple short facts, noise, and the relational structure of tuples.", 
        "5": "Our model significantly outperforms a state-of-the-art structured solver on complex questions of varying difficulty, while also removing the reliance on manually curated knowledge."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 311\u2013316 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-2049  1 Introduction  Effective question answering (QA) systems have been a long-standing quest of AI research.", 
        "2": "Structured curated KBs have been used successfully for this task (Berant et al., 2013; Berant and Liang, 2014).", 
        "3": "However, these KBs are expensive to build and typically domain-specific.", 
        "4": "Automatically constructed open vocabulary (subject; predicate; object) style tuples have broader coverage, but have only been used for simple questions where a single tuple suffices (Fader et al., 2014; Yin et al., 2015).", 
        "5": "Our goal in this work is to develop a QA system that can perform reasoning with Open IE (Banko\net al., 2007) tuples for complex multiple-choice questions that require tuples from multiple sentences.", 
        "6": "Such a system can answer complex questions in resource-poor domains where curated knowledge is unavailable.", 
        "7": "Elementary-level science exams is one such domain, requiring complex reasoning (Clark, 2015).", 
        "8": "Due to the lack of a large-scale structured KB, state-of-the-art systems for this task either rely on shallow reasoning with large text corpora (Clark et al., 2016; Cheng et al., 2016) or deeper, structured reasoning with a small amount of automatically acquired (Khot et al., 2015) or manually curated (Khashabi et al., 2016) knowledge.", 
        "9": "Consider the following question from an Alaska state 4th grade science test:\nWhich object in our solar system reflects light and is a satellite that orbits around one planet?", 
        "10": "(A) Earth (B) Mercury (C) the Sun (D) the Moon\nThis question is challenging for QA systems because of its complex structure and the need for multi-fact reasoning.", 
        "11": "A natural way to answer it is by combining facts such as (Moon; is; in the solar system), (Moon; reflects; light), (Moon; is; satellite), and (Moon; orbits; around one planet).", 
        "12": "A candidate system for such reasoning, and which we draw inspiration from, is the TABLEILP system of Khashabi et al.", 
        "13": "(2016).", 
        "14": "TABLEILP treats QA as a search for an optimal subgraph that connects terms in the question and answer via rows in a set of curated tables, and solves the optimization problem using Integer Linear Programming (ILP).", 
        "15": "We similarly want to search for an optimal subgraph.", 
        "16": "However, a large, automatically extracted tuple KB makes the reasoning context different on three fronts: (a) unlike reasoning with tables, chaining tuples is less important and reliable as join rules aren\u2019t\n311\navailable; (b) conjunctive evidence becomes paramount, as, unlike a long table row, a single tuple is less likely to cover the entire question; and (c) again, unlike table rows, tuples are noisy, making combining redundant evidence essential.", 
        "17": "Consequently, a table-knowledge centered inference model isn\u2019t the best fit for noisy tuples.", 
        "18": "To address this challenge, we present a new ILP-based model of inference with tuples, implemented in a reasoner called TUPLEINF.", 
        "19": "We demonstrate that TUPLEINF significantly outperforms TABLEILP by 11.8% on a broad set of over 1,300 science questions, without requiring manually curated tables, using a substantially simpler ILP formulation, and generalizing well to higher grade levels.", 
        "20": "The gains persist even when both solvers are provided identical knowledge.", 
        "21": "This demonstrates for the first time how Open IE based QA can be extended from simple lookup questions to an effective system for complex questions.", 
        "22": "2 Related Work  We discuss two classes of related work: retrievalbased web question-answering (simple reasoning with large scale KB) and science questionanswering (complex reasoning with small KB).", 
        "23": "Web QA: There exist several systems for retrieval-based Web QA problems (Ferrucci et al., 2010; Brill et al., 2002).", 
        "24": "While structured KBs such as Freebase have been used in many (Berant et al., 2013; Berant and Liang, 2014; Kwiatkowski et al., 2013), such approaches are limited by the coverage of the data.", 
        "25": "QA systems using semistructured Open IE tuples (Fader et al., 2013, 2014; Yin et al., 2015) or automatically extracted web tables (Sun et al., 2016; Pasupat and Liang, 2015) have broader coverage but are limited to simple questions with a single query.", 
        "26": "Science QA: Elementary-level science QA tasks require reasoning to handle complex questions.", 
        "27": "Markov Logic Networks (Richardson and Domingos, 2006) have been used to perform probabilistic reasoning over a small set of logical rules (Khot et al., 2015).", 
        "28": "Simple IR techniques have also been proposed for science tests (Clark et al., 2016) and Gaokao tests (equivalent to the SAT exam in China) (Cheng et al., 2016).", 
        "29": "The work most related to TUPLEINF is the aforementioned TABLEILP solver.", 
        "30": "This approach focuses on building inference chains using man-\nually defined join rules for a small set of curated tables.", 
        "31": "While it can also use open vocabulary tuples (as we assess in our experiments), its efficacy is limited by the difficulty of defining reliable join rules for such tuples.", 
        "32": "Further, each row in some complex curated tables covers all relevant contextual information (e.g., each row of the adaptation table contains (animal, adaptation, challenge, explanation)), whereas recovering such information requires combining multiple Open IE tuples.", 
        "33": "3 Tuple Inference Solver  We first describe the tuples used by our solver.", 
        "34": "We define a tuple as (subject; predicate; objects) with zero or more objects.", 
        "35": "We refer to the subject, predicate, and objects as the fields of the tuple.", 
        "36": "3.1 Tuple KB  We use the text corpora (S) from Clark et al.", 
        "37": "(2016) to build our tuple KB.", 
        "38": "S contains 5 \u21e5 1010 tokens (280 GB of plain text) extracted from Web pages as well as around 80,000 sentences from various domain-targeted sources.", 
        "39": "For each test set, we use the corresponding training questions Qtr to retrieve domain-relevant sentences from S. Specifically, for each multiplechoice question (q, A) 2 Qtr and each choice a 2 A, we use all non-stopword stemmed tokens in q and a as an ElasticSearch1 query against S. We take the top 200 hits, run Open IE v4,2 and aggregate the resulting tuples over all a 2 A and over all questions in Qtr to create the tuple KB (T ).3  3.2 Tuple Selection  Given a multiple-choice question qa with question text q and answer choices A={ai}, we select the most relevant tuples from T and S as follows.", 
        "40": "Selecting from Tuple KB: We use an inverted index to find the 1,000 tuples that have the most overlapping tokens with question tokens tok(qa).4 We also filter out any tuples that overlap only with tok(q) as they do not support any answer.", 
        "41": "We compute the normalized TF-IDF score by treating the question, q, as a query and each tuple, t, as a\n1https://www.elastic.co/products/elasticsearch 2http://knowitall.github.io/openie 3Available at http://allenai.org/data.html 4All tokens are stemmed and stop-word filtered.", 
        "42": "document:\ntf(x, q) = 1 if x 2 q, 0 otherwise idf(x) = log (1 + N/nx)\ntf-idf(t, q) = X\nx2t\\q idf(x)\nwhere N is the total number of tuples in the KB and nx is the number of tuples containing x.", 
        "43": "We normalize the tf-idf score by the number of tokens in t and q, and take the 50 top-scoring tuples Tqa .", 
        "44": "On-the-fly tuples from text: To handle questions from new domains not covered by the training set, we extract additional tuples on the fly from S (similar to Sharma et al.", 
        "45": "(2015)).", 
        "46": "We perform the same ElasticSearch query described earlier for building T. We ignore sentences that cover none or all answer choices as they are not discriminative.", 
        "47": "We also ignore long sentences (>300 characters) and sentences with negation5 as they tend to lead to noisy inference.", 
        "48": "We then run Open IE on these sentences and re-score the resulting tuples using the Jaccard score6 due to the lossy nature of Open IE, and finally take the 50 top-scoring tuples T 0qa .", 
        "49": "3.3 Support Graph Search  Similar to TABLEILP, we view the QA task as searching for a graph that best connects the terms in the question (qterms) with an answer choice via the knowledge; see Figure 1 for a simple illustrative example.", 
        "50": "Unlike standard alignment models used for tasks such as Recognizing Textual Entailment (RTE) (Dagan et al., 2010), however, we must score alignments between a set Tqa [ T 0qa of structured tuples and a (potentially multi-sentence) multiple-choice question qa.", 
        "51": "The qterms, answer choices, and tuples fields form the set of possible vertices, V , of the support graph.", 
        "52": "Edges connecting qterms to tuple fields and tuple fields to answer choices form the set of possible edges, E .", 
        "53": "The support graph, G(V, E), is a\n5containing not, \u2019nt, or except 6| tok(t) \\ tok(qa) | / | tok(t) [ tok(qa) |\nsubgraph of G(V, E) where V and E denote \u201cactive\u201d nodes and edges, resp.", 
        "54": "We define an ILP optimization model to search for the best support graph (i.e., the active nodes and edges) as follows.", 
        "55": "Variables The ILP has a binary variable for each qterm (xq), tuple (xt), tuple field (xf ), and answer choice (xa), indicating whether the corresponding graph node is active.", 
        "56": "There is a binary activity variable (xe) for each edge e 2 E .", 
        "57": "For efficiency, we only create a qterm!field edge and a field!choice edge if the corresponding coefficient is no smaller than a certain threshold (0.1 and 0.2, resp.).", 
        "58": "Objective Function The objective function coefficient ce of each edge e(t, h) is determined by a word-overlap score.7 While TABLEILP used WordNet (Miller, 1995) paths to compute the edge weight, this measure results in unreliable scores when faced with longer phrases found in Open IE tuples.", 
        "59": "Compared to a curated KB, it is easy to find Open IE tuples that match irrelevant parts of the questions.", 
        "60": "To mitigate this issue, we scale the coefficients cq of qterms in our ILP objective to focus on important terms.", 
        "61": "Since the later terms in a question tend to provide the most critical information, we scale qterm coefficients based on their position in the question.", 
        "62": "Also, qterms that appear in almost all of the selected tuples tend not to be discriminative as any tuple would support such a qterm.", 
        "63": "Hence we scale qterm coefficients inversely by the frequency with which they occur in the selected tuples.", 
        "64": "Appendix A describes the coefficient for qterm as well as other variables in detail.", 
        "65": "Constraints Since Open IE tuples do not come with schema and join rules, we can define a substantially simpler model compared to TABLEILP.", 
        "66": "This reduces the reasoning capability but also eliminates the reliance on hand-authored join rules and regular expressions used in TABLEILP.", 
        "67": "We discovered (see empirical evaluation) that this simple model can achieve the same score as TABLEILP on the Regents test (target test set used by TABLEILP) and generalizes better to different grade levels.", 
        "68": "We start with a few constraints defining what is an active node or edge, shown as the first groups of constraints in Table 1.", 
        "69": "To avoid positive edge coefficients in the objective function resulting in\n7w(t, h) =| tok(t) \\ tok(h) | / | tok(h) |\nspurious edges in the support graph, we limit the number of active edges from an active tuple, question choice, tuple fields, and qterms (second group of constraints in Table 1).", 
        "70": "Our model is also capable of using multiple tuples to support different parts of the question as illustrated in Figure 1.", 
        "71": "To avoid spurious tuples that only connect with the question (or choice) or ignore the relation being expressed in the tuple, we add constraints that require each tuple to connect a qterm with an answer choice (third group of constraints in Table 1).", 
        "72": "We also define new constraints based on the Open IE tuple structure.", 
        "73": "Since an Open IE tuple expresses a fact about the tuple\u2019s subject, we require that the subject must be active.", 
        "74": "To avoid issues such as (Planet; orbit; Sun) matching the sample question in the introduction (\u201cWhich object.", 
        "75": ".", 
        "76": ".orbits around a planet\u201d), we also add an ordering constraint (fourth group in Table 1).", 
        "77": "We note that TUPLEINF only combines parallel evidence, i.e., each tuple must individually connect words in the question to the answer choice.", 
        "78": "For reliable multi-hop reasoning using OpenIE tuples, one can add inter-tuple connections to the support graph search, controlled by a small number of rules over Open IE predicates.", 
        "79": "Learning such rules for the Science domain is an open problem and potential avenue for future work.", 
        "80": "4 Experiments  Comparing our method with two state-of-the-art systems for 4th and 8th grade science exams, we demonstrate that (a) TUPLEINF with only automatically extracted tuples significantly outperforms TABLEILP with its original curated knowl-\nedge as well as with additional tuples, and (b) TUPLEINF\u2019s complementary approach to IR leads to an improved ensemble.", 
        "81": "Numbers in bold indicate statistical significance based on the Binomial exact test (Howell, 2012) at p = 0.05.", 
        "82": "We consider two question sets.", 
        "83": "(1) 4th Grade set (1220 train, 1304 test) is a 10x larger superset of the NY Regents questions (Clark et al., 2016), and includes professionally written licensed questions.", 
        "84": "(2) 8th Grade set (293 train, 282 test) contains 8th grade questions from various states.8\nWe consider two knowledge sources: (1) The Sentence corpus (S) consists of domain-targeted 80K sentences and 280 GB of plain text extracted from web pages used by Clark et al.", 
        "85": "(2016).", 
        "86": "This corpus is used as a collection of sentences by the IR solver.", 
        "87": "It is also used to create the tuple KB T (Sec.", 
        "88": "3.1) and on-the-fly questionspecific tuples T 0qa (Sec.", 
        "89": "3.2) for TUPLEINF.", 
        "90": "(2) TABLEILP uses \u21e070 Curated tables (C) containing about 7,600 rows, designed for 4th grade NY Regents exams.", 
        "91": "We compare TUPLEINF with two state-of-theart baselines.", 
        "92": "IR is a simple yet powerful information-retrieval baseline (Clark et al., 2016) that selects the answer option with the best matching sentence in a corpus.", 
        "93": "TABLEILP is the stateof-the-art structured inference baseline (Khashabi et al., 2016) developed for science questions.", 
        "94": "4.1 Results  Table 2 shows that TUPLEINF, with no curated knowledge, outperforms TABLEILP on both question sets by more than 11%.", 
        "95": "The lower half of the table shows that even when both solvers are given\n8See the Middle School Without Diagrams set from AI2 Science Questions v1 (Feb 2016) at http://allenai.org/data/science-exam-questions.html for the 8th Grade set.", 
        "96": "For future comparisons, we also report our score on their smaller 4th Grade set: Elementary School Without Diagrams (432 train, 339 test).", 
        "97": "9TUPLEINF(T+T\u2019) achieves a score of 56.1% on the Elementary School Without Diagrams test set (cf.", 
        "98": "Footnote 8) compared to TABLEILP(C)\u2019s score of 46.7%.", 
        "99": "the same knowledge (C+T),10 the improved selection and simplified model of TUPLEINF11 results in a statistically significant improvement.", 
        "100": "Our simple model, TUPLEINF(C + T), also achieves scores comparable to TABLEILP on the latter\u2019s target Regents questions (61.4% vs TABLEILP\u2019s reported 61.5%) without any specialized rules.", 
        "101": "Table 3 shows that while TUPLEINF achieves similar scores as the IR solver, the approaches are complementary (structured lossy knowledge reasoning vs. lossless sentence retrieval).", 
        "102": "The two solvers, in fact, differ on 47.3% of the training questions.", 
        "103": "To exploit this complementarity, we train an ensemble system (Clark et al., 2016) which, as shown in the table, provides a substantial boost over the individual solvers.", 
        "104": "Further, IR + TUPLEINF is consistently better than IR + TABLEILP.", 
        "105": "Finally, in combination with IR and the statistical association based PMI solver (which scores 54.1% by itself) of Clark et al.", 
        "106": "(2016), TUPLEINF achieves a score of 58.2% on the 4th grade set.", 
        "107": "This compares favorably to TABLEILP\u2019s ensemble score of 56.7%, again attesting to TUPLEINF\u2019s strength.12  5 Error Analysis  We describe four classes of failure of TUPLEINF, and the future work they suggest.", 
        "108": "Missing Important Words: Which material will spread out to completely fill a larger container?", 
        "109": "(A) air (B) ice (C) sand (D) water In this question, we have tuples that support that water will spread out and fill a larger container, but miss the critical word \u201ccompletely\u201d.", 
        "110": "A method for detecting salient question words would help here.", 
        "111": "10See Appendix B for how tables (and tuples) are used by TUPLEINF (and TABLEILP).", 
        "112": "11On average, TABLEILP (TUPLEINF) has 3,403 (1,628, resp.)", 
        "113": "constraints and 982 (588, resp.)", 
        "114": "variables.", 
        "115": "TUPLEINF\u2019s ILP can be solved in half the time taken by TABLEILP, reducing the overall question answering time by 68.6%.", 
        "116": "12We observed no difference in scores on the 8th grade set.", 
        "117": "Lossy IE: Which action is the best method to separate a mixture of salt and water?", 
        "118": ".", 
        "119": ".", 
        "120": ".", 
        "121": "The IR solver correctly answers this question by using the sentence: Separate the salt and water mixture by evaporating the water.", 
        "122": "However, TUPLEINF is not able to answer this question as Open IE is unable to extract tuples from this imperative sentence.", 
        "123": "While the additional structure from Open IE is generally helpful for more robust matching, the conversion to tuples sometimes loses important bits of information.", 
        "124": "Bad Alignment: Which of the following gases is necessary for humans to breathe in order to live?", 
        "125": "(A) Oxygen (B) Carbon dioxide (C) Helium (D) Water vapor TUPLEINF returns \u201cCarbon dioxide\u201d as the answer because of the tuple (humans; breathe out; carbon dioxide).", 
        "126": "The chunk \u201cto breathe\u201d in the question has a high alignment score to the \u201cbreathe out\u201d relation in the tuple, even though they have completely different meaning.", 
        "127": "An improved phrase alignment module can mitigate this issue.", 
        "128": "Out of Scope: Deer live in forest for shelter.", 
        "129": "If the forest was cut down, which situation would most likely happen?", 
        "130": ".", 
        "131": ".", 
        "132": ".", 
        "133": "Such questions require modeling a state presented in the question and reasoning over this state, which is out of scope of our solver.", 
        "134": "6 Conclusion  We presented a new QA system, TUPLEINF, that can reason over a large, potentially noisy knowledge base of (subject, predicate, object) style tuples, in order to answer complex questions.", 
        "135": "Our results establish TUPLEINF as a new state-of-theart structured reasoning solver for elementarylevel science that does not rely on curated knowledge and generalizes to higher grade levels.", 
        "136": "Our error analysis points to lossy IE and textual misalignments as two main causes of failure, suggesting future work around incorporating tuple context and distributional similarity measures.", 
        "137": "Acknowledgments  The authors would like to thank Oren Etzioni for valuable feedback on an early draft of this paper, and Colin Arenz and Michal Guerquin for helping us develop this system."
    }, 
    "document_id": "P17-2049.pdf.json"
}
