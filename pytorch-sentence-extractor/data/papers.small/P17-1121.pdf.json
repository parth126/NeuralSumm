{
    "abstract_sentences": {
        "1": "We propose a local coherence model based on a convolutional neural network that operates over the entity grid representation of a text.", 
        "2": "The model captures long range entity transitions along with entity-specific features without loosing generalization, thanks to the power of distributed representation.", 
        "3": "We present a pairwise ranking method to train the model in an end-to-end fashion on a task and learn task-specific high level features.", 
        "4": "Our evaluation on three different coherence assessment tasks demonstrates that our model achieves state of the art results outperforming existing models by a good margin."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 1320\u20131330 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1121  1 Introduction and Motivation  What distinguishes a coherent text from a random sequence of sentences is that it binds the sentences together to express a meaning as a whole \u2014 the interpretation of a sentence usually depends on the meaning of its neighbors.", 
        "2": "Coherence models that can distinguish a coherent from incoherent texts have a wide range of applications in text generation, summarization, and coherence scoring.", 
        "3": "Several formal theories of coherence have been proposed (Mann and Thompson, 1988a; Grosz et al., 1995; Asher and Lascarides, 2003), and their principles have inspired development of many existing coherence models (Barzilay and Lapata, 2008; Lin et al., 2011; Li and Hovy, 2014).", 
        "4": "Among these models, the entity grid (Barzilay and Lapata, 2008), which is based on Centering Theory (Grosz et al., 1995), is arguably the most popular, and has seen a number of improvements over the years.", 
        "5": "As shown in Figure 1, the entity grid model represents a text by a grid that captures how\n\u2217Both authors contributed equally to this work.", 
        "6": "grammatical roles of different entities change from sentence to sentence.", 
        "7": "The grid is then converted into a feature vector containing probabilities of local entity transitions, which enables machine learning models to learn the degree of text coherence.", 
        "8": "Extensions of this basic grid model incorporate entity-specific features (Elsner and Charniak, 2011), multiple ranks (Feng and Hirst, 2012), and coherence relations (Feng et al., 2014).", 
        "9": "While the entity grid and its extensions have been successful in many applications, they are limited in several ways.", 
        "10": "First, they use discrete representation for grammatical roles and features, which prevents the model from considering sufficiently long transitions (Bengio et al., 2003).", 
        "11": "Second, feature vector computation in existing models is decoupled from the target task, which limits the model\u2019s capacity to learn task-specific features.", 
        "12": "In this paper, we propose a neural architecture for coherence assessment that can capture long range entity transitions along with arbitrary entityspecific features.", 
        "13": "Our model obtains generalization through distributed representations of entity transitions and entity features.", 
        "14": "We also present an end-to-end training method to learn task-specific high level features automatically in our model.", 
        "15": "We evaluate our approach on three different evaluation tasks: discrimination, insertion, and summary coherence rating, proposed previously for evaluating coherence models (Barzilay and Lapata, 2008; Elsner and Charniak, 2011).", 
        "16": "Discrimination and insertion involve identifying the right order of the sentences in a text with different levels of difficulty.", 
        "17": "In the summary coherence rating task, we compare the rankings, given by the model, against human judgments of coherence.", 
        "18": "The experimental results show that our neural models consistently improve over the nonneural counterparts (i.e., existing entity grid models) yielding absolute gains of about 4% on dis-\n1320\ncrimination, up to 2.5% on insertion, and more than 4% on summary coherence rating.", 
        "19": "Furthermore, our model achieves state of the art results in all these tasks.", 
        "20": "We have released our source code for research purposes.1\nThe remainder of this paper is organized as follows.", 
        "21": "We describe entity grid, its extensions, and its limitations in Section 2.", 
        "22": "In Section 3, we present our neural model.", 
        "23": "We describe evaluation tasks and results in Sections 4 and 5.", 
        "24": "We give a brief account of related work in Section 6.", 
        "25": "Finally, we conclude with future directions in Section 7.", 
        "26": "2 Entity Grid and Its Extensions  Motivated by Centering Theory (Grosz et al., 1995), Barzilay and Lapata (2008) proposed an entity-based model for representing and assessing text coherence.", 
        "27": "Their model represents a text by a two-dimensional array called entity grid that captures transitions of discourse entities across sentences.", 
        "28": "As shown in Figure 1, the rows of the grid correspond to sentences, and the columns correspond to discourse entities appearing in the text.", 
        "29": "They consider noun phrases (NP) as entities, and employ a coreference resolver to detect mentions of the same entity (e.g., Obama, the president).", 
        "30": "Each entry Gi,j in the entity grid represents the syntactic role that entity ej plays in sentence si, which can be one of: subject (S), object (O), or other (X).", 
        "31": "In addition, entities not appearing in a sentence are marked by a special symbol (-).", 
        "32": "If an entity appears more than once with different grammatical roles in the same sentence, the role with the highest rank (S O X) is considered.", 
        "33": "To represent the entity grid using a feature vector, Barzilay and Lapata (2008) compute probability for each local entity transition of length k (i.e., {S,O,X,\u2212}k), and represent each grid by a vector of 4k transitions probabilities.", 
        "34": "To distinguish between transitions of important entities from unimportant ones, they consider the salience of the entities, which they quantify by their occurrence frequency in the document.", 
        "35": "Assessment of text coherence is then formulated as a ranking problem in an SVM preference ranking framework (Joachims, 2002).", 
        "36": "Subsequent studies proposed to extend the basic entity grid model.", 
        "37": "Filippova and Strube (2007) attempted to improve the model by grouping en-\n1https://github.com/datienguyen/cnn_ coherence/\ntities based on semantic relatedness, but did not get significant improvement.", 
        "38": "Elsner and Charniak (2011) proposed a number of improvements.", 
        "39": "They initially show significant improvement by including non-head nouns (i.e., nouns that do not head NPs) as entities in the grid.2 Then, they extend the grid to distinguish between entities of different types by incorporating entity-specific features like named entity, noun class, modifiers, etc.", 
        "40": "These extensions led to the best results reported so far.", 
        "41": "The Entity grid and its extensions have been successfully applied to many downstream tasks including coherence rating (Barzilay and Lapata, 2008), essay scoring (Burstein et al., 2010), story generation (McIntyre and Lapata, 2010), and readability assessment (Pitler et al., 2010; Barzilay and Lapata, 2008).", 
        "42": "They have also been critical components in state-of-the-art sentence ordering models (Soricut and Marcu, 2006; Elsner and Charniak, 2011; Lin et al., 2011).", 
        "43": "2.1 Limitations of Entity Grid Models  Despite its success, existing entity grid models are limited in several ways.", 
        "44": "\u2022 Existing models use discrete representation for grammatical roles and features, which leads to the so-called curse of dimensionality problem (Bengio et al., 2003).", 
        "45": "In particular, to model transitions of length k withR different grammatical roles, the basic entity grid model needs to computeRk tran-\n2They match the nouns to detect coreferent entities.", 
        "46": "sition probabilities from a grid.", 
        "47": "One can imagine that the estimated distribution becomes sparse as k increases.", 
        "48": "This prevents the model from considering longer transitions \u2013 existing models use k \u2264 3.", 
        "49": "This problem is exacerbated when we want to include entity-specific features, as the number of parameters grows exponentially with the number of features (Elsner and Charniak, 2011).", 
        "50": "\u2022 Existing models compute feature representations from entity grids in a task-agnostic way.", 
        "51": "In other words, feature extraction is decoupled from the target downstream tasks.", 
        "52": "This can limit the model\u2019s capacity to learn task-specific features.", 
        "53": "Therefore, models that can be trained in an end-toend fashion on different target tasks are desirable.", 
        "54": "In the following section, we present a neural architecture that allows us to capture long range entity transitions along with arbitrary entity-specific features without loosing generalization.", 
        "55": "We also present an end-to-end training method to learn task-specific features automatically.", 
        "56": "3 The Neural Coherence Model  Figure 2 summarizes our neural architecture for modeling local coherence, and how it can be trained in a pairwise fashion.", 
        "57": "The architecture takes a document as input, and first extracts its entity grid.3 The first layer of the neural network transforms each grammatical role in the grid into a distributed representation, a real-valued vector.", 
        "58": "The second layer computes high-level features by going over each column (transitions) of the grid.", 
        "59": "The following layer selects the most important high-level features, which are in turn used for coherence scoring.", 
        "60": "The features computed at different layers of the network are automatically trained by backpropagation to be relevant to the task.", 
        "61": "In the following, we elaborate on the layers of the neural network model.", 
        "62": "(I) Transforming grammatical roles into feature vectors: Grammatical roles are fed to our model as indices taken from a finite vocabulary V .", 
        "63": "In the simplest scenario, V contains {S,O,X,\u2212}.", 
        "64": "However, we will see in Section 3.1 that as we include more entity-specific features, V can contain more symbols.", 
        "65": "The first layer of our network maps each of these indices into a distributed representation Rd by looking up a shared embedding matrix\n3For clarification, pairwise input as shown in the figure is required only to train the model.", 
        "66": "E \u2208 R|V |\u00d7d.", 
        "67": "We consider E a model parameter to be learned by backpropagation on a given task.", 
        "68": "We can initialize E randomly or using pretrained vectors trained on a general coherence task.", 
        "69": "Given an entity grid G with columns representing entity transitions over sentences in a document, the lookup layer extracts a d-dimensional vector for each entry Gi,j from E. More formally,\nL(G) = \u2329 E(G1,1) \u00b7 \u00b7 \u00b7 E(Gi,j) \u00b7 \u00b7 \u00b7 E(Gm,n) \u232a\n(1) where E(Gi,j) refers to the row in E that corresponds to the grammatical role Gi,j \u2208 V ; m is the total number of sentences and n is the total number of entities in the document.", 
        "70": "The output L(G) is a tensor in Rm\u00d7n\u00d7d, which is fed to the next layer of the network as we describe below.", 
        "71": "(II) Modeling entity transitions: The vectors produced by the lookup layer are combined by subsequent layers of the network to generate a coherence score for the document.", 
        "72": "To compose higher-level features from the embedding vectors, we make the following modeling assumptions:\n\u2022 Similar to existing entity grid models, we assume there is no spatio-temporal relation between the entities in a document.", 
        "73": "In other words, columns in a grid are treated independently.", 
        "74": "\u2022 We are interested in modeling entity transitions of arbitrary lengths in a location-invariant way.", 
        "75": "This means, we aim to compose local patches of entity transitions into higher-level representations, while treating the patches independently of their position in the entity grid.", 
        "76": "Under these assumptions, the natural choice to tackle this problem is to use a convolutional approach, used previously to solve other NLP tasks (Collobert et al., 2011; Kim, 2014).", 
        "77": "Convolution layer: A convolution operation involves applying a filter w \u2208 Rk.d (i.e., a vector of weight parameters) to each entity transition of length k to produce a new abstract feature\nht = f(w TLt:t+k\u22121,j + bt) (2)\nwhere Lt:t+k\u22121,j denotes the concatenation of k vectors in the lookup layer representing a transition of length k for entity ej in the grid, bt is a bias\nterm, and f is a nonlinear activation function, e.g., ReLU (Nair and Hinton, 2010) in our model.", 
        "78": "We apply this filter to each possible k-length transitions of different entities in the grid to generate a feature map, hi = [h1, \u00b7 \u00b7 \u00b7 , hm.n+k\u22121].", 
        "79": "We repeat this processN times withN different filters to get N different feature maps (Figure 2).", 
        "80": "Notice that we use a wide convolution (Kalchbrenner et al., 2014), as opposed to narrow, to ensure that the filters reach entire columns of a grid, including the boundary entities.", 
        "81": "This is done by performing zero-padding, where out-of-range (i.e., for t < 0 or t > {m,n}) vectors are assumed to be zero.", 
        "82": "Convolutional filters learn to compose local transition features of a grid into higher-level representations automatically.", 
        "83": "Since it operates over the distributed representation of grid entries, compared to traditional grid models, the transition length k can be sufficiently large (e.g., 5 \u2212 8 in our experiments) to capture long-range transitional dependencies without overfitting on the training data.", 
        "84": "Moreover, unlike existing grid models that compute transition probabilities from a single document, embedding vectors and convolutional filters are learned from all training documents, which helps the neural framework to obtain better generalization and robustness.", 
        "85": "Pooling layer: After the convolution, we apply a max-pooling operation to each feature map.", 
        "86": "m = [\u00b5p(h 1), \u00b7 \u00b7 \u00b7 , \u00b5p(hN )] (3)\nwhere \u00b5p(hi) refers to the max operation applied\nto each non-overlapping4 window of p features in the feature map hi.", 
        "87": "Max-pooling reduces the output dimensionality by a factor of p, and it drives the model to capture the most salient local features from each feature map in the convolutional layer.", 
        "88": "Coherence scoring: Finally, the max-pooled features are used in the output layer of the network to produce a coherence score y \u2208 R.\ny = vTm+ b (4)\nwhere v is the weight vector and b is a bias term.", 
        "89": "Why it works: Intuitively, each filter detects a specific transition pattern (e.g., \u2018SS-O-X\u2019 for a coherent text), and if this pattern occurs somewhere in the grid, the resulting feature map will have a large value for that particular region and small values for other regions.", 
        "90": "By applying max pooling on this feature map, the network then discovers that the transition appeared in the grid.", 
        "91": "3.1 Incorporating Entity-Specific Features  Our model as described above neuralizes the basic entity grid model that considers only entity transitions without distinguishing between types of the entities.", 
        "92": "However, as Elsner and Charniak (2011) pointed out entity-specific features could be crucial for modeling local coherence.", 
        "93": "One simple way to incorporate entity-specific features into our model is to attach the feature value (e.g., named entity type) with the grammatical role in the grid.", 
        "94": "4We set the stride size to be the same as the pooling length p to get non-overlapping regions.", 
        "95": "For example, if an entity ej of type PERSON appears as a subject (S) in sentence si, the grid entry Gi,j can be encoded as PERSON-S.  3.2 Training  Our neural model assigns a coherence score to an input document d based on the degree of local coherence observed in its entity grid G. Let y = \u03c6(G|\u03b8) define our model that transforms an input grid G to a coherence score y through a sequence of lookup, convolutional, pooling, and linear projection layers with parameter set \u03b8.", 
        "96": "The parameter set \u03b8 includes the embedding matrix E, the filter matrix W , the weight vector v, and the biases.", 
        "97": "We use a pairwise ranking approach (Collobert et al., 2011) to learn \u03b8.", 
        "98": "The training set comprises ordered pairs (di, dj), where document di exhibits a higher degree of coherence than document dj .", 
        "99": "As we will see in Section 4 such orderings can be obtained automatically or through manual annotation.", 
        "100": "In training, we seek to find \u03b8 that assigns a higher coherence score to di than to dj .", 
        "101": "We minimize the following ranking objective with respect to \u03b8:\nJ (\u03b8) = max{0, 1\u2212 \u03c6(Gi|\u03b8) + \u03c6(Gj |\u03b8)} (5)\nwhere Gi and Gj are the entity grids corresponding to documents di and dj , respectively.", 
        "102": "Notice that (also shown in Figure 2) the network shares its layers (and hence \u03b8) to obtain \u03c6(Gi|\u03b8) and \u03c6(Gj |\u03b8) from a pair of input grids (Gi, Gj).", 
        "103": "Barzilay and Lapata (2008) adopted a similar ranking criterion using an SVM preference kernel learner as they argue coherence assessment is best seen as a ranking problem as opposed to classification (coherent vs. incoherent).", 
        "104": "Also, the ranker gives a scoring function \u03c6 that a text generation system can use to compare alternative hypotheses.", 
        "105": "4 Evaluation Tasks  We evaluate the effectiveness of our coherence models on two different evaluation tasks: sentence ordering and summary coherence rating.", 
        "106": "4.1 Sentence Ordering  Following Elsner and Charniak (2011), we evaluate our models on two sentence ordering tasks: discrimination and insertion.", 
        "107": "In the discrimination task (Barzilay and Lapata, 2008), a document is compared to a random per-\nmutation of its sentences, and the model is considered correct if it scores the original document higher than the permuted one.", 
        "108": "We use 20 permutations of each document in the test set in accordance with previous work.", 
        "109": "In the insertion task (Elsner and Charniak, 2011), we evaluate models based on their ability to locate the original position of a sentence previously removed from a document.", 
        "110": "To measure this, each sentence in the document is removed in turn, and an insertion place is located for which the model gives the highest coherence score to the document.", 
        "111": "The insertion score is then computed as the average fraction of sentences per document reinserted in their actual position.", 
        "112": "Discrimination can be easier for longer documents, since a random permutation is likely to be different than the original one.", 
        "113": "Insertion is a much more difficult task since the candidate documents differ only by the position of one sentence.", 
        "114": "Dataset: For sentence ordering tasks, we use the Wall Street Journal (WSJ) portion of Penn Treebank, as used by Elsner and Charniak (2008, 2011); Lin et al.", 
        "115": "(2011); Feng et al.", 
        "116": "(2014).", 
        "117": "Table 1 gives basic statistics about the dataset.", 
        "118": "Following previous works, we use 20 random permutations of each article, and we exclude permutations that match the original document.5 The fourth column (# Pairs) in Table 1 shows the resulting number of (original, permuted) pairs used for training our model and for testing in the discrimination task.", 
        "119": "Some previous studies (Barzilay and Lapata, 2008; Li and Hovy, 2014) used the AIRPLANES and the EARTHQUAKES corpora, which contain reports on airplane crashes and earthquakes, respectively.", 
        "120": "Each of these corpora contains 100 articles for training and 100 articles for testing.", 
        "121": "The average number of sentences per article in these two corpora is 10.4 and 11.5, respectively.", 
        "122": "We preferred the WSJ corpus for several reasons.", 
        "123": "First and most importantly, the WSJ corpus is larger than other corpora (see Table 1).", 
        "124": "A large training set is crucial for learning effective\n5Short articles may produce many matches.", 
        "125": "deep learning models (Collobert et al., 2011), and a large enough test set is necessary to make a general comment about model performance.", 
        "126": "Second, as Elsner and Charniak (2011) pointed out, texts in AIRPLANES and EARTHQUAKES are constrained in style, whereas WSJ documents are more like normal informative articles.", 
        "127": "Third, we could reproduce results on this dataset for the competing systems (e.g., entity grid and its extensions) using the publicly available Brown coherence toolkit.6  4.2 Summary Coherence Rating  We further evaluate our models on the summary coherence rating task proposed by Barzilay and Lapata (2008), where we compare rankings given by a model to a pair of summaries against rankings elicited from human judges.", 
        "128": "Dataset: The summary dataset was extracted from the Document Understanding Conference (DUC\u201903), which contains 6 clusters of multidocument summaries produced by human experts and 5 automatic summarization systems.", 
        "129": "Each cluster has 16 summaries of a document with pairwise coherence rankings given by humans judges; see (Barzilay and Lapata, 2008) for details on the annotation method.", 
        "130": "There are 144 pairs of summaries for training and 80 pairs for testing.", 
        "131": "5 Experiments  In this section, we present our experiments \u2014 the models we compare, their settings, and the results.", 
        "132": "5.1 Models Compared  We compare our coherence model against a random baseline and several existing models.", 
        "133": "Random: The Random baseline makes a random decision for the evaluation tasks.", 
        "134": "Graph-based Model: This is the graph-based unsupervised model proposed by Guinaudeau and Strube (2013).", 
        "135": "We use the implementation from the cohere7 toolkit (Smith et al., 2016), and run it on the test set with syntactic projection (command line option \u2018projection=3\u2019) for graph construction.", 
        "136": "This setting yielded best scores for this model.", 
        "137": "Distributed Sentence Model: Li and Hovy (2014) proposed this neural model for measuring\n6https://bitbucket.org/melsner/browncoherence 7https://github.com/karins/CoherenceFramework\ntext coherence.", 
        "138": "The model first encodes each sentence in a document into a fixed-length vector using a recurrent or a recursive neural network.", 
        "139": "Then it computes the coherence score of the document by aggregating the scores estimated for each window of three sentences in the document.", 
        "140": "We used the implementation made publicly available by the authors.8 We trained the model on our WSJ corpus with 512, 1024 and 1536 minibatch sizes for a maximum of 25 epochs.9 The model that used minibatch size of 512 and completed 23 epochs achieved the best accuracy on the DEV set.", 
        "141": "We applied this model to get the scores on the TEST set.", 
        "142": "Grid-all nouns (E&C): This is the simple extension of the original entity grid model, where all nouns are considered as entities.", 
        "143": "Elsner and Charniak (2011) report significant gains by considering all nouns as opposed to only head-nouns.", 
        "144": "Results for this model were obtained by training the baseline entity grid model (command line option \u2018-n\u2019) in the Brown coherence toolkit on our dataset.", 
        "145": "Extended grid (E&C): This represents the extended entity grid model of Elsner and Charniak (2011) that uses 9 entity-specific features; 4 of them were computed from external corpora.", 
        "146": "This model considers all nouns as entities.", 
        "147": "For this system, we train the extended grid model (command line option \u2018-f\u2019) in the Brown coherence toolkit.", 
        "148": "Grid-CNN: This is our proposed neural extension of the basic entity grid (all nouns), where we only consider entity transitions as input.", 
        "149": "Extended Grid-CNN: This corresponds to our neural model that incorporates entity-specific features following the method described in Section 3.1.", 
        "150": "To keep the model simple, we include only three entity-specific features from (Elsner and Charniak, 2011) that are easy to compute and do not require any external corpus.", 
        "151": "The features are: (i) named entity type, (ii) salience as determined by occurrence frequency of the entity, and\n8http://cs.stanford.edu/ bdlijiwei/code/ 9Our WSJ corpus is about 14 times larger than their ACCIDENT or EARTHQUAKE corpus (1378 vs. 100 training articles), and the articles in our corpus are generally longer than the articles in their corpus (on average 22 vs. 10 sentences per article).", 
        "152": "Also, the vocabulary in our corpus is much larger than their vocabulary (45462 vs. 4758).", 
        "153": "Considering these factors and the fact that their Java-based implementation does not support GPU and parallelization, it takes quite long to train and to validate their model on our dataset.", 
        "154": "In our experiments, depending on the minibatch size, it took approximately 3-5 days to complete only one epoch of training!", 
        "155": "(iii) whether the entity has a proper mention.", 
        "156": "5.2 Settings for Neural Models  We held out 10% of the training documents to form a development set (DEV) on which we tune the hyper-parameters of our neural models.", 
        "157": "For discrimination and insertion tasks, the resulting DEV set contains 138 articles and 2,678 pairs after removing the permutations that match the original documents.", 
        "158": "For the summary rating task, DEV contains 14 pairs of summaries.", 
        "159": "We implement our models in Theano (Theano Development Team, 2016).", 
        "160": "We use rectified linear units (ReLU) as activations (f ).", 
        "161": "The embedding matrix is initialized with samples from uniform distribution U(\u22120.01, 0.01), and the weight matrices are initialized with samples from glorotuniform distribution (Glorot and Bengio, 2010).", 
        "162": "We train the models by optimizing the pairwise ranking loss in Equation 5 using the gradientbased online learning algorithm RMSprop with parameters (\u03c1 and ) set to the values suggested by Tieleman and Hinton (2012).10 We use up to 25 epochs.", 
        "163": "To avoid overfitting, we use dropout (Srivastava et al., 2014) of hidden units, and do early stopping by observing accuracy on the DEV set \u2013 if the accuracy does not increase for 10 consecutive epochs, we exit with the best model recorded so far.", 
        "164": "We search for optimal minibatch size in {16, 32, 64, 128}, embedding size in {80, 100, 200}, dropout rate in {0.2, 0.3, 0.5}, filter number in {100, 150, 200, 300}, window size in {2, 3, 4, 5, 6, 7, 8}, and pooling length in {3, 4, 5, 6, 7}.", 
        "165": "Table 2 shows the optimal hyperparameter setting for our models.", 
        "166": "The best model on DEV is then used for the final evaluation on the TEST set.", 
        "167": "We run each experiment five times, each time with a different random seed, and we report the average of the runs to avoid any randomness in results.", 
        "168": "Statistical significance tests are done using an approximate randomization test based on the accuracy.", 
        "169": "We used SIGF V.2 (Pado\u0301, 2006) with\n10Other adaptive algorithms, e.g., ADAM (Kingma and Ba, 2014), ADADELTA (Zeiler, 2012) gave similar results.", 
        "170": "10,000 iterations.", 
        "171": "5.3 Results on Sentence Ordering  Table 3 shows the results on discrimination and insertion tasks.", 
        "172": "The graph-based model gets the lowest scores.", 
        "173": "This is not surprising considering that this model works in an unsupervised way.", 
        "174": "The distributed sentence model surprisingly performed poorly on our dataset.", 
        "175": "Among the existing models, the grid models get the best scores on both tasks.", 
        "176": "This demonstrates that entity transition, as a method to capture local coherence, is more effective than the sentence representation method.", 
        "177": "Neuralization of the existing grid models yields significant improvements in most cases.", 
        "178": "The GridCNN model delivers absolute improvements of about 4% in discrimination and 1% in insertion over the basic grid model.", 
        "179": "When we compare our Extended Grid-CNN with its non-neural counterpart Extended Grid, we observe similar gains in discrimination and more gains (2.5%) in insertion.", 
        "180": "Note that the Extended Grid-CNN yields these improvements considering only a subset of the Extended Grid features.", 
        "181": "This demonstrates the effectiveness of distributed representation and convolutional feature learning method.", 
        "182": "Compared to the discrimination task, gain in the insertion task is less verbose.", 
        "183": "There could be two reasons for this.", 
        "184": "First, as mentioned before, insertion is a harder task than discrimination.", 
        "185": "Second, our models were not trained specifically on the insertion task.", 
        "186": "The model that is trained to distinguish an original document from its random permutation may learn features that are not specific enough to distinguish documents when only one sentence differs.", 
        "187": "In the future, it will be interesting\nto see how the model performs when it is trained on the insertion task directly.", 
        "188": "5.4 Results on Summary Coherence Rating  Table 4 presents the results on the summary coherence rating task, where we compare our models with the reported results of the graph-based method (Guinaudeau and Strube, 2013) and the initial entity grid model (Barzilay and Lapata, 2008) on the same experimental setting.11 The extended grid model does not use pairwise training, therefore could not be trained on the summarization dataset.", 
        "189": "Since there are not many training instances, our neural models may not learn well for this task.", 
        "190": "Therefore, we also present versions of our model, where we use pre-trained models from discrimination task on WSJ corpus (last two rows in the table ).", 
        "191": "The pre-trained models are then finetuned on the summary rating task.", 
        "192": "We can observe that even without pre-training our models outperform existing models, and pretraining gives further improvements.", 
        "193": "Specifically, Pre-trained Grid-CNN gives an improvement of 2.5% over the Grid model, and including entity features pushes the improvement further to 3.7%.", 
        "194": "6 Related Work  Barzilay and Lapata (2005, 2008) introduced the entity grid representation of discourse to model local coherence that captures the distribution of discourse entities across sentences in a text.", 
        "195": "They also introduced three tasks to evaluate the performance of coherence models: discrimination, summary coherence rating, and readability.", 
        "196": "11Since we do not have access to the output of their systems, we could not do a significance test for this task.", 
        "197": "A number of extensions of the basic entity grid model has been proposed.", 
        "198": "Elsner and Charniak (2011) included entity-specific features to distinguish between entities.", 
        "199": "Feng and Hirst (2012) used the basic grid representation, but improved its learning to rank scheme.", 
        "200": "Their model learns not only from original document and its permutations but also from ranking preferences among the permutations themselves.", 
        "201": "Guinaudeau and Strube (2013) convert a standard entity grid into a bipartite graph representing entity occurrences in sentences.", 
        "202": "To model local entity transition, the method constructs a directed projection graph representing the connection between adjacent sentences.", 
        "203": "Two sentences have a connected edge if they share at least one entity in common.", 
        "204": "The coherence score of the document is then computed as the average out-degree of sentence nodes.", 
        "205": "In addition, there are some approaches that model text coherence based on coreferences and discourse relations.", 
        "206": "Elsner and Charniak (2008) proposed the discourse-new model by taking into account mentions of all referring expression (i.e., NPs) whether they are first mention (discoursenew) or subsequent (discourse-old) mentions.", 
        "207": "Given a document, they run a maximum-entropy classifier to detect each NP as a label Lnp \u2208 {new, old}.", 
        "208": "The coherence score of the document is then estimated by \u220f np:NPs P (Lnp|np).", 
        "209": "In this work, they also estimate text coherence through pronoun coreference modeling.", 
        "210": "Lin et al.", 
        "211": "(2011) assume that a coherent text has certain discourse relation patterns.", 
        "212": "Instead of modeling entity transitions, they model discourse role transitions between sentences.", 
        "213": "In a follow up work, Feng et al.", 
        "214": "(2014) trained the same model but using features derived from deep discourse structures annotated with Rhetorical Structure Theory or RST (Mann and Thompson, 1988b) relations.", 
        "215": "Louis and Nenkova (2012) introduced a coherence model based on syntactic patterns in text by assuming that sentences in a coherent discourse should share the same structural syntactic patterns.", 
        "216": "In recent years, there has been a growing interest in neuralizing traditional NLP approaches \u2013 language modeling (Bengio et al., 2003), sequence tagging (Collobert et al., 2011), syntactic parsing (Socher et al., 2013), and discourse parsing (Li et al., 2014), etc.", 
        "217": "Following this tradition, in this paper we propose to neuralize the popular entity grid models.", 
        "218": "Li and Hovy (2014) also proposed a\nneural framework to compute the coherence score of a document by estimating coherence probability for every window of L sentences (in their experiments, L = 3).", 
        "219": "First, they use a recurrent or a recursive neural network to compute the representation for each sentence in L from its words and their pre-trained embeddings.", 
        "220": "Then the concatenated vector is passed through a non-linear hidden layer, and finally the output layer decides if the window of sentences is a coherent text or not.", 
        "221": "Our approach is fundamentally different from their approach; our model operates over entity grids, and we use convolutional architecture to model sufficiently long entity transitions.", 
        "222": "7 Conclusion and Future Work  We presented a local coherence model based on a convolutional neural network that operates over the distributed representation of entity transitions in the grid representation of a text.", 
        "223": "Our architecture can model sufficiently long entity transitions, and can incorporate entity-specific features without loosing generalization power.", 
        "224": "We described a pairwise ranking approach to train the model on a target task and learn task-specific features.", 
        "225": "Our evaluation on discrimination, insertion and summary coherence rating tasks demonstrates the effectiveness of our approach yielding the best results reported so far on these tasks.", 
        "226": "In future, we would like to include other sources of information in our model.", 
        "227": "Our initial plan is to include rhetorical relations, which has been shown to benefit existing grid models (Feng et al., 2014).", 
        "228": "We would also like to extend our model to other forms of discourse, especially, asynchronous conversations, where participants communicate with each other at different times (e.g., forum, email).", 
        "229": "Acknowledgments  We thank Regina Barzilay and Mirella Lapata for making their summarization data available and Micha Elsner for making his coherence toolkit publicly available.", 
        "230": "We also thank the three anonymous ACL reviewers and the program chairs for their insightful comments on the paper."
    }, 
    "document_id": "P17-1121.pdf.json"
}
