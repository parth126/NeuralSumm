{
    "abstract_sentences": {
        "1": "A critical task for question answering is the final answer selection stage, which has to combine multiple signals available about each answer candidate.", 
        "2": "This paper proposes EviNets: a novel neural network architecture for factoid question answering.", 
        "3": "EviNets scores candidate answer entities by combining the available supporting evidence, e.g., structured knowledge bases and unstructured text documents.", 
        "4": "EviNets represents each piece of evidence with a dense embeddings vector, scores their relevance to the question, and aggregates the support for each candidate to predict their final scores.", 
        "5": "Each of the components is generic and allows plugging in a variety of models for semantic similarity scoring and information aggregation.", 
        "6": "We demonstrate the effectiveness of EviNets in experiments on the existing TREC QA and WikiMovies benchmarks, and on the new Yahoo!", 
        "7": "Answers dataset introduced in this paper.", 
        "8": "EviNets can be extended to other information types and could facilitate future work on combining evidence signals for joint reasoning in question answering."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 299\u2013304 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-2047  1 Introduction  Most of the recent works in Question Answering (QA) have focused on the problem of semantic matching between a question and candidate answer sentences (He and Lin, 2016; Rao et al., 2016; Yang et al., 2016).", 
        "2": "The datasets used in these works, such as Answer Sentence Selection Dataset (Wang et al., 2007) and WikiQA (Yang et al., 2015), typically contain a relatively small set of sentences, and the task is to select those that state the answer to the question.", 
        "3": "However, for many questions, a single sentence does not pro-\nvide sufficient information, and it may not be reliable in isolation.", 
        "4": "At the same time, the redundancy of information in large corpora, such as the Web, has been shown useful to improve information retrieval approaches to QA (Clarke et al., 2001).", 
        "5": "This work focuses on factoid questions, which can be answered with an entity, i.e., an object in a Knowledge Base (KB) such as Freebase.", 
        "6": "Knowledge Base Question Answering (KBQA) techniques, such as Berant et al.", 
        "7": "(2013); Yih et al.", 
        "8": "(2015); Bast and Haussmann (2015), can be used to answer some of the user questions directly from a KB.", 
        "9": "However, KBs are inherently incomplete (Dong et al., 2014), and do not have sufficient information to answer many other questions (Fader et al., 2014).", 
        "10": "Previous, feature-engineering, approaches for combining different data sources to improve answer retrieval were shown to be quite effective for QA (Sun et al., 2015; Xu et al., 2016; Savenkov and Agichtein, 2016).", 
        "11": "Alternatively, Memory Networks (Sukhbaatar et al., 2015) and their extensions (Miller et al., 2016) use embeddings to represent relevant data as memories, and summarize them into a single vector, therefore losing information about answers provenances.", 
        "12": "In this paper, we introduce EviNets, a novel neural network architecture for factoid question answering, which provides a unified framework for aggregating evidence, supporting answer candidates.", 
        "13": "Given a question, EviNets retrieves a set of relevant pieces of information, e.g., sentences from a corpora or knowledge base triples, and extracts mentioned entities as candidate answers.", 
        "14": "All the evidence signals are then embedded into the same vector space, scored and aggregated using multiple strategies for each answer candidate.", 
        "15": "Experiments on the TREC QA, WikiMovies and new Yahoo!", 
        "16": "Answers datasets demonstrate the effectiveness of EviNets, and its ability to handle both unstructured text and structured KB triples.", 
        "17": "299\n2 EviNets Question Answering Model\nThe high level architecture of EviNets is illustrated in Figure 1.", 
        "18": "For a given question, we extract potentially relevant information, e.g., sentences from documents retrieved from text corpora using a search system.", 
        "19": "Next, we can use an entity linking system, such as TagMe (Ferragina and Scaiella, 2010), to identify entities mentioned in the extracted information, which become candidate answers.", 
        "20": "EviNets can further incorporate additional supporting evidence, e.g., textual description of candidate answer entities, and potentially useful KB triples, such as types (Sun et al., 2015).", 
        "21": "Finally, question, answer candidates and supporting evidence are given as input to the EviNets neural network.", 
        "22": "Let us denote a question by q, and {qt \u2208 R|V |}, as a one-hot encoding of its tokens from a fixed vocabulary V .", 
        "23": "ai is a candidate answer from the set A, and we will assume, that each answer is represented as a single entity.", 
        "24": "For each question, we have a fixed set E = Etext \u222a EKB of evidence statements e(i), i = 1..M , and their tokens e(i)t .", 
        "25": "A boolean function mention : A\u00d7E \u2192 {0, 1} provides the information about which answer candidates are mentioned in which evidences.", 
        "26": "Individual tokens qt, ai, e (i) t are translated into the embedding space using a matrix WD\u00d7 |V |, where D is the dimension of the embeddings, i.e., qemb,t = Wqt,\naemb,i = Wat and e (i) emb,t = We (i) t .", 
        "27": "In our experiments, we use the same matrix for questions, evidence, and answers.", 
        "28": "KB entities are considered to be individual tokens, while predicates and type names are tokenized into constituent words.", 
        "29": "2.1 Memory Matching Module  Evidence matching is responsible for estimating the relevance of each of the pieces of evidence to the question, i.e., we = softmax(match(q, e)).", 
        "30": "The function match(q, e) can be implemented using any of the recently proposed semantic similarity estimation architectures1.", 
        "31": "One of the simplest approaches is to average question and each evidence token embeddings and score the similarity using the dot product: qemb = 1Lq \u2211 t qemb,t and e(i)emb = 1 Le \u2211 t e (i) emb,t and match(q, e (i)) = qTemb \u00b7 e (i) emb.", 
        "32": "2.2 Evidence Aggregation Module  After all the evidence signals have been scored, EviNets aggregates the support for each answer candidate.", 
        "33": "Table 1 summarizes the evidence signals used.", 
        "34": "With these features, EviNets captures different aspects, i.e., how well individual sentences match the question, how frequently the candidate is mentioned and how well a set of answer\n1https://goo.gl/6gWrgA\nevidences covers the information requested in the question.", 
        "35": "2.3 Answer Scoring Module  Finally, EviNets uses the aggregated signals to predict the answer scores, to rank them, and to return the best candidate as the final answer to the question.", 
        "36": "For this purpose, we use two fully-connected neural network layers with the ReLU activation function, with 32 and 8 hidden units respectively.", 
        "37": "The model was trained end-to-end by optimizing the cross entropy loss function using the Adam algorithm (Kingma and Ba, 2014).", 
        "38": "3 Experimental Evaluation  To test our framework we used TREC QA (Sun et al., 2015), WikiMovies (Miller et al., 2016) benchmarks and the new Yahoo!", 
        "39": "Answers dataset2 derived from factoid questions posted on the CQA\n2available for research purposes at http://ir.mathcs.emory.edu/software-data/\nwebsite (Table 2).", 
        "40": "In all experiments, embeddings were initialized with 300-dimensional vectors pre-trained with Glove (Pennington et al., 2014).", 
        "41": "Embeddings for multi-word entity names were obtained by averaging the word vectors of constituent words.", 
        "42": "3.1 Baselines  As baselines for different experiments depending on availability and specifics of a dataset we considered the following methods: \u2022 IR-based QA systems: AskMSR (Brill et al.,\n2002) and AskMSR+ (Tsai et al., 2015), which select the best answer based on the frequency of entity mentions in retrieved text snippets.", 
        "43": "\u2022 KBQA systems: SemPre (Berant et al., 2013)\nand Aqqu (Bast and Haussmann, 2015), which identify possible topic entities of the question, and select the answer from the candidates in the neighborhood of these entities in a KB.", 
        "44": "\u2022 Hybrid system QuASE (Sun et al., 2015) de-\ntects mentions of knowledge base entities in text passages, and uses the types and description information from the KB to support answer selection.", 
        "45": "\u2022 Hybrid system Text2KB (Savenkov and\nAgichtein, 2016), which uses textual resources to improve different stages of the KBQA pipeline.", 
        "46": "\u2022 Memory Networks: MemN2N (Sukhbaatar\net al., 2015) and KV MemN2N (Miller et al., 2016) represent relevant information with embeddings, and summarize the memories into a single vector using the soft attention mechanism.", 
        "47": "Additionally, KV MemN2N splits memories into key-value pairs, where keys are used for matching against the question, and values are used to summarize the memories.", 
        "48": "3.2 TREC QA dataset  The TREC QA dataset is composed of factoid questions, which can be answered with an entity, and were used in TREC 8-12 question answering tracks.", 
        "49": "Similarly to Sun et al.", 
        "50": "(2015) we used web search (using the Microsoft Bing Web Search API) to retrieve top 50 documents, parsed them, extracted sentences and ranked them using tf-idf similarity to the question.", 
        "51": "To compare our results with the existing state-of-the-art, we used the same set of candidate entities as used by the QuASE model.", 
        "52": "We note that the extracted evidence differs between the models, and we were unable to match some of the candidates to our sentences.", 
        "53": "For text+kb experiment, just as QuASE, we used entity descriptions and types from Freebase knowledge base.", 
        "54": "Table 3 summarizes the results.", 
        "55": "EviNets achieves competitive results on the dataset, beating KV MemN2N by 13% in F1 score, and, unlike QuASE, does not rely on expensive feature engineering and does not require any external resources to train.", 
        "56": "3.3 WikiMovies dataset  The WikiMovies dataset contains questions in the movies domain along with relevant Wikipedia passages and OMDb knowledge base.", 
        "57": "Since KVMemN2N already achieves an almost perfect result answering the questions using the KB, we focus on using the provided movie articles from Wikipedia.", 
        "58": "We followed the preprocessing procedures described in Miller et al.", 
        "59": "(2016).", 
        "60": "Unlike TREC QA, where there are often multiple relevant supporting pieces of evidence, answers in the WikiMovies dataset usually have a single relevant sentence, which, however, mentions multi-\nple entities.", 
        "61": "To help the model distinguish the correct answer, and explore its abilities to encode structured and unstructured data, we generated additional entity type triples.", 
        "62": "For example, if an entity E appears as an object of the predicate directed by in OMDb, we added the [E, type, director] triple.", 
        "63": "As baselines, we used MemN2N and KV MemN2N models, and the results are presented in Table 4.", 
        "64": "As we can see, with the same setup using individual sentences as evidence/memories EviNets significantly outperforms the KV MemN2N model by 27%.", 
        "65": "It is important to emphasize that the best-reported results of memory networks were obtained using entitycentered windows as memories, which requires special pre-processing and increases the number of memories.", 
        "66": "Additionally, these models used all of the KB entities as candidate answers, whereas EviNets relies only on the mentioned ones, which is a more scalable scenario for open-domain question answering, where it is not realistic to score millions of candidate answers in real-time.", 
        "67": "3.4 Yahoo!", 
        "68": "Answers dataset  Yahoo!", 
        "69": "recently released a dataset with search queries, which lead to clicks on factoid Yahoo!", 
        "70": "Answers questions, identified as questions with the best answer containing less than 3 words and a Wikipedia page as the specified source of information3.", 
        "71": "This dataset contains 15K queries, which correspond to 4725 unique Yahoo!", 
        "72": "Answers questions (Table 2).", 
        "73": "We took these questions, and mapped answers to KB entities using the TagMe entity linking library (Ferragina and Scaiella, 2010).", 
        "74": "We filtered out questions, for\n3L27 dataset https://webscope.sandbox.yahoo.com\nwhich no answer entities with a good confidence4 were identified, e.g., date answers, and randomly split the rest into training, development and test sets, with 2711 questions in total.", 
        "75": "Similarly to the TREC QA experiments, we extracted textual evidence using Bing Web Search API, by retrieving top 50 relevant documents, extracting the main content blocks, and splitting them into sentences.", 
        "76": "We applied the TagMe entity linker to the extracted sentences, and considered all entities of mentions with the confidence score above the 0.2 threshold as candidate answers.", 
        "77": "For candidate entities we also retrieved relevant KB triples, such as entity types and descriptions, which extended the original pool of evidences.", 
        "78": "Table 5 summarizes the results of EviNets and some baseline methods on the created Yahoo!", 
        "79": "Answers dataset.", 
        "80": "As we can see, knowledge base data is not enough to answer most of these questions, and a state-of-the-art KBQA system Aqqu gets only 0.116 precision.", 
        "81": "Adding textual data helps significantly, and Text2KB improves the precision to 0.17, which roughly matches the results of the AskMSR system, that ranks candidate entities by their popularity in the retrieved documents.", 
        "82": "Using text along with KB evidence gave higher performance metrics, boosting F1 from 0.271 to 0.291.", 
        "83": "EviNets significantly improves over the baseline approaches, beating AskMSR by 28% and KV MemN2N by almost 80% in F1 score.", 
        "84": "4 Related Work  The success of deep neural network architectures in computer vision and NLP applications mo-\n4A minimum \u03c1 score of 0.2 from TagMe was required.", 
        "85": "tivated researchers to investigate applying these techniques for answer sentence selection, evaluated on TREC QA (Wang et al., 2007), WikiQA (Yang et al., 2015) and other datasets.", 
        "86": "A number of models proposed in recent years explore different ways of matching questions and answer sentences (He and Lin, 2016; Yang et al., 2016; Rao et al., 2016).", 
        "87": "Our EviNets architecture allows to easily plug these sentence matching networks into the evidence matching module, and provides the aggregation layer, which helps to make a decision based on all available information.", 
        "88": "Our evidence representation module is based on the ideas of memory networks (Sukhbaatar et al., 2015; Kumar et al., 2015; Miller et al., 2016), which also embed relevant information into a vector space.", 
        "89": "However, they use soft attention mechanism to retrieve the memories, and do not use links from memories to the corresponding answer candidates, which means that all relevant information is squeezed into a fixed dimensional vector.", 
        "90": "This limitation has been partially addressed in Wang et al.", 
        "91": "(2016) and Henaff et al.", 
        "92": "(2016), which accumulate evidence for each answer separately using a recurrent neural network.", 
        "93": "In contrast, the evidence aggregation in our EviNets model uses multiple different features, which is more flexible and can be extended with other signals.", 
        "94": "5 Conclusions  We presented EviNets, a neural network for question answering, which encodes and aggregates multiple evidence signals to select answers.", 
        "95": "Experiments on TREC QA, WikiMovies and Yahoo!", 
        "96": "Answers datasets demonstrate that EviNets can be trained end-to-end to use both the available textual and knowledge base information.", 
        "97": "EviNets improves over the baselines, both in cases when there are many or just a few relevant pieces of evidence, by helping build an aggregate picture and distinguish between candidates, mentioned together in a relevant memory, as is the case for WikiMovies dataset.", 
        "98": "The results of our experiments also demonstrate that EviNets can incorporate signals from different data sources, e.g., adding KB triples helps to improve the performance over text-only setup.", 
        "99": "As a limitation of this work and a direction for future research, EviNets could be extended to support dynamic evidence retrieval, which would allow retrieving additional answer candidates and evidence as needed."
    }, 
    "document_id": "P17-2047.pdf.json"
}
