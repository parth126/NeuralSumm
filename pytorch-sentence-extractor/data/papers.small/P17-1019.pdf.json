{
    "abstract_sentences": {
        "1": "Generating answer with natural language sentence is very important in real-world question answering systems, which needs to obtain a right answer as well as a coherent natural response.", 
        "2": "In this paper, we propose an end-to-end question answering system called COREQA in sequence-to-sequence learning, which incorporates copying and retrieving mechanisms to generate natural answers within an encoder-decoder framework.", 
        "3": "Specifically, in COREQA, the semantic units (words, phrases and entities) in a natural answer are dynamically predicted from the vocabulary, copied from the given question and/or retrieved from the corresponding knowledge base jointly.", 
        "4": "Our empirical study on both synthetic and realworld datasets demonstrates the efficiency of COREQA, which is able to generate correct, coherent and natural answers for knowledge inquired questions."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 199\u2013208 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1019  1 Introduction  Question answering (QA) systems devote to providing exact answers, often in the form of phrases and entities for natural language questions (Woods, 1977; Ferrucci et al., 2010; Lopez et al., 2011; Yih et al., 2015), which mainly focus on analyzing questions, retrieving related facts from text snippets or knowledge bases (KBs), and finally predicting the answering semantic units-SU (words, phrases and entities) through ranking (Yao and Van Durme, 2014) and reasoning (Kwok et al., 2001).", 
        "2": "However, in real-world environments, most people prefer the correct answer replied with a more natural way.", 
        "3": "For example, most existing\ncommercial products such as Siri1 will reply a natural answer \u201cJet Li is 1.64m in height.\u201d for the question \u201cHow tall is Jet Li?\u201d, rather than only answering one entity \u201c1.64m\u201d.", 
        "4": "Basic on this observation, we define the \u201cnatural answer\u201d as the natural response in our daily communication for replying factual questions, which is usually expressed in a complete/partial natural language sentence rather than a single entity/phrase.", 
        "5": "In this case, the system needs to not only parse question, retrieve relevant facts from KB but also generate a proper reply.", 
        "6": "To this end, most previous approaches employed message-response patterns.", 
        "7": "Figure 1 schematically illustrates the major steps and features in this process.", 
        "8": "The system first needs to recognize the topic entity \u201cJet Li\u201d in the question and then extract multiple related facts <Jet Li, gender, Male>, <Jet Li, birthplace, Beijing> and <Jet Li, nationality, Singapore> from KB.", 
        "9": "Based on the chosen facts and the commonly used messageresponse patterns \u201cwhere was %entity from?\u201d - \u201c%entity was born in %birthplace, %pronoun is %nationality citizen.\u201d2, the system could finally generate the natural answer (McTear et al., 2016).", 
        "10": "In order to generate natural answers, typical\n1http://www.apple.com/ios/siri/ 2In this pattern, %entity indicates the placeholder of the topic entity, %property indicates the property value of the topic entity.", 
        "11": "199\nproducts need lots of Natural Language Processing (NLP) tools and pattern engineering (McTear et al., 2016), which not only suffers from high costs of manual annotations for training data and patterns, but also have low coverage that cannot flexibly deal with variable linguistic phenomena in different domains.", 
        "12": "Therefore, this paper devotes to develop an end-to-end paradigm that generates natural answers without any NLP tools (e.g.", 
        "13": "POS tagging, parsing, etc.)", 
        "14": "and pattern engineering.", 
        "15": "This paradigm tries to consider question answering in an end-to-end framework.", 
        "16": "In this way, the complicated QA process, including analyzing question, retrieving relevant facts from KB, and generating correct, coherent, natural answers, could be resolved jointly.", 
        "17": "Nevertheless, generating natural answers in an end-to-end manner is not an easy task.", 
        "18": "The key challenge is that the words in a natural answer may be generated by different ways, including: 1) the common words usually are predicted using a (conditional) language model (e.g.", 
        "19": "\u201cborn\u201d in Figure 1); 2) the major entities/phrases are selected from the source question (e.g.", 
        "20": "\u201cJet Li\u201d); 3) the answering entities/phrases are retrieved from the corresponding KB (e.g.", 
        "21": "\u201cBeijing\u201d).", 
        "22": "In addition, some words or phrases even need to be inferred from related knowledge (e.g.", 
        "23": "\u201cHe\u201d should be inferred from the value of \u201cgender\u201d).", 
        "24": "And we even need to deal with some morphological variants (e.g.", 
        "25": "\u201cSingapore\u201d in KB but \u201cSingaporean\u201d in answer).", 
        "26": "Although existing end-to-end models for KB-based question answering, such as GenQA (Yin et al., 2016), were able to retrieve facts from KBs with neural models.", 
        "27": "Unfortunately, they cannot copy SUs from the question in generating answers.", 
        "28": "Moreover, they could not deal with complex questions which need to utilize multiple facts.", 
        "29": "In addition, existing approaches for conversational (Dialogue) systems are able to generate natural utterances (Serban et al., 2016; Li et al., 2016) in sequence-tosequence learning (Seq2Seq).", 
        "30": "But they cannot interact with KB and answer information-inquired questions.", 
        "31": "For example, CopyNet (Gu et al., 2016) is able to copy words from the original source in generating the target through incorporating copying mechanism in conventional Seq2Seq learning, but they cannot retrieve SUs from external memory (e.g.", 
        "32": "KBs, Texts, etc.).", 
        "33": "Therefore, facing the above challenges, this paper proposes a neural generative model called\nCOREQA with Seq2Seq learning, which is able to reply an answer in a natural way for a given question.", 
        "34": "Specifically, we incorporate COpying and REtrieving mechanisms within Seq2Seq learning.", 
        "35": "COREQA is able to analyze the question, retrieve relevant facts and generate a sequence of SUs using a hybrid method with a completely end-to-end learning framework.", 
        "36": "We conduct experiments on both synthetic data sets and real-world datasets, and the experimental results demonstrate the efficiency of COREQA compared with existing endto-end QA/Dialogue methods.", 
        "37": "In brief, our main contributions are as follows:\n\u2022 We propose a new and practical question answering task which devotes to generating natural answers for information inquired questions.", 
        "38": "It can be regarded as a fusion task of QA and Dialogue.", 
        "39": "\u2022 We propose a neural network based model, named as COREQA, by incorporating copying and retrieving mechanism in Seq2Seq learning.", 
        "40": "In our knowledge, it is the first end-to-end model that could answer complex questions in a natural way.", 
        "41": "\u2022 We implement experiments on both synthetic and real-world datasets.", 
        "42": "The experimental results demonstrate that the proposed model could be more effective for generating correct, coherent and natural answers for knowledge inquired questions compared with existing approaches.", 
        "43": "2 Background: Neural Models for Sequence-to-Sequence Learning    2.1 RNN Encoder-Decoder  Recurrent Neural Network (RNN) based EncoderDecoder is the backbone of Seq2Seq learning (Cho et al., 2014).", 
        "44": "In the Encoder-Decoder framework, an encoding RNN first transform a source sequential object X = [x1, ..., xLX ] into an encoded representation c. For example, we can utilize the basic model: ht = f(xt,ht\u22121); c = \u03c6(h1, ...,hLX ), where {ht} are the RNN hidden states, c is the context vector which could be assumed as an abstract representation of X .", 
        "45": "In practice, gated RNN variants such as LSTM (Hochreiter and Schmidhuber, 1997) and GRU (Chung et al., 2014) are commonly used for learning longterm dependencies.", 
        "46": "And the another encoding\ntricks is Bi-directional RNN, which connect two hidden states of positive time direction and negative time direction.", 
        "47": "Once the source sequence is encoded, another decoding RNN model is to generate a target sequence Y = [y1, ..., yLY ], through the following prediction model: st = f(yt\u22121, st\u22121, c); p(yt|y<t, X) = g(yt\u22121, st, c), where st is the RNN hidden state at time t, the predicted target word yt at time t is typically performed by a softmax classifier over a settled vocabulary (e.g.", 
        "48": "30,000 words) through function g.  2.2 The Attention Mechanism  The prediction model of classical decoders for each target word yi share the same context vector c. However, a fixed vector is not enough to obtain a better result on generating a long targets.The attention mechanism in the decoding can dynamically choose context ct at each time step (Bahdanau et al., 2014), for example, representing ct as the weighted sum of the source states {ht},\nct = \u2211LX\ni=1 \u03b1tihi; \u03b1ti = e\u03c1(st\u22121,hi)\u2211 i\u2032 e \u03c1(st\u22121,h\u2032i) (1)\nwhere the function \u03c1 use to compute the attentive strength with each source state, which usually adopts a neural network such as multi-layer perceptron (MLP).", 
        "49": "2.3 The Copying Mechanism  Seq2Seq learning heavily rely on the \u201cmeaning\u201d for each word in source and target sequences, however, some words in sequences are \u201cno-meaning\u201d symbols and it is improper to encode them in encoding and decoding processes.", 
        "50": "For example, generating the response \u201cOf course, read\u201d for replying the message \u201cCan you read the word \u2018read\u2019?\u201d should not consider the meaning of the second \u201cread\u201d.", 
        "51": "By incorporating the copying mechanism, the decoder could directly copy the sub-sequences of source into the target (Vinyals et al., 2015).", 
        "52": "The basic approach is to jointly predict the indexes of the target word in the fixed vocabulary and/or matched positions in the source sequences (Gu et al., 2016; Gulcehre et al., 2016).", 
        "53": "3 COREQA  To generate natural answers for information inquired questions, we should first recognize key topics in the question, then extract related facts from KB, and finally fusion those instance-level knowledge with some global-level \u201csmooth\u201d and \u201cglue\u201d words to generate a coherent reply.", 
        "54": "In this section, we present COREQA, a differentiable Seq2Seq model to generate natural answers, which is able to analyze the question, retrieve relevant facts and predict SUs in an end-to-end fashion, and the predicted SUs may be predicted from the vo-\ncabulary, copied from the given question, and/or retrieved from the corresponding KB.", 
        "55": "3.1 Model Overview  As illustrated in Figure 2, COREQA is an encoderdecoder framework plugged with a KB engineer.", 
        "56": "A knowledge retrieval module is firstly employed to retrieve related facts from KB by question analysis (see Section 3.2).", 
        "57": "And then the input question and the retrieved facts are transformed into the corresponding representations by Encoders (see Section 3.3).", 
        "58": "Finally, the encoded representations are feed to Decoder for generating the target natural answer (see Section 3.4).", 
        "59": "3.2 Knowledge (facts) Retrieval  We mainly focus on answering the information inquired questions (factual questions, and each question usually contains one or more topic entities).", 
        "60": "This paper utilizes the gold topic entities for simplifying our design.", 
        "61": "Given the topic entities, we retrieve the related facts from the corresponding KB.", 
        "62": "KB consists of many relational data, which usually are sets of inter-linked subject-propertyobject (SPO) triple statements.", 
        "63": "Usually, question contains the information used to match the subject and property parts in a fact triple, and answer incorporates the object part information.", 
        "64": "3.3 Encoder  The encoder transforms all discrete input symbols (including words, entities, properties and properties\u2019 values) and their structures into numerical representations which are able to feed into neural models (Weston et al., 2014).", 
        "65": "3.3.1 Question Encoding  Following (Gu et al., 2016), a bi-directional RNN (Schuster and Paliwal, 1997) is used to transform the question sequence into a sequence of concatenated hidden states with two independent RNNs.", 
        "66": "The forward and backward RNN respectively obtain {\u2212\u2192h 1, ..., \u2212\u2192 h LX} and { \u2190\u2212 h LX , ..., \u2190\u2212 h 1}.", 
        "67": "The concatenated representation is considered to be the short-term memory of question (MQ = {ht},ht = [ \u2212\u2192 h t, \u2190\u2212 h LX\u2212t+1]).", 
        "68": "q = [ \u2212\u2192 h LX , \u2190\u2212 h 1] is used to represent the entire question, which could be used to compute the similarity between the question and the retrieved facts.", 
        "69": "3.3.2 Knowledge Base Encoding  We use s, p and o denote the subject, property and object (value) of one fact f, and es, ep and eo to denote its corresponding embeddings.", 
        "70": "The fact representation f is then defined as the concatenation of es, ep and eo.", 
        "71": "The list of all related facts\u2019 representations, {f} = {f1, ..., fLF } (refer to MKB , LF denotes the maximum of candidate facts), is considered to be a short-term memory of KB while answering questions about the topic entities.", 
        "72": "In addition, given the distributed representation of question and candidate facts, we define the matching scores function between question and facts as S(q, fj) = DNN1(q, fj) = tanh(W2 \u00b7 tanh(W1 \u00b7[q, fj ]+b1)+b2), , whereDNN1 is the matching function defined by a two-layer perceptron, [\u00b7, \u00b7] denotes vector concatenation, and W1, W2, b1 and b2 are the learning parameters.", 
        "73": "In fact, we will make a slight change of the matching function because it will also depend on the state of decoding process at different times.", 
        "74": "The modified function is S(q, st, fj) = DNN1(q, st, fj) where st is the hidden state of decoder at time t.  3.4 Decoder  The decoder uses an RNN to generate a natural answer based on the short-term memory of question and retrieved facts which represented as MQ and MKB , respectively.", 
        "75": "The decoding process of COREQA have the following differences compared with the conventional decoder: Answer words prediction: COREQA predicts SUs based on a mixed probabilistic model of three modes, namely the predict-mode, the copy-mode and the retrieve-mode, where the first mode predicts words with the vocabulary, and the two latter modes pick SUs from the questions and matched facts, respectively; State update: the predicted word at step t \u2212 1 is used to update st, but COREQA uses not only its word embedding but also its corresponding positional attention informations in MQ and MKB ; Reading short-Memory MQ and MKB: MQ and MKB are fed into COREQA with two ways, the first one is the \u201cmeaning\u201d with embeddings and the second one is the positions of different words (properties\u2019 values).", 
        "76": "3.4.1 Answer Words Prediction  The generated words (entities) may come from vocabulary, source question and matched KB.", 
        "77": "Accordingly, our model use three correlative output\nlayer: shortlist prediction layer, question location copying layer and candidate-facts location retrieving layer, respectively.", 
        "78": "And we use the softmax classifier of the above three cascaded output layers to pick SUs.", 
        "79": "We assume a vocabulary V = {v1, ..., vN} \u222a {UNK}, where UNK indicates any out-of-vocabulary (OOV) words.", 
        "80": "Therefore, we have adopted another two set of SUs XQ and XKB which cover words/entities in the source question and the partial KB.", 
        "81": "That is, we have adopted the instance-specific vocabulary V \u222a XQ \u222a XKB for each question.", 
        "82": "It\u2019s important to note that these three vocabularies V , XQ and XKB may overlap.", 
        "83": "At each time step t in the decoding process, given the RNN state st together with MQ and MKB , the probabilistic function for generating any target SU yt is a \u201cmixture\u201d model as follow\np(yt|st, yt\u22121,MQ,MKB) = ppr(yt|st, yt\u22121, ct) \u00b7 pm(pr|st, yt\u22121)+ pco(yt|st, yt\u22121,MQ) \u00b7 pm(co|st, yt\u22121)+ pre(yt|st, yt\u22121,MKB) \u00b7 pm(re|st, yt\u22121)\n(2)\nwhere pr, co and re stand for the predict-mode, the copy-mode and the retrieve-mode, respectively, pm(\u00b7|\u00b7) indicates the probability model for choosing different modes (we use a softmax classifier with two-layer MLP).", 
        "84": "The probability of the three modes are given by\nppr(yt|\u00b7) = 1\nZ e\u03c8pr(yt)\npco(yt|\u00b7) = 1\nZ \u2211 j:Qj=yt e\u03c8co(yt)\npre(yt|\u00b7) = 1\nZ \u2211 j:KBj=yt e\u03c8re(yt)\n(3)\nwhere \u03c8pr(\u00b7), \u03c8co(\u00b7) and \u03c8re(\u00b7) are score functions for choosing SUs in predict-mode (from V), copy-mode (from XQ) and retrieve-mode (from XKB), respectively.", 
        "85": "And Z is the normalization term shared by the three modes, Z = e\u03c8pr(v) +\n\u2211 j:Qj=v e\u03c8co(v) + \u2211 j:KBj=v e\u03c8re(v).", 
        "86": "And the three modes could compete with each other through a softmax function in generating target SUs with the shared normalization term (as shown in Figure 2.", 
        "87": "Specifically, the scoring functions of each mode are defined as follows: Predict-mode: Some generated words need reasoning (e.g.", 
        "88": "\u201cHe\u201d in Figure 1) and morphological transformation (e.g.", 
        "89": "\u201cSingaporean\u201d in Figure 1).", 
        "90": "Therefore, we modify the function as \u03c8pr(yt = vi) = vTi Wpr[st, cqt , ckbt ] , where vi \u2208 Rdo is the\nword vector at the output layer (not the input word embedding), Wpr \u2208 R(dh+di+df )\u00d7do (di, dh and df indicate the size of input word vector, RNN decoder hidden state and fact representation respectively), and cqt and ckbt are the temporary memory of reading MQ and MKB at time t (see Section 3.4.3).", 
        "91": "Copy-mode: The score for \u201ccopying\u201d the word xj from question Q is calculated as \u03c8co(yt = xj) = DNN2(hj , st,histQ) , where DNN2 is a neural network function with a two-layer MLP and histQ \u2208 RLX is an accumulated vector which record the attentive history for each word in question (similar with the coverage vector in (Tu et al., 2016)).", 
        "92": "Retrieve-mode: The score for \u201cretrieving\u201d the entity word vj from retrieval facts (\u201cObject\u201d part) is calculated as \u03c8re(yt = vj) = DNN3(fj , st,histKB) , where DNN3 is also a neural network function and histKB \u2208 RLF is an accumulated vector which record the attentive history for each fact in candidate facts.", 
        "93": "3.4.2 State Update  In the generic decoding process, each RNN hidden state st is updated with the previous state st\u22121, the word embedding of previous predicted symbol yt\u22121, and an optional context vector ct (with attention mechanism).", 
        "94": "However, yt\u22121 may not come from vocabulary V and not owns a word vector.", 
        "95": "Therefore, we modify the state update process in COREQA.", 
        "96": "More specifically, yt\u22121 will be represented as concatenated vector of [e(yt\u22121), rqt\u22121 , rkbt\u22121 ], where e(yt\u22121) is the word embedding associated with yt\u22121, rqt\u22121 and rkbt\u22121 are the weighted sum of hidden states in MQ and MKB corresponding to yt\u22121 respectively.", 
        "97": "rqt = \u2211LX\nj=1 \u03c1tjhj , rkbt = \u2211LF j=1 \u03b4tjfj\n\u03c1tj =    1 K1 pco(xj |\u00b7), xj = yt\n0 otherwise\n\u03b4tj =    1 K2 pre(fj |\u00b7), object(fj) = yt\n0 otherwise\n(4)\nwhere object(f) indicate the \u201cobject\u201d part of fact f (see Figure 2), and K1 and K2 are the normalization terms which equal\n\u2211 j\u2032:x\u2032j=yt pco(x \u2032 j |\u00b7)\nand \u2211\nj\u2032:object(f \u2032j)=yt pre(f\n\u2032 j |\u00b7), respectively, and it\ncould consider the multiple positions matching yt in source question and KB.", 
        "98": "3.4.3 Reading short-Memory MQ and MKB COREQA employ the attention mechanism at decoding process.", 
        "99": "At each decoder time t, we selective read the context vector cqt and ckbt from the short-term memory of question MQ and retrieval facts MKB (alike to Formula 1).", 
        "100": "In addition, the accumulated attentive vectors histQ and histKB are able to record the positional information of SUs in the source question and retrieved facts.", 
        "101": "3.5 Training  Although some target SUs in answer are copied and retrieved from the source question and the external KB respectively, COREQA is fully differential and can be optimized in an end-to-end manner using back-propagation.", 
        "102": "Given the batches of the source questions {X}M and target answers {Y }M both expressed with natural language (symbolic sequences), the objective function is to minimize the negative log-likelihood:\nL = \u2212 1 N\nM\u2211\nk=1\nLY\u2211\nt=1\nlog[p(y (k) t |y (k) <t , X (k)] (5)\nwhere the superscript (k) indicates the index of one question-answer (Q-A) pair.", 
        "103": "The network is no need for any additional labels for training models, because the three modes sharing the same softmax classifier for predicting target words, they can learn to coordinate with each other by maximizing the likelihood of observed Q-A pairs.", 
        "104": "4 Experiments  In this section, we present our main experimental results in two datasets.", 
        "105": "The first one is a small synthetic dataset in a restricted domain (only involving four properties of persons) (Section 4.1).", 
        "106": "The second one is a big dataset in open domain, where the Q-A pairs are extracted from community QA website and grounded against a KB with an Integer Linear Programming (ILP) method (Section 4.2).", 
        "107": "COREQA and all baseline models are trained on a NVIDIA TITAN X GPU using TensorFlow3 tools, where we used the Adam (Kingma and Ba, 2014) learning rule to update gradients in all experimental configures.", 
        "108": "The sources codes and data will be\n3https://www.tensorflow.org/\nreleased at the personal homepage of the first author4.", 
        "109": "4.1 Natural QA in Restricted Domain  Task: The QA systems need to answer questions involving 4 concrete properties of birthdate (including year, month and day) and gender).", 
        "110": "Through merely involving 4 properties, there are plenty of QA patterns which focus on different aspects of birthdate, for example, \u201cWhat year were you born?\u201d touches on \u201cyear\u201d, but \u201cWhen is your birthday?\u201d touches on \u201cmonth and day\u201d.", 
        "111": "Dataset: Firstly, 108 different Q-A patterns have been constructed by two annotators, one in charge of raising question patterns and another one is responsible for generating corresponding suitable answer patterns, e.g.", 
        "112": "When is %e birthday?", 
        "113": "\u2192 She was born in %m %dth.", 
        "114": "where the variables %e, %y, %m, %d and %g (deciding she or he) indicates the person\u2019s name, birth year, birth month, birth day and gender, respectively.", 
        "115": "Then we randomly generate a KB which contains 80,000 person entities, and each entity including four facts.", 
        "116": "Given KB facts, we can finally obtain specific Q-A pairs.", 
        "117": "And the sampling KB, patterns, and the generated QA pairs are shown in Table 1.", 
        "118": "In order to maintain the diversity, we randomly select 6 patterns for each person.", 
        "119": "Finally, we totally obtain 239,934 sequences pairs (half patterns may be unmatched because of \u201cgender\u201d property).", 
        "120": "Experimental Setting: The total 239,934 Q-A pairs are split into training (90%) and testing set (10%).", 
        "121": "The baseline includes 1) generic RNN Encoder-Decoder (marked as RNN), 2) Seq2Seq with attention (marked as RNN+atten), 3) CopyNet, and 4) GenQA.", 
        "122": "For a fair comparison, we use bi-directional LSTM for encoder and another LSTM for decoder for all Seq2Seq models, with hidden layer size = 600 and word embedding dimen-\n4http://www.nlpr.ia.ac.cn/cip/shizhuhe/publications.html\nsion = 200.", 
        "123": "We set LF as 5.", 
        "124": "Metrics: We adopt (automatic evaluation (AE) to test the effects of different models.", 
        "125": "AE considers the precisions of the entire predicted answers and four specific properties, and the answer is complete correct only when all predicted properties\u2019 values is right.", 
        "126": "To measure the performance of the proposed method, we select following metrics, including Pg5, Py, Pm and Pd which denote the precisions for \u2018gender\u2019, \u2018year\u2019, \u2018month\u2019 and \u2018day\u2019 properties, respectively.", 
        "127": "And PA, RA and F1A indicate the precision, recall and F1 in the complete way.", 
        "128": "Experimental Results: The AE experimental results are shown in Table 2.", 
        "129": "It is very clear from Table 2 that COREQA significantly outperforms all other compared methods.", 
        "130": "The reason of the GenQA\u2019s poor performance is that all synthetic questions need multiple facts, and GenQA will \u201csafely\u201d choose the most frequent property (\u201cgender\u201d) for all questions.", 
        "131": "We also found the performances on \u201cyear\u201d and \u201cday\u201d have a little worse than other properties such as \u201cgender\u201d, it may because there have more ways to answer questions about \u201cyear\u201d and \u201cday\u201d.", 
        "132": "Discussion: Because of the feature of directly \u201chard\u201d copy and retrieve SUs from question and KB, COREQA could answer questions about unseen entities.To evaluate the effects of answering questions about unseen entities, we re-construct 2,000 new person entities and their corresponding facts about four known properties, and obtain 6,081 Q-A pairs through matching the sampling patterns mentioned above.", 
        "133": "The experimental results are shown in Table 3, it can be seen that the performance did not fall too much.", 
        "134": "5The \u201cgender\u201d is right when the entity name (e.g.", 
        "135": "\u2018e2\u2019) or the personal pronoun (e.g.", 
        "136": "\u2018She\u2019) in answer is correct.", 
        "137": "4.2 Natural QA in Open Domain  Task: To test the performance of the proposed approach in open domains, we modify the task of GenQA (Yin et al., 2016) for supporting multifacts (a typical example is shown in Figure 1).", 
        "138": "That is, a natural QA system should generate a sequence of SUs as the natural answer for a given natural language question through interacting with a KB.", 
        "139": "Dataset: GenQA have released a corpus6, which contains a crawling KB and a set of ground QA pairs.", 
        "140": "However, the original Q-A pairs only matched with just one single fact.", 
        "141": "In fact, we found that a lot of questions need more than one fact (about 20% based on sampling inspection).", 
        "142": "Therefore, we crawl more Q-A pairs from Chinese community QA website (Baidu Zhidao7).", 
        "143": "Combined with the originally published corpus, we create a lager and better-quality data for natural question answering.", 
        "144": "Specifically, an Integral Linear Programming (ILP) based method is employed to automatically construct \u201cgrounding\u201d Q-A pairs with the facts in KB (inspired by the work of adopting ILP to parse questions (Yahya et al., 2012)).", 
        "145": "In ILP, the main constraints and considered factors are listed below: 1) the \u201csubject\u201d entity and \u201cobject\u201d entity of a triple have to match with question words/phrases (marked as subject mention) and answer words/phrases (marked as object mention) respectively; 2) any two subject mentions or object mentions should not overlap; 3) a mention can match at most one entity; 4) the edit distance between the Q-A pair and the matched candidate fact (use a space to joint three parts) is smaller, they are more relevant.", 
        "146": "Finally, we totally obtain 619,199 instances (an instance contains a question, an answer, and multiple facts), and the number of instances that can match one and multiple facts in KB are 499,809 and 119,390, respectively.", 
        "147": "Through the evaluation of 200 sampling instances, we estimate that approximate 81% matched facts are helpful for the generating answers.", 
        "148": "However, strictly speaking, only 44% instances are truly correct grounding.", 
        "149": "In fact, grounding the Q-A pairs from community QA website is a very challenge problem, we will leave it in the future work.", 
        "150": "Experimental Setting: The dataset is split into training (90%) and testing set (10%).", 
        "151": "The sen-\n6https://github.com/jxfeb/Generative QA 7https://zhidao.baidu.com/\ntences in Chinese are segmented into word sequences with Jieba8 tool.", 
        "152": "And we use the words with the frequency larger than 3, which covering 98.4% of the word in the corpus.", 
        "153": "For a fair comparison, we use bi-directional LSTM for the encoder and another LSTM for decoder for all Seq2Seq models, with hidden layer size = 1024 and word embedding dimension = 300.", 
        "154": "We select CopyNet (more advanced Seq2Seq model) and GenQA for comparison.", 
        "155": "We set LF as 10.", 
        "156": "Metrics: Besides adopting the AE as a metric (same as GenQA (Yin et al., 2016)), we additionally use manual evaluation (ME) as another metric.", 
        "157": "ME considers three aspects about the quality of the generated answer (refer to (Asghar et al., 2016)): 1) correctness; 2) syntactical fluency; 3) coherence with the question.", 
        "158": "We employ two annotators to rate such three aspects of CopyNet, GenQA and COREQA.", 
        "159": "Specifically, we sample 100 questions, and conduct C23 = 3 pair-wise comparisons for each question and count the winning times of each model (comparisons may both win or both lose).", 
        "160": "Experimental Results: The AE and ME results are shown in Table 4 and Table 5, respectively.", 
        "161": "Meanwhile, we separately present the results according to the number of the facts which a question needs in KB, including just one single fact (marked as Single), multiple facts (marked as Multi) and all (marked as Mixed).", 
        "162": "In fact, we train two separate models for Single and Multi questions for the unbalanced data .", 
        "163": "From Table 4 and Table 5, we can clearly observe that COREQA significantly outperforms all other baseline models.", 
        "164": "And COREQA could generate a better natural answer in three aspects: correctness, fluency and coherence.", 
        "165": "CopyNet cannot interact with KB which is important to generate correct answers.", 
        "166": "For example, for \u201cWho is the director of The Little Chinese Seamstress?\u201d, if without the fact (The Little Chinese Seamstress, director, Dai Siji), QA systems cannot generate a correct answer.", 
        "167": "8https://github.com/fxsjy/jieba\nCase Study and Error Analysis: Table 6 gives some examples of generated by COREQA and the gold answers to the questions in test set.", 
        "168": "It is very clearly seen that the parts of generating SUs are predicted from the vocabulary, and other SUs are copied from the given question (marked as bold) and retrieved from the KB (marked as underline).", 
        "169": "And we analyze sampled examples and believe that there are several major causes of errors: 1) did not match the right facts (ID 6); 2) the generated answers contain some repetition of meaningless words (ID 7); 3) the generated answers are not coherence natural language sentences (ID 8).", 
        "170": "5 Related Work  Seq2Seq learning is to maximize the likelihood of predicting the target sequence Y conditioned on the observed source sequence X (Sutskever et al., 2014), which has been applied successfully to a large number of NLP tasks such as Machine Translation (Wu et al., 2016) and Dialogue (Vinyals and Le, 2015).", 
        "171": "Our work is partially inspired by the recent work of QA and Dialogue which have adopted Seq2Seq learning.", 
        "172": "CopyNet (Gu et al., 2016) and Pointer Networks (Vinyals et al., 2015; Gulcehre et al., 2016) which could incorporate copying mechanism in conventional Seq2Seq learning.", 
        "173": "Different from our application which deals with knowledge inquired questions and generates natural answers, CopyNet (Gu et al., 2016) and Pointer Networks (Gulcehre et al., 2016) can only copy words from the original input sequence.", 
        "174": "In contrast, COREQA is able to retrieve SUs from external memory.", 
        "175": "And GenQA (Yin et al., 2016) can only deal with the simple questions which could be answered by one fact, and it also did not incorporate the copying mechanism in Seq2Seq learning.", 
        "176": "Moreover, our work is also inspired by Neural Abstract Machine (Graves et al., 2016; Yin et al., 2015; Liang et al., 2016) which could retrieve facts from KBs with neural models.", 
        "177": "Unlike natural answer, Neural Abstract Machine (Mou et al., 2016) is concentrating on obtaining concrete answer en-\ntities with neural network based reasoning.", 
        "178": "6 Conclusion and Future Work  In this paper, we propose an end-to-end system to generate natural answers through incorporating copying and retrieving mechanisms in sequenceto-sequence learning.", 
        "179": "Specifically, the sequences of SUs in the generated answer may be predicted from the vocabulary, copied from the given question and retrieved from the corresponding KB.", 
        "180": "And the future work includes: a) lots of questions cannot be answered directly by facts in a KB (e.g.", 
        "181": "\u201cWho is Jet Li\u2019s father-in-law?\u201d), we plan to learn QA system with latent knowledge (e.g.", 
        "182": "KB embedding (Bordes et al., 2013)); b) we plan to adopt memory networks (Sukhbaatar et al., 2015) to encode the temporary KB for each question.", 
        "183": "Acknowledgments  The authors are grateful to anonymous reviewers for their constructive comments.", 
        "184": "The work was supported by the Natural Science Foundation of China (No.61533018) and the National High Technology Development 863 Program of China (No.2015AA015405)."
    }, 
    "document_id": "P17-1019.pdf.json"
}
