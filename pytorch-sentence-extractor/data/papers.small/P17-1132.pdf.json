{
    "abstract_sentences": {
        "1": "This paper focuses on how to take advantage of external knowledge bases (KBs) to improve recurrent neural networks for machine reading.", 
        "2": "Traditional methods that exploit knowledge from KBs encode knowledge as discrete indicator features.", 
        "3": "Not only do these features generalize poorly, but they require task-specific feature engineering to achieve good performance.", 
        "4": "We propose KBLSTM, a novel neural model that leverages continuous representations of KBs to enhance the learning of recurrent neural networks for machine reading.", 
        "5": "To effectively integrate background knowledge with information from the currently processed text, our model employs an attention mechanism with a sentinel to adaptively decide whether to attend to background knowledge and which information from KBs is useful.", 
        "6": "Experimental results show that our model achieves accuracies that surpass the previous state-of-the-art results for both entity extraction and event extraction on the widely used ACE2005 dataset."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 1436\u20131446 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1132  1 Introduction  Recurrent neural networks (RNNs), a neural architecture that can operate over text sequentially, have shown great success in addressing a wide range of natural language processing problems, such as parsing (Dyer et al., 2015), named entity recognition (Lample et al., 2016), and semantic role labeling (Zhou and Xu, 2015)).", 
        "2": "These neural networks are typically trained end-to-end where the input is only text or a sequence of words and a lot of background knowledge is disregarded.", 
        "3": "The importance of background knowledge in natural language understanding has long been recognized (Minsky, 1988; Fillmore, 1976).", 
        "4": "Earlier NLP systems mostly exploited restricted linguistic knowledge such as manually-encoded morphological and syntactic patterns.", 
        "5": "With the advanced development of knowledge base construction, large amounts of semantic knowledge become available, ranging from manually annotated semantic networks like WordNet 1 to semi-automatically or automatically constructed knowledge graphs like DBPedia 2 and NELL 3.", 
        "6": "While traditional approaches have exploited the use of these knowledge bases (KBs) in NLP tasks (Ratinov and Roth, 2009; Rahman and Ng, 2011; Nakashole and Mitchell, 2015), they require a lot of task-specific engineering to achieve good performance.", 
        "7": "One way to leverage KBs in recurrent neural networks is by augmenting the dense representations of the networks with the symbolic features derived from KBs.", 
        "8": "This is not ideal as the symbolic features have poor generalization ability.", 
        "9": "In addition, they can be highly sparse, e.g., using WordNet synsets can easily produce millions of indicator features, leading to high computational cost.", 
        "10": "Furthermore, the usefulness of knowledge features varies across contexts, as general KBs involve polysemy, e.g., \u201cClinton\u201d can refer to a person or a town.", 
        "11": "Incorporating KBs irrespective of the textual context could mislead the machine reading process.", 
        "12": "Can we train a recurrent neural network that learns to adaptively leverage knowledge from KBs to improve machine reading?", 
        "13": "In this paper, we propose KBLSTM, an extension to bidirec-\n1https://wordnet.princeton.edu 2http://wiki.dbpedia.org/ 3http://rtw.ml.cmu.edu/rtw/kbbrowser/\n1436\ntional Long Short-Term Memory neural networks (BiLSTMs) (Hochreiter and Schmidhuber, 1997; Graves et al., 2005) that is capable of leveraging symbolic knowledge from KBs as it processes each word in the text.", 
        "14": "At each time step, the model retrieves KB concepts that are potentially related to the current word.", 
        "15": "Then, an attention mechanism is employed to dynamically model their semantic relevance to the reading context.", 
        "16": "Furthermore, we introduce a sentinel component in BiLSTMs that allows flexibility in deciding whether to attend to background knowledge or not.", 
        "17": "This is crucial because in some cases the text context should override the context-independent background knowledge available in general KBs.", 
        "18": "In this work, we leverage two general, readily available knowledge bases: WordNet (WordNet, 2010) and NELL (Mitchell et al., 2015).", 
        "19": "WordNet is a manually created lexical database that organizes a large number of English words into sets of synonyms (i.e.", 
        "20": "synsets) and records conceptual relations (e.g., hypernym, part of) among them.", 
        "21": "NELL is an automatically constructed webbased knowledge base that stores beliefs about entities.", 
        "22": "It is organized based on an ontology of hundreds of semantic categories (e.g., person, fruit, sport) and relations (e.g., personPlaysInstrument).", 
        "23": "We learn distributed representations (i.e., embeddings) of WordNet and NELL concepts using knowledge graph embedding methods.", 
        "24": "We then integrate these learned embeddings with the state vectors of the BiLSTM network to enable knowledge-aware predictions.", 
        "25": "We evaluate the proposed model on two core information extraction tasks: entity extraction and event extraction.", 
        "26": "For entity extraction, the model needs to recognize all mentions of entities such as person, organization, location, and other things from text.", 
        "27": "For event extraction, the model is required to identify event mentions or event triggers4 that express certain types of events, e.g., elections, attacks, and travels.", 
        "28": "Both tasks are challenging and often require the combination of background knowledge and the text context for accurate prediction.", 
        "29": "For example, in the sentence \u201cMaigret left viewers in tears.\u201d, knowing that \u201cMaigret\u201d can refer to a TV show can greatly help disambiguate its meaning.", 
        "30": "However, knowledge bases\n4An event also consists of participants whose types depend on the event triggers.", 
        "31": "In this work, we focus on predicting event triggers and leave the prediction of event participants for future work.", 
        "32": "may hurt performance if used blindly.", 
        "33": "For example, in the sentence \u201cSantiago is charged with murder.\u201d, methods that rely heavily on KBs are likely to interpret \u201cSantiago\u201d as a location due to the popular use of Santiago as a city.", 
        "34": "Similarly for events, the same word can trigger different types of events, for example, \u201crelease\u201d can be used to describe different events ranging from book publishing to parole.", 
        "35": "It is important for machine learning models to learn to decide which knowledge from KBs is relevant given the context.", 
        "36": "Extensive experiments demonstrate that our KBLSTM models effectively leverage background knowledge from KBs in training BiLSTM networks for machine reading.", 
        "37": "They achieve significant improvement on both entity and event extraction compared to traditional feature-based methods and LSTM networks that disregard knowledge in KBs, resulting in new state-of-the-art results for entity extraction and event extraction on the widely used ACE2005 dataset.", 
        "38": "2 Related Work  Essential to RNNs\u2019 success on natural language processing is the use of Long Short-Term Memory neural networks (Hochreiter and Schmidhuber, 1997) (LSTMs) or Gated Recurrent Unit (Cho et al., 2014) (GRU) as they are able to handle longterm dependencies by adaptively memorizing values for either long or short durations.", 
        "39": "Their bidirectional variants BiLSTM (Graves et al., 2005) or BiGRU further allow the incorporation of both past and future information.", 
        "40": "Such ability has been shown to be generally helpful in various NLP tasks such as named entity recognition (Huang et al., 2015; Chiu and Nichols, 2016; Ma and Hovy, 2016), semantic role labeling (Zhou and Xu, 2015), and reading comprehension (Hermann et al., 2015; Chen et al., 2016).", 
        "41": "In this work, we also employ the BiLSTM architecture.", 
        "42": "In parallel to the development for text processing, neural networks have been successfully used to learn distributed representations of structured knowledge from large KBs (Bordes et al., 2011, 2013; Socher et al., 2013; Yang et al., 2015; Guu et al., 2015).", 
        "43": "Embedding the symbolic representations into continuous space not only makes KBs more easy to use in statistical learning approaches, but also offers strong generalization ability.", 
        "44": "Many attempts have been made on connecting distributed representations of KBs with text in the\ncontext of knowledge base completion (Lao et al., 2011; Gardner et al., 2014; Toutanova et al., 2015), relation extraction (Weston et al., 2013; Chang et al., 2014; Riedel et al., 2013), and question answering (Miller et al., 2016).", 
        "45": "However, these approaches model text using shallow representations such as subject/relation/object triples or bag of words.", 
        "46": "More recently, Ahn et al.", 
        "47": "(2016) proposed a neural knowledge language model that leverages knowledge bases in RNN language models, which allows for better representations of words for language modeling.", 
        "48": "Unlike their work, we leverage knowledge bases in LSTMs and applies it to information extraction.", 
        "49": "The architecture of our KBLSTM model draws on the development of attention mechanisms that are widely employed in tasks such as machine translation (Bahdanau et al., 2015) and image captioning (Xu et al., 2015).", 
        "50": "Attention allows the neural networks to dynamically attend to salient features of the input.", 
        "51": "With a similar motivation, we employ attention in KBLSTMs to allow for dynamic attention to the relevant knowledge given the text context.", 
        "52": "Our model is also closely related to a recent model of caption generation introduced by Lu et al.", 
        "53": "(2017), where a visual sentinel is introduced to allow the decoder to decide whether to attend to image information when generating the next word.", 
        "54": "In our model, we introduce a sentinel to control the tradeoff between background knowledge and information from the text.", 
        "55": "3 Method  In this section, we present our KBLSTM model.", 
        "56": "We first describe several basic recurrent neural network frameworks for machine reading, including basic RNNs, LSTMs, and bidirectional LSTMs (Sec.", 
        "57": "\u00a7 3.1).", 
        "58": "We then introduce our extension to bidirectional LSTMs that allows for the incorporation of KB information at each time step of reading (Sec.", 
        "59": "\u00a7 3.2).", 
        "60": "The KB information is encoded using continuous representations (i.e., embeddings) which are learned using knowledge embedding methods (Sec.", 
        "61": "\u00a7 3.3).", 
        "62": "3.1 RNNs, LSTMs, and Bidirectional LSTMs  RNNs are a class of neural networks that take a sequence of inputs and compute a hidden state vector at each time step based on the current input and the entire history of inputs.", 
        "63": "The hidden state vector can be computed recursively using the following\nequation (Elman, 1990):\nht = F (Wht\u22121 +Uxt)\nwhere xt is the input at time step t, ht is the hidden state at time step t, U and W are weight matrices, and F is a nonlinear function such as tanh or ReLu.", 
        "64": "Depending on the applications, RNNs can produce outputs based on the hidden state of each time step or just the last time step.", 
        "65": "A Long Short-Term Memory network (Hochreiter and Schmidhuber, 1997) (LSTM) is a variant of RNNs which was design to better handle cases where the output at time t depends on much earlier inputs.", 
        "66": "It has a memory cell and three gating units: an input gate that controls what information to add to the current memory, a forget gate which controls what information to remove from the previous memory, and an output gate which controls what information to output from the current memory.", 
        "67": "Each gate is implemented as a logistic function \u03c3 that takes as input the previous hidden state and the current input, and outputs values between 0 and 1.", 
        "68": "Multiplication with these values controls the flow of information into or out of the memory.", 
        "69": "In equations, the updates at each time step t are:\nit = \u03c3(Wiht\u22121 +Uixt)\nft = \u03c3(Wfht\u22121 +Ufxt)\not = \u03c3(Woht\u22121 +Uoxt)\nct = ft ct\u22121 + it tanh(Wcht\u22121 +Ucxt) ht = ot tanh(ct)\nwhere it is the input gate, ft is the forget gate, ot is the output gate, ct is the memory cell, and ht is the hidden state.", 
        "70": "denotes element-wise multiplication.", 
        "71": "Wi,Ui,Wf ,Uf ,Wo,Uo,Wc,Uc are weight matrices to be learned.", 
        "72": "Bidirectional LSTMs (Graves et al., 2005) (BiLSTMs) are essentially a combination of two LSTMs in two directions: one operates in the forward direction and the other operates in the backward direction.", 
        "73": "This leads to two hidden states\u2212\u2192 ht and \u2190\u2212 ht at time step t, which can be viewed as a summary of the past and the future respectively.", 
        "74": "Their concatenation ht = [ \u2212\u2192 ht; \u2190\u2212 ht] provides a whole summary of the information about the input around time step t. Such property is attractive in NLP tasks, since information of both previous words and future words can be helpful for interpreting the meaning of the current word.", 
        "75": "3.2 Knowledge-aware Bidirectional LSTMs  Our model (referred to as KBLSTM) extends BiLSTMs to allow flexibility in incorporating symbolic knowledge from KBs.", 
        "76": "Instead of encoding knowledge as discrete features, we encode it using continuous representations.", 
        "77": "Concretely, we learn embeddings of concepts in KBs using a knowledge graph embedding method.", 
        "78": "(We will describe the details in Section \u00a7 3.3).", 
        "79": "The KBLSTM model then retrieves the embeddings of candidate concepts that are related to the current word being processed and integrates them into its state vector to make knowledge-aware predictions.", 
        "80": "Figure 1 depicts the architecture of our model.", 
        "81": "The core of our model is the knowledge module, which is responsible for transferring background knowledge into the BiLSTMs.", 
        "82": "The knowledge at time step t consists of candidate KB concepts V (xt) for input xt.", 
        "83": "(We will describe how to obtain the candidate KB concepts from NELL and WordNet in Section \u00a7 3.3).", 
        "84": "Each candidate KB concept i \u2208 V (xt) is associated with a vector embedding vi.", 
        "85": "We compute an attention weight \u03b1ti for concept vector vi via a bilinear operator, which reflects how relevant or important concept i is to the current reading context ht:\n\u03b1ti \u221d exp(vTi Wvht) (1)\nwhere Wv is a parameter matrix to be learned.", 
        "86": "Note that the candidate concepts in some cases are misleading.", 
        "87": "For example, a KB may store the fact that \u201cSantiago\u201d is a city but miss the fact that it can also refer to a person.", 
        "88": "Incorporating such knowledge in the sentence \u201cSantiago is charged with murder.\u201d could be misleading.", 
        "89": "To address this issue, we introduce a knowledge sentinel that records the information of the current context and use a mixture model to allow for better tradeoff between the impact of background knowledge and information from the context.", 
        "90": "Specifically, we compute a sentinel vector st as:\nbt = \u03c3(Wbht\u22121 +Ubxt) (2)\nst = bt tanh(ct) (3) where Wb and Ub are weight parameters to be learned.", 
        "91": "The weight on the local context is computed as: \u03b2t \u221d exp(sTt Wsht) (4) where Ws is a parameter matrix to be learned.", 
        "92": "The mixture model is defined as:\nmt = \u2211\ni\u2208V (xt) \u03b1tivi + \u03b2tst (5)\nwhere \u2211\ni\u2208V (xt) \u03b1ti+\u03b2t = 1. mt can be viewed as a knowledge state vector that encodes external KB information with respect to the input at time t. We combine it with the state vector ht of BiLSTMs to obtain a knowledge-aware state vector h\u0302t:\nh\u0302t = ht +mt (6)\nIf V (xt) = \u2205, we set mt = 0. h\u0302t can be used for predictions in the same way as the original state vector ht (see Section \u00a7 4 for details).", 
        "93": "3.3 Embedding Knowledge Base Concepts  Now we describe how to learn embeddings of concepts in KBs.", 
        "94": "We consider two KBs: WordNet and NELL, which are both knowledge graphs that can be stored in the form of RDF5 triples.", 
        "95": "Each triple consists of a subject entity, a relation, and an object entity.", 
        "96": "Examples of triples in WordNet are (location, hypernym of, city), and (door, has part, lock), where both the subject and object entities are synsets in WordNet.", 
        "97": "Examples of triples in NELL are (New York, located in, United States)\n5https://www.w3.org/TR/rdf11-concepts/\nand (New York, is a, city), where the subject entity is a noun phrase that can refer to a real-world entity and the object entity can be either a noun phrase entity or a concept category.", 
        "98": "In this work, we refer to the synsets in WordNet and the concept categories in NELL as KB concepts.", 
        "99": "They are the key components of the ontologies and provide generally useful information for language understanding.", 
        "100": "As our KBLSTM model reads through each word in a sentence, it retrieves knowledge from NELL by searching for entities with the current word and collecting the related concept categories as candidate concepts; and it retrieves knowledge from WordNet by treating the synsets of the current word as candidate concepts.", 
        "101": "We employ a knowledge graph embedding approach to learn the representations of the candidate concepts.", 
        "102": "Denote a KB triple as (e1, r, e2), we want to learn embeddings of the subject entity e1, the object entity e2, and the relation r, so that the relevance of the triple can be measured by a scoring function based on the embeddings.", 
        "103": "We employ the BILINEAR model described in (Yang et al., 2015).6 It computes the score of a triple (e1, r, e2) via a bilinear function: S(e1,r,e2) = v T e1Mrve2 , where ve1 and ve2 are vector embeddings for e1 and e2 respectively, and Mr is a relation-specific embedding matrix.", 
        "104": "We train the embeddings using the max-margin ranking objective:\n\u2211\nq=(e1,r,e2)\u2208T\n\u2211\nq\u2032=(e1,r,e\u20322)\u2208T \u2032 max{0, 1\u2212 Sq + Sq\u2032}\n(7) where T denotes the set of triples in the KB and T \u2032 denotes the \u201cnegative\u201d triples that are not observed in the KB.", 
        "105": "For WordNet, we train the concept embeddings using the preprocessed data provided by (Bordes et al., 2013), which contains 151,442 triples with 40,943 synsets and 18 relations.", 
        "106": "We use the same data splits for training, development, and testing.", 
        "107": "During training, we use AdaGrad (Duchi et al., 2011) to optimize objective 7 with an initial learning rate of 0.05 and a mini-batch size of 100.", 
        "108": "At each gradient step, we sample 10 negative object entities with respect to the positive triple.", 
        "109": "Our implementation of the BILINEAR model achieves top-10 accuracy of 91% for predicting missing ob-\n6We also experimented with TransE (Bordes et al., 2013) and NTN (Socher et al., 2013), and found that they perform significantly worse than the Bilinear method, especially on predicting the \u201cis a\u201d facts in NELL.", 
        "110": "ject entities on the WordNet test set, which is comparable with previous work (Yang et al., 2015).", 
        "111": "For NELL, we train the concept embeddings using a subset of the NELL data7.", 
        "112": "We filter noun phrases with annotation confidence less than 0.9 in order to remove erroneous labels introduced during the automatic construction of NELL (Wijaya, 2016).", 
        "113": "This results in 180,107 noun phrases and 258 concept categories in total.", 
        "114": "We randomly split 80% of the data for training, 10% for development and 10% for testing.", 
        "115": "For each training example, we enumerate all the unobserved concept categories as negative labels.", 
        "116": "Instead of treating each entity as a unit, we represent it as an average of its constituting word vectors concatenated with its head word vector.", 
        "117": "The word vectors are initialized with pre-trained paraphrastic embeddings (Wieting et al., 2015) and fine-tuned during training.", 
        "118": "Using the same optimization parameters as before, the BILINEAR model achieves 88% top-1 accuracy for predicting concept categories of given noun phrases on the test set.", 
        "119": "4 Experiments    4.1 Entity Extraction  We first apply our model to entity extraction, a task that is typically addressed by assigning each word/token BIO labels (Begin, Inside, and Outside) (Ratinov and Roth, 2009) indicating the token\u2019s position within an entity mention as well as its entity type.", 
        "120": "To allow tagging over phrases instead of words, we address entity extraction in two steps.", 
        "121": "The first step detects mention chunks, and the second step assigns entity type labels to mention chunks (including an O type indicating other types).", 
        "122": "In the first stage, we train a BiLSTM network with a conditional random field objective (Huang et al., 2015) using gold-standard BIO labels regardless of entity types, and only predict each token\u2019s position within an entity mention.", 
        "123": "This produces a sequence of chunks for each sentence.", 
        "124": "In the second stage, we train another supervised BiLSTM model to predict type labels for the previously extracted chunks.", 
        "125": "Each chunk is treated as a unit input to the BiLSTMs and the input vector is computed by averaging the input vectors of individual words within the chunk concatenated with its head word vector.", 
        "126": "The BiLSTMs can be trained\n7http://rtw.ml.cmu.edu/rtw/resources\nwith a softmax objective that minimizes the crossentropy loss for each individual chunk.", 
        "127": "It computes the probability of the correct type for each chunk:\npyt = exp(wTytht)\u2211 y\u2032t exp(wT y\u2032t ht)\n(8)\nThe BiLSTMs can also be trained with a CRF objective (referred to as BiLSTM-CRF) that minimizes the negative log-likelihood for the entire sequence.", 
        "128": "It computes the probability of the correct types for a sequence of chunks:\npy = exp(g(x,y))\u2211 y\u2032 exp(g(x,y \u2032)) (9)\nwhere g(x,y) = \u2211l t=1 Pt,yt + \u2211l\nt=0Ayt,yt+1 , Pt,yt = w T ytht is the score of assigning the t-th chunk with tag yt and Ayt,yt+1 is the score of transitioning from tag yt to yt+1.", 
        "129": "By replacing ht in Eq.", 
        "130": "8 and Eq.", 
        "131": "9 with the knowledge-aware state vector h\u0302t (Eq.", 
        "132": "6), we can compute the objective for KBLSTM and KBLSTM-CRF respectively.", 
        "133": "4.1.1 Implementation Details  We evaluate our models on the ACE2005 corpus (LDC, 2005) and the OntoNotes 5.0 corpus (Hovy et al., 2006) for entity extraction.", 
        "134": "Both datasets consist of text from a variety of sources such as newswire, broadcast conversations, and web text.", 
        "135": "We use the same data splits and task settings for ACE2005 as in Li et al.", 
        "136": "(2014) and for OntoNotes 5.0 as in Durrett and Klein (2014).", 
        "137": "At each time step, our models take as input a word vector and a capitalization feature (Chiu and Nichols, 2016).", 
        "138": "We initialize the word vectors using pretrained paraphrastic embeddings (Wieting et al., 2015), as we find that they significantly outperforms randomly initialized embeddings.", 
        "139": "The word embeddings are fine-tuned during training.", 
        "140": "For the KBLSTM models, we obtain the embeddings of KB concepts from NELL and WordNet as described in Section \u00a7 3.3.", 
        "141": "These embeddings are kept fix during training.", 
        "142": "We implement all the models using Theano on a single GPU.", 
        "143": "We update the model parameters on every training example using Adam with default settings (Kingma and Ba, 2014) and apply dropout to the input layer of the BiLSTM with a rate of 0.5.", 
        "144": "The word embedding dimension is set to 300 and the hidden vector dimension is set to 100.", 
        "145": "We train models on ACE2005 for about 5 epochs and\non OntoNotes 5.0 for about 10 epochs with early stopping based on development results.", 
        "146": "For each experiment, we report the average results over 10 random runs.", 
        "147": "We also apply the Wilcoxon rank sum test to compare our models with the baseline models.", 
        "148": "4.1.2 Results  We compare our KBLSTM and KBLSTM-CRF models with the following baselines: BiLSTM, a vanilla BiLSTM network trained using the same input, and BiLSTM-Fea, a BiLSTM network that combines its hidden state vector with discrete KB features (i.e., indicators of candidate KB concepts) to produce the final state vector.", 
        "149": "We also include their variants BiLSTM-CRF and BiLSTMFea-CRF, which are trained using the CRF objective instead of the standard softmax objective.", 
        "150": "We first report results on entity extraction with gold-standard boundaries for multi-word mentions.", 
        "151": "This allows us to focus on the performance of entity type prediction without considering mention boundary errors and the noise they introduce in retrieving candidate KB concepts.", 
        "152": "Table 1 shows the results.8 We find that the CRF objective generally outperforms the softmax objective.", 
        "153": "Our KBLSTM-CRF model significantly improves over its counterpart BiLSTM-Fea-CRF.", 
        "154": "This demonstrates the effectiveness of KBLSTM architecture in leveraging KB information.", 
        "155": "Table 2 breaks down the results of the KBLSTM-CRF and the BiLSTM-Fea-CRF using different KB settings.", 
        "156": "We find that the KBLSTMCRF outperforms the BiLSTM-Fea-CRF in all the settings and that incorporating both KBs leads to the best performance.", 
        "157": "Next, we evaluate our models on entity extraction with predicted mention boundaries.", 
        "158": "We first train a BiLSTM-CRF to perform mention\n8\u2217 indicates p < 0.05 when comparing to the BiLSTMbased models.", 
        "159": "chunking using the same setting as described in Section 4.1.1.", 
        "160": "We then treat the predicted chunks as units for entity type labeling.", 
        "161": "Table 3 reports the full entity extraction results on the ACE2005 test set.", 
        "162": "We compare our models with the state-of-the-art feature-based linear models Li et al.", 
        "163": "(2014), Yang and Mitchell (2016), and the recently proposed sequence- and tree-structured LSTMs (Miwa and Bansal, 2016).", 
        "164": "Interestingly, we find that using BiLSTM-CRF without any KB information already gives strong performance compared to previous work.", 
        "165": "The KBLSTM-CRF model demonstrates the best performance among all the models and achieves the new state-of-theart performance on the ACE2005 dataset.", 
        "166": "We also report the entity extraction results on the OntoNotes 5.0 test set in Table 4.", 
        "167": "We compare our models with the existing feature-based models Ratinov and Roth (2009) and Durrett and Klein (2014), which both employ heavy feature engineering to bring in external knowledge.", 
        "168": "BiLSTMCNN (Chiu and Nichols, 2016) employs a hybrid BiLSTM and Convolutional neural network (CNN) architecture and incorporates rich lexicon features derived from SENNA and DBPedia.", 
        "169": "Our KBLSTM-CRF model shows competitive results compared to their results.", 
        "170": "It also presents significant improvements compared to the BiLSTM and BiLSTM-Fea models.", 
        "171": "Note that the benefit of adding KB information is smaller on OntoNotes compared to ACE2005.", 
        "172": "We believe that there are two main reasons.", 
        "173": "One is that NELL has a lower coverage of entity mentions in OntoNotes than in ACE2005 (57% vs. 65%).", 
        "174": "Second, OntoNotes has a significantly larger amount of training data, which allows for more accurate models without much help from external resources.", 
        "175": "4.2 Event Extraction  We now apply our model to the task of event extraction.", 
        "176": "Event extraction is concerned with de-\ntecting event triggers, i.e., a word that expresses the occurrence of a pre-defined type of event.", 
        "177": "Event triggers are mostly verbs and eventive nouns but can occasionally be adjectives and other content words.", 
        "178": "Therefore, the task is typically addressed as a classification problem where the goal is to label each word in a sentence with an event type or an O type if it does not express any of the defined events.", 
        "179": "It is straightforward to apply the BiLSTM architecture to event extraction.", 
        "180": "Similarly to the models for entity extraction, we can train the BiLSTM network with both the softmax objective and the CRF objective.", 
        "181": "We evaluate our models on the portion ACE2005 corpus that has event annotations.", 
        "182": "We use the same data split and experimental setting as in Li et al.", 
        "183": "(2013).", 
        "184": "The training procedure is the same as in Section 4.1.1, and we train all the models for about 5 epochs.", 
        "185": "For the KBLSTM models, we integrate the learned embeddings of WordNet synsets during training.", 
        "186": "4.2.1 Results  We compare our models with the prior state-ofthe-art approaches for event extraction, including neural and non-neural ones: JOINTBEAM refers to the joint beam search approach with local and global features (Li et al., 2013); JOINTENTITYEVENT refers to the graphical model for joint entity and event extraction (Yang and Mitchell, 2016); DMCNN is the dynamic multi-pooling CNNs in Chen et al.", 
        "187": "(2015); and JRNN is an RNN model with memory introduced by Nguyen et al.", 
        "188": "(2016).", 
        "189": "The first block in Table 5 shows the results of the feature-based linear models (taken from Yang and Mitchell (2016)).", 
        "190": "The second block shows the previously reported results for the neural models.", 
        "191": "Note that they both make use of gold-standard entity annotations.", 
        "192": "The third block shows the results of our models.", 
        "193": "We can see that our KBLSTM models significantly outperform the\nBiLSTM and BiLSTM-Fea models, which again confirms their effectiveness in leveraging KB information.", 
        "194": "The KBLSTM-CRF model achieves the best performance and outperforms the previous state-of-the-art methods without having access to any gold-standard entities.", 
        "195": "4.3 Model Analysis  In order to better understand our model, we visualize the learned attention weights \u03b1 for KB concepts and the sentinel weight \u03b2 that measures the tradeoff between knowledge and context.", 
        "196": "Figure 2a visualizes these weights for the entity mention \u201cclinton\u201d.", 
        "197": "In the first sentence, \u201cclinton\u201d refers to a LOCATION while in the second sentence, \u201cclinton\u201d refers to a PERSON.", 
        "198": "Our model learns to attend to different word senses for \u2019clinton\u2019 (KB concepts associated with \u2019clinton\u2019) in different sentences.", 
        "199": "Note that the weight on the knowledge sentinel is higher in the first sentence.", 
        "200": "This is because the local text alone is indicative of the entity type for \u201cclinton\u201d: the word \u201cin\u201d is more likely to be followed by a location than a person.", 
        "201": "We find that BiLSTM-Fea-CRF models often make wrong predictions on examples like this due to its inflexibility in modeling knowledge relevance with respect to context.", 
        "202": "Figure 2b shows the learned weights for the event trigger word \u201chead\u201d in two sentences, one expresses a TRAVEL event while the other expresses a STARTPOSITION event.", 
        "203": "Again, we find that our model is capable of attending to relevant WordNet synsets and more accurately disambiguate event types.", 
        "204": "5 Conclusion  In this paper, we introduce the KBLSTM network architecture as one approach to incorporating background KBs for improving recurrent neural networks for machine reading.", 
        "205": "This architecture employs an adaptive attention mechanism with a sentinel that allows for learning an appropriate tradeoff for blending knowledge from the KBs with information from the currently processed text, as well as selecting among relevant KB concepts for each word (e.g., to select the correct semantic categories for \u201cclinton\u201d as a town or person in figure 2a).", 
        "206": "Experimental results show that our model achieves state-of-the-art performance on standard benchmarks for both entity extraction and event extraction.", 
        "207": "We see many additional opportunities to integrate background knowledge with training of neural network models for language processing.", 
        "208": "Though our model is evaluated on entity extraction and event extraction, it can be useful for other machine reading tasks.", 
        "209": "Our model can also be extended to integrate knowledge from a richer set of KBs in order to capture the diverse variety and depth of background knowledge required for accurate and deep language understanding.", 
        "210": "Acknowledgments  This research was supported in part by DARPA under contract number FA8750-13-2-0005, and by NSF grants IIS-1065251 and IIS-1247489.", 
        "211": "We also gratefully acknowledge the support of the Microsoft Azure for Research program and the AWS Cloud Credits for Research program.", 
        "212": "In addition, we would like to thank anonymous reviewers for their helpful comments."
    }, 
    "document_id": "P17-1132.pdf.json"
}
