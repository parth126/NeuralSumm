{
    "abstract_sentences": {
        "1": "Opinionated natural language generation (ONLG) is a new, challenging, NLG task in which we aim to automatically generate human-like, subjective, responses to opinionated articles online.", 
        "2": "We present a data-driven architecture for ONLG that generates subjective responses triggered by users\u2019 agendas, based on automatically acquired wide-coverage generative grammars.", 
        "3": "We compare three types of grammatical representations that we design for ONLG.", 
        "4": "The grammars interleave different layers of linguistic information, and are induced from a new, enriched dataset we developed.", 
        "5": "Our evaluation shows that generation with Relational-Realizational (Tsarfaty and Sima\u2019an, 2008) inspired grammar gets better language model scores than lexicalized grammars \u00e0 la Collins (2003), and that the latter gets better humanevaluation scores.", 
        "6": "We also show that conditioning the generation on topic models makes generated responses more relevant to the document content."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 1331\u20131341 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1122  1 Introduction  Interaction in social media has become increasingly prevalent nowadays.", 
        "2": "It fundamentally changes the way businesses and consumers behave (Qualman, 2012), it is instrumental to the success of individuals and businesses (Haenlein and Kaplan, 2009) and it also affects political regimes (Howard et al., 2011; Lamer, 2012).", 
        "3": "In particular, automatic interaction in natural language in social media is now a common theme, as seen in the rapid popularization of chat applications, chat-bots, and \u201csmart agents\u201d aiming to conduct human-like interactions in natural language.", 
        "4": "So far, generation of human-like interaction in general has been addressed mostly commercially, where there is a movement towards online response automation (Owyang, 2012; Mah, 2012), and movement away from script-based interaction towards interactive chat bots (Mori et al., 2003; Feng et al., 2006).", 
        "5": "These efforts provide an automated one-size-fits-all type of interaction, with no particular expression of particular sentiments, topics, or opinions.", 
        "6": "In academia, work on generating human-like interaction focused so far on generating responses to tweets (Ritter et al., 2011; Hasegawa et al., 2013) or taking turns in short dialogs (Li et al., 2017).", 
        "7": "However, the architectures assumed in these studies implement sequence to sequence (seq2seq) mappings, which do not take into account topics, sentiments or agendas of the intended responders.", 
        "8": "Many real-world tasks and applications would benefit from automatic interaction that is generated intendedly based on a certain user profile or agenda.", 
        "9": "For instance, this can help promoting a political candidate or a social idea in social media, aiding people forming and expressing opinions on specific topics, or, in human-computer interfaces (HCI), making the computer-side generated utterances more meaningful, and ultimately more human-like (assuming that human-like interaction is very often affected by opinion, agenda, style, etc.).", 
        "10": "In this work we address the opinionated natural language generation (ONLG) task, in which we aim to automatically generate human-like responses to opinionated articles.", 
        "11": "These responses address particular topics and reflect diverse sentiments towards them, in accordance to predefined user agendas.", 
        "12": "This is an open-ended and unstructured generation challenge, which is closely tied to the communicative goals of actual human responders.", 
        "13": "1331\nIn previous work we addressed the ONLG challenge using a template-based approach (Cagan et al., 2014).", 
        "14": "The proposed system generated subjective responses to articles, driven by user agendas.", 
        "15": "While the evaluation showed promising results in human-likeness and relevance ratings, the template-based system suffers from low output variety, which leads to a learning effect that reduced the perceived human-likeness of generated responses over time.", 
        "16": "In this work we tackle ONLG from a datadriven perspective, aiming to circumvent such learning effects and repetitive patterns in templatebased generation.", 
        "17": "Here, we approach generation via automatically inducing broad-coverage generative grammars from a large corpus, and using them for response generation.", 
        "18": "More specifically, we define a grammar-based generation architecture and design different grammatical representations suitable for the ONLG task.", 
        "19": "Our grammars interleave different layers of linguistic information \u2014 including phrase-structure and dependency labels, lexical items, and levels of sentiment \u2014 with the goal of making responses both human-like and relevant.", 
        "20": "In classical NLG terms, these grammars offer the opportunity for both micro-planning and surface realization (Reiter and Dale, 1997) to unfold together.", 
        "21": "We implement a generator and a search strategy to carry out the generation, and sort through possible candidates to get the best ones.", 
        "22": "We evaluate the generated responses and the underlying grammars using automated metrics as well as human evaluation inspired by the Turing test (cf.", 
        "23": "Cagan et al.", 
        "24": "(2014) and Li et al.", 
        "25": "(2017)).", 
        "26": "Our evaluation shows that while relational realizational (RR) inspired grammars (Tsarfaty and Sima\u2019an, 2008) get good language model scores, simple head-driven lexicalized grammars a\u0300 la Collins (2003) get better human rating and are more sensitive to sentiment.", 
        "27": "Furthermore, we show that incorporating topic models into the grammar-based generation makes the generated responses more relevant to the document content.", 
        "28": "Finally, our human evaluations results show no learning effect.", 
        "29": "That is, human raters are unable to discover in the generated responses typical structures that would lead them to consider the responses machine-generated.", 
        "30": "The remainder of this paper is organized as follows.", 
        "31": "ln Section 2 we discuss the formal model, and in Section 3 we present the proposed end-to-\nend ONLG architecture.", 
        "32": "In Section 4 we introduce the grammars we define, and we describe how we use them for generation in Section 5.", 
        "33": "We follow that with our empirical evaluation in Section 6.", 
        "34": "In Section 7 we discuss related and future work, and in Section 8 we summarize conclude.", 
        "35": "2 The Formal Model  Task Definition.", 
        "36": "Let d be a document containing a single article, and let a be a user agenda as in Cagan et al.", 
        "37": "(2014).", 
        "38": "Specifically, a user agenda a can consist of one or more pairs of a topic (represented by a weighted bag-of-words) and an associated sentiment.", 
        "39": "Let c be an analysis function on documents such that c(d) yields a set of content elements which are also pairings of topics and sentiments.", 
        "40": "The operation \u2297 represents the intersection of the sets of content elements in the document and in the user agenda.", 
        "41": "We cast ONLG as a prediction function which maps the intersection a\u2297 c(d) to a sentence y \u2208 \u03a3\u2217 in natural language (in our case, \u03a3 is the vocabulary of English):\nfresponse(a\u2297 c(d)) = y (1)\nFor any non-empty intersection, a response is generated which is related to the topic of the intersection and the sentiments defined towards this topic.", 
        "42": "The relation between the sentiment in the user agenda and the sentiment reflected in the document is a simple xor function: when the user and the author share a sentiment toward a topic the response is positive, else it is negative.", 
        "43": "Objective Function.", 
        "44": "Let G be a formal generative grammar and let T be the set of trees strongly generated by G. In our proposed data-driven, grammar-based, generation architecture, we define fresponse as a function selecting a most probable tree t \u2208 T derived by G, given the intersection of document content and user agenda.", 
        "45": "fresponse(a\u2297 c(d)) = argmax\n{w|w=yield(t),t\u2208T} P (w, t|a\u2297 c(d)) (2)\nHere, w = yield(t) is the sequence of terminals that defines the leaves of the tree, which is then picked as the generated response.", 
        "46": "Assuming that G is a context-free grammar, we can spell out the probabilistic expression in Equation (2) as a history-based probabilistic model where root(t) selects a starting point for the\nderivation, der(t) selects the sequence of syntactic rules to be applied, and yield(t) selects the sequence of terminals that forms the response all conditioned on the derivation history.", 
        "47": "P (w, t|.)", 
        "48": "=P (root(t)|a\u2297 c(d)) (3a) \u00d7 P (der(t)|root(t), a\u2297 c(d)) (3b) \u00d7 P (yield(t)|root(t), der(t), a\u2297 c(d))\n(3c)\nUsing standard independence assumptions, Eq.", 
        "49": "(3) may be re-written as a chain of local decisions, conditioned on selected aspects of the generation history, marked here by the function \u03a6.\nP (w, t|.)", 
        "50": "\u2248 P (root|\u03a6(a\u2297 c(d)))\u00d7 (4a) \u220f\nrulej\u2208der(t) P (rulej |\u03a6(root, a\u2297 c(d)))\u00d7\n(4b) \u220f\nwi\u2208yield(t) P (wi|\u03a6(t, a\u2297 c(d)))\n(4c)\nIn words, the probability of the starting rule (4a) is multiplied with the probability of each of the rules in the derivation (4b) and the probability of each of the terminal nodes in the tree (4c).", 
        "51": "Each decision may be conditioned on previously generated part(s) of the structure, as well as the intersection of the input document content and user agenda.", 
        "52": "3 The Architecture  A bird\u2019s-eye view of the architecture we propose is depicted in Figure 1.", 
        "53": "The process consists of an offline component containing (I) corpus collection,\n(II) automatic annotation, (III) grammar induction, and (IV) topic-model training.", 
        "54": "The induced grammar along with a predefined user agenda and the pre-trained topic model are provided as input to the online generation component, which is marked with the dashed box in Figure 1.", 
        "55": "In (I) corpus collection, we collect a set of documents D with corresponding user comments.", 
        "56": "The documents in the corpus are used for training a topic model (IV), which is used for topic inference given a new input document d. The collected comments are used for inducing a wide-coverage grammar G for response generation.", 
        "57": "To realize the goal of ONLG, we aim to jointly model opinion, structure and lexical decisions in our induced grammars.", 
        "58": "To this end, in (II) automatic annotation we enrich the user comments with annotations that reflect different levels of linguistic information, as detailed in Section 4.", 
        "59": "In (III) grammar induction we induce a generative grammar G from the annotated corpus, following the common methodology of inducing PCFGs from syntactically annotated corpora (Charniak, 1995; Collins, 2003).", 
        "60": "We traverse the annotated trees from (III) and use maximum likelihood estimation for learning rule probabilities.", 
        "61": "No smoothing is done, and in order to filter noise from possibly erroneous parses, we use a frequency cap to define which rules can participate in derivations.", 
        "62": "We finally define and implement an efficient grammar-based generator, termed here the decoder, which carries out the generation and calculates the objective function in Eq.", 
        "63": "(4).", 
        "64": "The algorithm is described in Section 5.", 
        "65": "4 The Grammars  Base Grammar.", 
        "66": "A central theme in this research is generating sentences that express a certain sentiment.", 
        "67": "Our base grammatical representation is inspired by the Stanford sentiment classification parser (Socher et al., 2013) which annotates every non-ternminal node with one of five sentiment classes s \u2208 {\u22122,\u22121, 0, 1, 2}.", 
        "68": "Formally, each non-terminal in our base grammar includes a constituency category C and a sentiment class label s. The derivation of depth-1 trees with a parent node p and two daughters d1, d2 will thus appear as follows:\nCp[sp]\u2192 Cd1[sd1] Cd2[sd2]\nThe generative story imposed by this grammar is quite simple: each non-terminal node annotated with a sentiment can generate either a sequence of non-terminal daughters, or a single terminal node.", 
        "69": "An example of a subtree and its generation sequence is given in Figure 2(Base).", 
        "70": "Here we see a positive NP which generates two daughters: a neutral DT and a positive NX.", 
        "71": "The positive NX generates a neutral noun NN and a positive modifying adjective JJ on its left.", 
        "72": "Such a derivation can yield NP terms such as \u201cthe good wife\u201d or \u201can awesome movie\u201d, but will not generate \u201csome terrible words\u201d.", 
        "73": "In this grammar, lexical realization is generated conditioned on local pre-terminals only, and independently of the syntactic structure.", 
        "74": "While the generative story is simple, this grammar can capture complex interactions of sentiment.", 
        "75": "Such interactions take place in tree structures that include elements that may affect polarity, such as negation, modal verbs and so on (see Socher et al.", 
        "76": "(2013) and examples therein).", 
        "77": "In this work we assume a completely data-driven approach wherein such structures are derived based on previously observed sentiment-interactions in sentiment-augmented parses.", 
        "78": "Lexicalized Grammar.", 
        "79": "Our base grammar suffers from a clear pitfall: the structure lacks sensitivity to lexical information, and vice versa.", 
        "80": "This base grammar essentially generates lexical items as an afterthought, conditioned only on the local part-of-speech label and sentiment value.", 
        "81": "Our first modification of the base grammar is lexicalization in the spirit of Collins (2003).", 
        "82": "In this representation each non-terminal node is decorated with a phrase-structure category C and a\nsentiment label s, and it is augmented with a lexical head lh.", 
        "83": "The lexical head is common to the parent and the left (or right) daughter.", 
        "84": "A new lexical item, termed modifier lm, is introduced in the right (left) daughter.", 
        "85": "The resulting depth-1 subtree for a parent p with daughters d1, d2 and a lexical head on the left (without loss of generality) is:\nCp[sp, lh]\u2192 Cd1[sd1, lh] Cd2[sd2, lm]\nLexicalization makes the grammar more useful for generation as lexical choices can be made at any stage of the derivation conditioned on part of the structure.", 
        "86": "But it has one drawback \u2013 it assumes very strong dependence between lexical items that happen to appear as sisters.", 
        "87": "To overcome this, we define a head-driven generative story that follows the model of Collins (2003), where the mother non-terminal generates first the head node, and then, conditioned on the head it generates a modifying constituent to the left (right) of the head and its corresponding modifying lexical dependent.", 
        "88": "An example subtree and its associated head-driven generative story is illustrated in Figure 2(Lex).", 
        "89": "Relational-Realizational Grammar.", 
        "90": "Generating phrase-structures along with lexical realization can manage form \u2014 control how sentences are built.", 
        "91": "For coherent generation we would like to also control for the function of nodes in the derivation.", 
        "92": "To this end, we define a grammar and a generative story in the spirit of the RelationalRealizational (RR) grammar of Tsarfaty (2010).", 
        "93": "In our RR-augmented trees, each non-terminal node includes, on top of the phrase-structure category C, the lexical head l and the sentiment s, a relation label depi which determines its functional role in relation to its parent.", 
        "94": "The functional component will affect the selection of daughters so that the derived subtree fulfils its function.", 
        "95": "A depth-1 subtree will thus appear as follows:\nCi[si, depi, li]\u2192 Cj [sj , depj , li] Ck[sk, depk, lk]\nThe generative story of our RR representation follows the three-phase process defined by Tsarfaty and Sima\u2019an (2008) and Tsarfaty (2010):\n(i) projection: given a constituent and a sentiment value, generate a set of grammatical relations which define the functions of the daughters to be generated.", 
        "96": "(ii) configuration: given a constituent, sentiment and an unordered set of relations, an ordering for the relations is generated.", 
        "97": "Unlike the original RR derivations which fully order the set, here we partition the set into two disjoint sets (one of which is a singleton) and order them.", 
        "98": "This modification ensures that we adhere to binary trees.", 
        "99": "(iii) realization: For each function-labels\u2019 set we select the daughter\u2019s constituent realizing it.", 
        "100": "We first generate the constituent and sentiment realizing this function, and then, conditioned on the constituent, sentiment, head and function, we select the lexical dependent.", 
        "101": "An example tree along with its RR derivation is given in Figure 2(RR).", 
        "102": "5 Grammar-Based Generation  Our grammar-based generator is a top-down algorithm which starts with a frontier that includes a selected root, and expands the tree continually by substituting non-terminals at the left-hand-side of rules with their daughters on the right hand side, until no more non-terminals exist.", 
        "103": "This generation procedure yields one sentence for any given root.", 
        "104": "Due to independence assumptions inherent in the generative processes we defined, there is no guarantee that generated sentences will be completely grammatical, relevant and human-like.", 
        "105": "To circumvent this, we develop an over-generation algorithm that modifies the basic algorithm to select multiple rules at each generation point, and apply them to uncover several derivation trees, or a forest.", 
        "106": "We then use a variation on the beam search algorithm (Reddy, 1977) and devise a methodology to select the k-best scoring trees to be carried on to the next iteration.", 
        "107": "Specifically, we use a BreadthFirst algorithm for expanding the tree and define a dynamic programming algorithm that takes the score of a derivation tree of n\u22121 expanded nodes, selects a new rule for the next non-expanded node, and from it, calculates the score of the expanded tree with now n nodes.", 
        "108": "For comparing the trees, we computed a score according to Eq.", 
        "109": "(4) for the tree generated so far, and used an average node score to neutralize size difference between trees.", 
        "110": "To make sure our responses target a particular topic, we propose to condition the selection of lexical items at the root on the topic at the intersection of the document content and user agenda, essentially preferring derivations that yield words related to the input topic distribution.", 
        "111": "In practice we use topic model scores to estimate the root rule probability, selecting lexical item(s) for generation to start with:\nP\u0302 (root(t)|a\u2297 c(d)) = P\u0302 (ROOT\u2192 l1l2|a\u2297 c(d)) =\u2211N\nc=1 \u22112 i=1 tm weight(c) \u2217 word weight(c, li)\n(5) where tm weight(c) is the weight of topic c in the topic distribution at the document-agenda intersection, and word weight(c, li) is the weight of the lexical head word li within the word distribution of topic c in the given topic model.", 
        "112": "The generation process ends when all derivations reach (at most) a pre-defined height (to avoid endless recursions).", 
        "113": "We then re-rank the generated candidates.", 
        "114": "The re-ranking is based on a 3-grams language model on the raw yield of the sentence, divided by the length of the sentence to obtain a per-word average and avoid length biases.1  6 Evaluation  Goal.", 
        "115": "We aim to evaluate the grammars\u2019 applicability to the ONLG task.", 
        "116": "Set in an open domain, it is not trivial to find a \u201cgold-standard\u201d for this task, or even a method to obtain one.", 
        "117": "Our evaluation thus follows two tracks: an automated assessment track, where we quantitatively assess the responses, and a Turing-like test similar to that of Cagan et al.", 
        "118": "(2014), where we aim to gauge human-likeness and response relevance.", 
        "119": "1Here we use Microsoft\u2019s WebLM API which is part of the Microsoft Oxford Project (Microsoft, 2011).", 
        "120": "Materials.", 
        "121": "We collected a new corpus of news articles and corresponding user comments from the NY-Times R\u00a9web site, using their open Community API.", 
        "122": "We focus on sports news, which gave us 3,583 news articles and 13,100 user comments, or 55,700 sentences.", 
        "123": "The articles are then used for training a topic model using the Mallet library (McCallum, 2002).", 
        "124": "Next, we use the comments in the corpus to induce the grammars.", 
        "125": "To obtain our Base representation we parse the sentences using the Stanford CoreNLP suite (Manning et al., 2014) which can provide both phrase-structure and sentiment annotation.", 
        "126": "To obtain our Lexicalized representation we follow the same procedure, this time also using a head-finder which locates the head word for each non-terminal.", 
        "127": "To obtain the Relational-Realizational representation we followed the algorithm described in Tsarfaty et al.", 
        "128": "(2011), which, given both a constituency parse and a dependency parse of a sentence, unifies them into a lexicalized and functional phrasestructure.", 
        "129": "The merging is based on matching spans over words within the sentence.2\nSetup.", 
        "130": "We simulated several scenarios.", 
        "131": "In each, the system generates sentences with one grammar (G \u2208 {Base, Lex, RR}) and one scoring scheme (with/without topic model scores).", 
        "132": "The results of each simulation are 5,000 responses for each variant of the system, consisting of 1,000 sentences for each sentiment class, s \u2208 {\u22122,\u22121, 0, 1, 2}.", 
        "133": "The same 5000 generated sentences were used in all experiments.", 
        "134": "We set the generator for trees of maximum depth of 13 which can yield up to 4096 words.", 
        "135": "In reality, the realization was of much shorter sentences.", 
        "136": "Examples for generated responses are given in Table 1.", 
        "137": "6.1 Comparing Grammars  Goal and Metrics.", 
        "138": "In this experiment we compare and contrast the generation capacity of the grammars, using the following metrics:\n(i) Fluency measures how grammatical or natural the generated sentences are.", 
        "139": "We base this measure on a probabilistic language model which gives an indication of how common wordsequences within the sentence are.", 
        "140": "We express fluency as a Language Model (LM) score which is calculated using the Microsoft Web ML API to get aggregated minus-log probabilities of all 3-grams\n2The collected corpus and supplementary annotations are available at www.tomercagan.com/onlg.", 
        "141": "in the sentence.", 
        "142": "The aggregated score is then normalized to give a per-word average in order to cancel any effects of sentence length.", 
        "143": "(ii) Sentiment Agreement measures whether the inferred sentiment of the response matches the input sentiment parameter used for generation.", 
        "144": "Specifically, we take the raw yield of the generated tree (a sentence) and run it through the sentiment classifier implemented in Socher et al.", 
        "145": "(2013), to assign the full sentence one of 5 sentiment classes between \u22122 and +2.", 
        "146": "During evaluation, we compare the classified sentiment of the generated sentence is with the sentiment entered as input for the derivation of the sentence, and report the rate of agreement on (a) level (\u22122.. + 2) and (b) polarity (\u2212/+), which is a more relaxed measure.", 
        "147": "(iii) The Consiceness/tightness metric aims to evaluate which grammar derives a simpler structure across generations of similar content.", 
        "148": "Our tightness evaluation is based on the percentage of sentences that were fully realization as terminals within the specific height limit;3 we simply observe how many trees have all leaves as terminal symbols.", 
        "149": "Intuitively, tighter grammars lead to improved performance and better control over the generated content.", 
        "150": "It is possible to think of what it captures in terms Occams Razor, preferring the simpler structure to derive comparable outcome.", 
        "151": "Empirical Results The results of our evaluation are presented in Table 2.", 
        "152": "With respect to the above metrics, the RR grammar was more compact and natural compared to the lexicalized (LEX) grammar: the per-word LM Score for the RR is\u22125.6 as compared to \u22126.5 for LEX.", 
        "153": "Also, RR has 95.7% complete sentences as compared to only 67.3% for LEX.", 
        "154": "The LEX grammar was more sensitive to the sentiment input but only slightly, having a 44.6% sentiment agreement and 63.9% sentiment polarity agreement compared to 43.8% and 61.0% for RR grammar.", 
        "155": "The BASE grammar gave the worst performance for all measures.", 
        "156": "This provides preliminary evidence in support of incorporating surface realization (lexicalization) into the syntactic generation, rather than filling slots in retrospect.", 
        "157": "6.2 Testing Relevance  Goal and Metrics Next we aim to evaluate the relevance of the responses to the input document triggering the response.", 
        "158": "We do so by calculating\n3A height of 13 makes a maximum sentence length of 213-1 = 212 = 4096 words.", 
        "159": "Topic Agreement, a measure that, given a trained topic model, determines how close the topic distribution of the input document and that of the generated response are.", 
        "160": "We use L2 to calculate the distance between the inferred topic distribution vectors.", 
        "161": "We focus here on relevance testing for the RR grammar, which gave superior LM scores.", 
        "162": "In this test we use two generators \u2013 RR generator as defined above, and RRTM generator that uses the scoring scheme of Equation (5) to select a start rule deriving the root lexical item.", 
        "163": "Example sentences of each generator are presented in Table 3.", 
        "164": "Empirical Results The results of the two generators and their average distance from the topic distribution of the input document are presented in Table 4.", 
        "165": "Here we see that the generator using topic models for selecting start rules (RRTM) gets topic distribution that is closer to the input document\u2019s topic distribution.", 
        "166": "The last row, HUMAN, calculates the distance between the topic distributions in the documents and their human responses from the collected corpus.", 
        "167": "The fact that RRTM outperforms HUMAN is not necessarily surprising, as sentences in human responses are typically from longer paragraphs where some sentences are more generic, used as connectives, interjections, etc.", 
        "168": "6.3 Human Surveys  Goal and Procedure.", 
        "169": "We evaluate humanlikeness of the generated responses by collecting data via an online survey on Amazon Mechanical Turk.", 
        "170": "In the survey, participants were asked to judge whether generated sentences were written by a human or a computer.", 
        "171": "The participants were screened to have a good level of English and reside in the US.", 
        "172": "Each survey comprised of 50 randomly ordered trials.", 
        "173": "In each trial the participant was shown a response.", 
        "174": "The task was to categorize each response on a 7-point scale with labels \u2018Certainly human/computer\u2019, \u2018Probably human/computer\u2019, \u2018Maybe human/computer\u2019 and \u2018Unsure\u2019.", 
        "175": "In 50 trials the participant was exposed to 3-4 sentences for each grammar/sentiment combination.", 
        "176": "Empirical Results.", 
        "177": "Average human-likeness ratings (scale 1\u20137) are presented in Table 5.", 
        "178": "Here, we see that sentences generated by the lexicalized grammar were perceived as most human-like.", 
        "179": "This result is in contrast with the automatic evaluation.", 
        "180": "Such a discrepancy need not be very surprising, as noted by others before (Belz and Reiter, 2006).", 
        "181": "Cagan et al.", 
        "182": "(2014) show that there are extra-grammatical factors affecting human-likeness, e.g.", 
        "183": "world knowledge.", 
        "184": "We hypothesise that the LEX grammar, which relies heavily on lexical co-occurrences frequencies, is better at replicating world knowledge and idiomatic phrases thus judged as more human.", 
        "185": "In a qualitative inspection on a sample of the results we could verify that the LEX grammar tends to replicate idiomatic sequences while the RR grammar generates novel phrases in a more compositional fashion.", 
        "186": "Grammaticality is not hindered by it, but apparently human-likeness is.", 
        "187": "We also run an ordinal mixed-effects regression, which is an appropriate way to analyse discrete rating data.", 
        "188": "Regression model predictors were Grammar (G), sentiment level (SENT), response length (NWORD), position of response in rating session (POS), and all two-way interactions between these.", 
        "189": "Quantitative predictors were standardized and non-significant (p > .05) interactions were dropped from the fitted model.", 
        "190": "Byparticipant random intercepts and slopes of G and SENT were included as random effects.", 
        "191": "Table 6 displays the fitted model fixed effects, with BASE grammar as the reference level.", 
        "192": "Consistent with Table 5, we see that LEX and RR score significantly higher on human likeness than BASE.", 
        "193": "These effects are modulated by sentiment: more positive sentiment makes BASE and RR more human-like (respectively: b = 0.17 and b = 0.44) whereas the LEX grammar becomes less human like (although this effect is only marginally significant: b = \u2212.18).", 
        "194": "In addition, these effects are also modulated by sentence length in #words \u2013 longer sentences make BASE less human-like (b = \u22121.60) but RR and LEX more human-like (respectively: b = 1.31 and b = 1.35)\nImportantly, there is a weak but significant positive effect of position (b = 0.21), indicating that human-likeness ratings increase over the course of a rating session.", 
        "195": "This effect does not depend on the grammar, but is somewhat stronger for longer\nsentences (b = 0.10).", 
        "196": "The position effect contrasts markedly with the decrease of human-likeness ratings that (Cagan et al., 2014) ascribed to a learning effect: there, raters noticed the repetitive structure and took this to be a sign that the utterances were machine generated.", 
        "197": "The fact that we find no such effect means that our grammars successfully avoided such repetitiveness.", 
        "198": "7 Related and Future Work  NLG is often cast as a concept-to-text (C2T) challenge, where a structured record is transformed into an utterance expressing its content.", 
        "199": "C2T is usually addressed using template-based (Becker, 2002) or data-driven (Konstas and Lapata, 2013; Yuan et al., 2015) approaches.", 
        "200": "In particular, researchers explored data-driven grammar-based approaches (Cahill and van Genabith, 2006), often assuming a custom grammar (Konstas and Lapata, 2013) or a closed-domain approach (DeVault et al., 2008).", 
        "201": "ONLG in contrast is set in an open domain, and expresses multiple dimensions (grammaticality, sentiment, topic).", 
        "202": "In the context of social media, generating responses to tweets has been cast as a sequence-tosequence (seq2seq) transduction problem, and has been addressed using statistical machine translation (SMT) methods (Ritter et al., 2011; Hasegawa et al., 2013).", 
        "203": "In this seq2seq setup, moods and sentiments expressed in the past are replicated or reused, but these responses do not target particular topics and are not driven by a concrete user agenda.", 
        "204": "An exception is a recent work by Li et al.", 
        "205": "(2016), exploring a persona-based conversational model, and Xu et al.", 
        "206": "(2016) who encode loose structured knowledge to condition the generation on.", 
        "207": "These studies present a stepping stone towards full-fledge neural ONLG architectures with some control over the user characteristics.", 
        "208": "The surge of interest in neural network generation architectures has spawned the development of seq2seq models based on encoder-decoder setup (Sordoni et al.", 
        "209": "(2015); Li et al.", 
        "210": "(2016, 2017) and references therein).", 
        "211": "These architectures require a very large dataset to train on.", 
        "212": "In the future we aim to extend our dataset and explore neural network architectures for ONLG that can encode a useragenda, a document, and possibly stylistic choices (Biber and Conrad, 2009; Reiter and Williams, 2010) \u2014 in the hope of yielding more diverse, relevant and coherent responses to online content.", 
        "213": "8 Conclusion  We approached ONLG from a data-driven perspective, aiming to overcome the shortcomings of previous template-based approaches.", 
        "214": "Our contribution is threefold: (i) we designed three types of broad-coverage grammars appropriate for the task, (ii) we developed a new enriched data-set for inducing the grammars, and (iii) we empirically demonstrated the strengths of the LEX and RR grammars for generation, as well as the overall usefulness of sentiment and topic models incorporated into the syntactic derivation.", 
        "215": "Our results show that the proposed grammar-based architecture indeed avoids the repetitiveness and learning effects observed in the template-based ONLG.", 
        "216": "To the best of our knowledge, this is the first data-driven agenda-driven baseline for ONLG, and we believe it can be further improved.", 
        "217": "Some future avenues for investigation include improving the relevance and human-likeness results by improving the automatic parses quality, acquiring more complex templates via abstract grammars, and experimenting with more sophisticated scoring functions for reranking.", 
        "218": "With the emergence of deep learning, we further embrace the opportunity to combine the sequence-to-sequence modeling view explored so far with conditioning generation on speakers agendas and user profiles, pushing the envelope of opinionated generation further.", 
        "219": "Finally, we believe that future work should be evaluated in situ, to examine if, and to what extent, the generated responses participate in and affect the discourse (feed) in social media."
    }, 
    "document_id": "P17-1122.pdf.json"
}
