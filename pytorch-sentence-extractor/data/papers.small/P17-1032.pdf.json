{
    "abstract_sentences": {
        "1": "Kernel methods enable the direct usage of structured representations of textual data during language learning and inference tasks.", 
        "2": "Expressive kernels, such as Tree Kernels, achieve excellent performance in NLP.", 
        "3": "On the other side, deep neural networks have been demonstrated effective in automatically learning feature representations during training.", 
        "4": "However, their input is tensor data, i.e., they cannot manage rich structured information.", 
        "5": "In this paper, we show that expressive kernels and deep neural networks can be combined in a common framework in order to (i) explicitly model structured information and (ii) learn non-linear decision functions.", 
        "6": "We show that the input layer of a deep architecture can be pre-trained through the application of the Nystr\u00f6m low-rank approximation of kernel spaces.", 
        "7": "The resulting \u201ckernelized\u201d neural network achieves state-of-the-art accuracy in three different tasks."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 345\u2013354 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1032  1 Introduction  Learning for Natural Language Processing (NLP) requires to more or less explicitly account for trees or graphs to express syntactic and semantic information.", 
        "2": "A straightforward modeling of such information has been obtained in statistical language learning with Tree Kernels (TKs) (Collins and Duffy, 2001), or by means of structured neural models (Hochreiter and Schmidhuber, 1997; Socher et al., 2013).", 
        "3": "In particular, kernel-based methods (Shawe-Taylor and Cristianini, 2004) have been largely applied in language processing for alleviating the need of complex activities of manual feature engineering (e.g., (Moschitti et al.,\n2008)).", 
        "4": "Although ad-hoc features are adopted by many successful approaches to language learning (e.g., (Gildea and Jurafsky, 2002)), kernels provide a natural way to capture textual generalizations directly operating over (possibly complex) linguistic structures.", 
        "5": "Sequence (Cancedda et al., 2003) or tree kernels (Collins and Duffy, 2001) are of particular interest as the feature space they implicitly generate reflects linguistic patterns.", 
        "6": "On the other hand, Recursive Neural Networks (Socher et al., 2013) have been shown to learn dense feature representations of the nodes in a structure, thus exploiting similarities between nodes and sub-trees.", 
        "7": "Also, Long-Short Term Memory (Hochreiter and Schmidhuber, 1997) networks build intermediate representations of sequences, resulting in similarity estimates over sequences and their inner sub-sequences.", 
        "8": "While such methods are highly effective and reach state-of-the-art results in many tasks, their adoption can be problematic.", 
        "9": "In kernel-based Support Vector Machine (SVM) the classification model corresponds to the set of support vectors (SVs) and weights justifying the maximal margin hyperplane: the classification cost crucially depends on their number, as classifying a new instance requires a kernel computation against all SVs, making their adoption in large data settings prohibitive.", 
        "10": "This scalability issue is evident in many NLP and Information Retrieval applications, such as in answer re-ranking in question answering (Severyn et al., 2013; Filice et al., 2016), where the number of SVs is typically very large.", 
        "11": "Improving the efficiency of kernel-based methods is a largely studied topic.", 
        "12": "The reduction of computational costs has been early designed by imposing a budget (Dekel and Singer, 2006; Wang and Vucetic, 2010), that is limiting the maximum number of SVs in a model.", 
        "13": "However, in complex tasks, such methods still require large budgets to reach\n345\nadequate accuracies.", 
        "14": "On the other hand, training complex neural networks is also difficult as no common design practice is established against complex data structures.", 
        "15": "In Levy et al.", 
        "16": "(2015), a careful analysis of neural word embedding models is carried out and the role of the hyper-parameter estimation is outlined.", 
        "17": "Different neural architectures result in the same performances, whenever optimal hyper-parameter tuning is applied.", 
        "18": "In this latter case, no significant difference is observed across different architectures, making the choice between different neural architectures a complex and empirical task.", 
        "19": "A general approach to the large scale modeling of complex structures is a critical and open problem.", 
        "20": "A viable and general solution to this scalability issue is provided by the Nystro\u0308m method (Williams and Seeger, 2001); it allows to approximate the Gram matrix of a kernel function and support the embedding of future input examples into a low-dimensional space.", 
        "21": "For example, if used over TKs, the Nystro\u0308m projection corresponds to the embedding of any tree into a lowdimensional vector.", 
        "22": "In this paper, we show that the Nystro\u0308m based low-rank embedding of input examples can be used as the early layer of a deep feed-forward neural network.", 
        "23": "A standard NN back-propagation training can thus be applied to induce non-linear functions in the kernel space.", 
        "24": "The resulting deep architecture, called Kernel-based Deep Architecture (KDA), is a mathematically justified integration of expressive kernel functions and deep neural architectures, with several advantages: it (i) directly operates over complex non-tensor structures, e.g., trees, without any manual feature or architectural engineering, (ii) achieves a drastic reduction of the computational cost w.r.t.", 
        "25": "pure kernel methods, and (iii) exploits the non-linearity of NNs to produce accurate models.", 
        "26": "The experimental evaluation shows that the proposed approach achieves state-of-the-art results in three semantic inference tasks: Semantic Parsing, Question Classification and Community Question Answering.", 
        "27": "In the rest of the paper, Section 2 surveys some of the investigated kernels.", 
        "28": "In Section 3 the Nystro\u0308m methodology and KDA are presented.", 
        "29": "Experimental evaluations are described in Section 4.", 
        "30": "Finally, Section 5 derives the conclusions.", 
        "31": "2 Kernel-based Semantic Inference  In almost all NLP tasks, explicit models of complex syntactic and semantic structures are required, such as in Paraphrase Detection: deciding whether two sentences are valid paraphrases involves learning grammatical rewriting rules, such as semantics preserving mappings among subtrees.", 
        "32": "Also in Question Answering, the syntactic information about input questions is crucial.", 
        "33": "While manual feature engineering is always possible, kernel methods on structured representations of data objects, e.g., sentences, have been largely applied.", 
        "34": "Since Collins and Duffy (2001), sentences can be modeled through their corresponding parse tree, and Tree Kernels (TKs) result in similarity metrics directly operating over tree fragments.", 
        "35": "Such kernels corresponds to dot products in the (implicit) feature space made of all possible tree fragments (Haussler, 1999).", 
        "36": "Notice that the number of tree fragments in a tree bank is combinatorial with the number of tree nodes and gives rise to billions of features, i.e., dimensions.", 
        "37": "In this high-dimensional space, kernel-based algorithms, such as SVMs, can implicitly learn robust prediction models (Shawe-Taylor and Cristianini, 2004), resulting in state-of-the-art approaches in several NLP tasks, e.g., Semantic Role Labeling (Moschitti et al., 2008), Question Classification (Croce et al., 2011) or Paraphrase Identification (Filice et al., 2015).", 
        "38": "As the feature space generated by the structural kernels depends on the input structures, different tree representations can be adopted to reflect more or less expressive syntactic/semantic feature spaces.", 
        "39": "While constituency parse trees have been early used (e.g., (Collins and Duffy, 2001)), dependency parse trees correspond to graph structures.", 
        "40": "TKs usually rely on their tree conversions, where grammatical edge labels corresponds to nodes.", 
        "41": "An expressive tree representation of dependency graphs is the Grammatical Relation Centered Tree (GRCT).", 
        "42": "As illustrated in Figure 1, PoS-Tags and grammatical functions correspond to nodes, dominating their associated lexicals.", 
        "43": "Types of tree kernels.", 
        "44": "While a variety of TK functions have been studied, e.g., the Partial Tree Kernel (PTK) (Moschitti, 2006), the kernels used in this work model grammatical and semantic information, as triggered respectively by the dependency edge labels and lexical nodes.", 
        "45": "The latter is exploited through recent results in distributional models of lexical semantics, as proposed in\nword embedding methods (e.g., (Mikolov et al., 2013; Sahlgren, 2006).", 
        "46": "In particular, we adopt the Smoothed Partial Tree Kernel (SPTK) described in Croce et al.", 
        "47": "(2011): it extends the PTK formulation with a similarity function between lexical nodes in a GRCT, i.e., the cosine similarity between word vector representations based on word embeddings.", 
        "48": "We also use a further extension of the SPTK, called Compositionally Smoothed Partial Tree Kernel (CSPTK) (as in Annesi et al.", 
        "49": "(2014)).", 
        "50": "In CSPTK, the lexical information provided by the sentence words is propagated along the nonterminal nodes representing head-modifier dependencies.", 
        "51": "Figure 2 shows a compositionally-labeled tree, where the similarity function at the nodes can model lexical composition, i.e., capturing contextual information.", 
        "52": "For example, in the sentence, \u201cWhat instrument does Hendrix play?\u201d, the role of the word instrument can be fully captured only if its composition with the verb play is considered.", 
        "53": "The CSPTK applies a composition function between nodes: while several algebraic functions can be adopted to compose two word vectors representing a head/modifier pair, here we refer to a simple additive function that assigns to each (h,m) pair the linear combination of the involved vectors, i.e., (h,m) = Ah +Bm: although simple and efficient, it actually produces very effective CSPTK functions.", 
        "54": "Complexity.", 
        "55": "The training phase of an optimal maximum margin algorithm (such as SVM) requires a number of kernel operations that is more than linear (almost O(n2)) with respect to the number of training examples n, as discussed in Chang and Lin (2011).", 
        "56": "Also the classification phase depends on the size of the input dataset and the intrinsic complexity of the targeted task: classifying a new instance requires to evaluate the kernel function with respect to each support vector.", 
        "57": "For complex tasks, the number of selected support vectors tends to be very large, and using the\nresulting model can be impractical.", 
        "58": "This cost is also problematic as single kernel operations can be very expensive: the cost of evaluating the PTK on a single tree pair is almost linear in the number of nodes in the input trees, as shown in Moschitti (2006).", 
        "59": "When lexical semantics is considered, as in SPTKs and CSPTKs, it is more than linear in the number of nodes (Croce et al., 2011).", 
        "60": "3 Deep Learning in Kernel Spaces    3.1 The Nystro\u0308m method  Given an input training dataset D, a kernel K(oi, oj) is a similarity function over D2 that corresponds to a dot product in the implicit kernel space, i.e., K(oi, oj) = \u03a6(oi) \u00b7 \u03a6(oj).", 
        "61": "The advantage of kernels is that the projection function \u03a6(o) = x \u2208 Rn is never explicitly computed (Shawe-Taylor and Cristianini, 2004).", 
        "62": "In fact, this operation may be prohibitive when the dimensionality n of the underlying kernel space is extremely large, as for Tree Kernels (Collins and Duffy, 2001).", 
        "63": "Kernel functions are used by learning algorithms, such as SVM, to operate only implicitly on instances in the kernel space, by never accessing their explicit definition.", 
        "64": "Let us apply the projection function \u03a6 over all examples from D to derive representations, x denoting the rows of the matrix X .", 
        "65": "The Gram matrix can always be computed asG = XX>, with each single element corresponding to Gij = \u03a6(oi)\u03a6(oj) = K(oi, oj).", 
        "66": "The aim of the Nystro\u0308m method is to derive a new low-dimensional embedding x\u0303 in a l-dimensional space, with l n so that G\u0303 = X\u0303X\u0303> and G\u0303 \u2248 G. This is obtained by generating an approximation G\u0303 of G using a subset of l columns of the matrix, i.e., a selection of a subset L \u2282 D of the available examples, called landmarks.", 
        "67": "Suppose we randomly sample l columns of G, and let C \u2208 R|D|\u00d7l be the matrix of these sampled columns.", 
        "68": "Then, we can rearrange the columns and rows of G and define X = [X1 X2] such that:\nG = XX> = [\nW X>1 X2 X>2 X1 X > 2 X2\n]\nand C = [\nW X>2 X1\n] (1)\nwhere W = X>1 X1, i.e., the subset of G that contains only landmarks.", 
        "69": "The Nystro\u0308m approximation can be defined as:\nG \u2248 G\u0303 = CW \u2020C> (2)\nwhere W \u2020 denotes the Moore-Penrose inverse of W .", 
        "70": "The Singular Value Decomposition (SVD) is used to obtain W \u2020 as it follows.", 
        "71": "First, W is decomposed so that W = USV >, where U and V are both orthogonal matrices, and S is a diagonal matrix containing the (non-zero) singular values of W on its diagonal.", 
        "72": "Since W is symmetric and positive definite W = USU>.", 
        "73": "Then W \u2020 = US\u22121U> = US\u2212 1 2S\u2212 1 2U> and the Equation 2 can be rewritten as\nG \u2248 G\u0303 = CUS\u2212 12S\u2212 12U>C>\n= (CUS\u2212 1 2 )(CUS\u2212 1 2 )> = X\u0303X\u0303> (3)\nGiven an input example o \u2208 D, a new lowdimensional representation x\u0303 can be thus determined by considering the corresponding item of C as\nx\u0303 = cUS\u2212 1 2 (4)\nwhere c is the vector whose dimensions contain the evaluations of the kernel function between o and each landmark oj \u2208 L. Therefore, the method produces l-dimensional vectors.", 
        "74": "If k is the average number of basic operations required during a single kernel computation, the overall cost of a single projection is O(kl + l2), where the first term corresponds to the cost of generating the vector c, while the second term is needed for the matrix multiplications in Equation 4.", 
        "75": "Typically, the number of landmarks l ranges from hundreds to few thousands and, for complex kernels (such as Tree Kernels), the projection cost can be reduced to O(kl).", 
        "76": "Several policies have been defined to determine the best selection of landmarks to reduce the Gram Matrix approximation error.", 
        "77": "In this work the uniform sampling without replacement is adopted, as suggested by Kumar et al.", 
        "78": "(2012), where this policy has been theoretically and empirically shown to achieve results comparable with other (more complex) selection policies.", 
        "79": "3.2 A Kernel-based Deep Architecture  The above introduced Nystro\u0308m representation x\u0303 of any input example o is linear and can be adopted\nto feed a neural network architecture.", 
        "80": "We assume a labeled dataset L = {(o, y) | o \u2208 D, y \u2208 Y } being available, where o refers to a generic instance and y is its associated class.", 
        "81": "In this Section, we define a Multi-Layer Perceptron (MLP) architecture, with a specific Nystro\u0308m layer based on the Nystro\u0308m embeddings of Eq.", 
        "82": "4.", 
        "83": "We will refer to this architecture as Kernel-based Deep Architecture (KDA).", 
        "84": "KDA has an input layer, a Nystro\u0308m layer, a possibly empty sequence of non-linear hidden layers and a final classification layer, which produces the output.", 
        "85": "The input layer corresponds to the input vector c, i.e., the row of the C matrix associated to an example o.", 
        "86": "Notice that, for adopting the KDA, the values of the matrix C should be all available.", 
        "87": "In the training stage, these values are in general cached.", 
        "88": "During the classification stage, the c vector corresponding to an example o is directly computed by l kernel computations between o and each one of the l landmarks.", 
        "89": "The input layer is mapped to the Nystro\u0308m layer, through the projection in Equation 4.", 
        "90": "Notice that the embedding provides also the proper weights, defined by US\u2212 1 2 , so that the mapping can be expressed through the Nystro\u0308m matrix HNy = US \u2212 1 2 : it corresponds to a pre-trained stage derived through SVD, as discussed in Section 3.1.", 
        "91": "Equation 4 provides a static definition for HNy whose weights can be left invariant during the neural network training.", 
        "92": "However, the values ofHNy can be made available for the standard back-propagation adjustments applied for training1.", 
        "93": "Formally, the low-dimensional embedding of an input example o, is x\u0303 = c HNy = c US\u2212 1 2 .", 
        "94": "The resulting outcome x\u0303 is the input to one or more non-linear hidden layers.", 
        "95": "Each t-th hidden layer is realized through a matrix Ht \u2208 Rht\u22121\u00d7ht and a bias vector bt \u2208 R1\u00d7ht , whereas ht denotes\n1In our preliminary experiments, adjustments to the HNy matrix have been tested, but no significant effect was observed.", 
        "96": "Therefore, no adjustment has been used in any reported experiment, although more in depth exploration is needed on this aspect.", 
        "97": "the desired hidden layer dimensionality.", 
        "98": "Clearly, given that HNy \u2208 Rl\u00d7l, h0 = l. The first hidden layer in fact receives in input x\u0303 = cHNy, that corresponds to t = 0 layer input x0 = x\u0303 and its computation is formally expressed by x1 = f(x0H1 + b1), where f is a non-linear activation function.", 
        "99": "In general, the generic t-th layer is modeled as:\nxt = f(xt\u22121Ht + bt) (5)\nThe final layer of KDA is the classification layer, realized through the output matrix HO and the output bias vector bO.", 
        "100": "Their dimensionality depends on the dimensionality of the last hidden layer (called O\u22121) and the number |Y | of different classes, i.e., HO \u2208 RhO\u22121\u00d7|Y | and bO \u2208 R1\u00d7|Y |, respectively.", 
        "101": "In particular, this layer computes a linear classification function with a softmax operator so that y\u0302 = softmax(xO\u22121HO + bO).", 
        "102": "In order to avoid over-fitting, two different regularization schemes are applied.", 
        "103": "First, the dropout is applied to the input xt of each hidden layer (t \u2265 1) and to the input xO\u22121 of the final classifier.", 
        "104": "Second, a L2 regularization is applied to the norm of each layer2 Ht and HO.", 
        "105": "Finally, the KDA is trained by optimizing a loss function made of the sum of two factors: first, the cross-entropy function between the gold classes and the predicted ones; second the L2 regularization, whose importance is regulated by a metaparameter \u03bb.", 
        "106": "The final loss function is thus\nL(y, y\u0302) = \u2211\n(o,y)\u2208L y log(y\u0302)+\u03bb\n\u2211\nH\u2208{Ht}\u222a{HO} ||H||2\nwhere y\u0302 are the softmax values computed by the network and y are the true one-hot encoding values associated with the example from the labeled training dataset L.  4 Empirical Investigation  The proposed KDA has been applied adopting the same architecture but with different kernels to three NLP tasks, i.e., Question Classification, Community Question Answering, and Automatic Boundary Detection in Semantic Role Labeling.", 
        "107": "The Nystro\u0308m projector has been implemented in the KeLP framework3.", 
        "108": "The neural network has\n2The input layer and the Nystro\u0308m layer are not modified during the learning process, and they are not regularized.", 
        "109": "3 http://www.kelp-ml.org\nbeen implemented in Tensorflow4, with 2 hidden layers whose dimensionality corresponds to the number of involved Nystro\u0308m landmarks.", 
        "110": "The rectified linear unit is the non-linear activation function in each layer.", 
        "111": "The dropout has been applied in each hidden layer and in the final classification layer.", 
        "112": "The values of the dropout parameter and the \u03bb parameter of the L2-regularization have been selected from a set of values via grid-search.", 
        "113": "The Adam optimizer with a learning rate of 0.001 has been applied to minimize the loss function, with a multi-epoch (500) training, each fed with batches of size 256.", 
        "114": "We adopted an early stop strategy, where the best model was selected according to the performance over the development set.", 
        "115": "Every performance measure is obtained against a specific sampling of the Nystro\u0308m landmarks.", 
        "116": "Results averaged against 5 such samplings are always hereafter reported.", 
        "117": "4.1 Question Classification  Question Classification (QC) is the task of mapping a question into a closed set of answer types in a Question Answering system.", 
        "118": "We used the UIUC dataset (Li and Roth, 2006), including a training and test set of 5, 452 and 500 questions, respectively, organized in 6 classes (like ENTITY or HUMAN).", 
        "119": "TKs resulted very effective, as shown in Croce et al.", 
        "120": "(2011); Annesi et al.", 
        "121": "(2014).", 
        "122": "In Annesi et al.", 
        "123": "(2014), QC is mapped into a One-vsAll multi-classification schema, where the CSPTK achieves state-of-the-art results of 95%: it acts directly over compositionally labeled trees without relying on any manually designed feature.", 
        "124": "In order to proof the benefits of the KDA architecture, we generated Nystro\u0308m representation of the CSPTK kernel function5 with default parameters (i.e., \u00b5 = \u03bb = 0.4).", 
        "125": "The SVM formulation by Chang and Lin (2011), fed with the CSPTK (hereafter KSVM), is here adopted to determine the reachable upper bound in classification quality, i.e., a 95% of accuracy, at higher computational costs.", 
        "126": "It establishes the state-of-the-art over the UIUC dataset.", 
        "127": "The resulting model includes 3,873 support vectors: this corresponds to the number of kernel operations required to classify any input test question.", 
        "128": "The Nystro\u0308m method based on a number of landmarks ranging from 100 to 1,000 is adopted for modeling input vectors in\n4 https://www.tensorflow.org/\n5The lexical vectors used in the CSPTK are generated again using the Word2vec tool with a Skip-gram model.", 
        "129": "the CSPTK kernel space.", 
        "130": "Results are reported in Table 1: computational saving refers to the percentage of avoided kernel computations with respect to the application of the KSVM to each test instance.", 
        "131": "To justify the need of the Neural Network, we compared the proposed KDA to an efficient linear SVM that is directly trained over the Nystro\u0308m embeddings.", 
        "132": "This SVM implements the Dual Coordinate Descent method (Hsieh et al., 2008) and will be referred as SVMDCD.", 
        "133": "We also measured the state-of-the-art Convolutional Neural Network6 (CNN) of Kim (2014), achieving the remarkable accuracy of 93.6%.", 
        "134": "Notice that the linear classifier SVMDCD operating over the approximated kernel space achieves the same classification quality of the CNN when just 1,000 landmarks are considered.", 
        "135": "KDA improves this results, achieving 94.3% accuracy even with fewer landmarks (only 600), showing the effectiveness of non-linear learning over the Nystro\u0308m input.", 
        "136": "Although KSVM improves to 95%, KDA provides a saving of more than 84% kernel computations at classification time.", 
        "137": "This result is straightforward as it confirms that linguistic information encoded in a tree is important in the analysis of questions and can be used as a pre-training strategy.", 
        "138": "Figure 3 shows the accuracy curves according to various approximations of the kernel space, i.e., number of landmarks.", 
        "139": "4.2 Community Question-Answering  In the SemEval-2016 task 3, participants were asked to automatically provide good answers in a community question answering setting (Nakov et al., 2016).", 
        "140": "We focused on the subtask A: given a question and a large collection of questioncomment threads created by a user community,\n6The deep architecture presented in Kim (2014) outperforms several NN models, including the Recursive Neural Tensor Network or Tree-LSTM presented in (Socher et al., 2013; Tai et al., 2015) which presents a semantic compositionality model that exploits parse trees.", 
        "141": "the task consists in (re-)ranking the comments w.r.t.", 
        "142": "their utility in answering the question.", 
        "143": "Subtask A can be modeled as a binary classification problem, where instances are (question, comment) pairs.", 
        "144": "Each pair generates an example for a binary SVM, where the positive label is associated to a good comment and the negative label refers to potentially useful and bad comments.", 
        "145": "The classification score achieved over different (question, comment) pairs is used to sort instances and produce the final ranking over comments.", 
        "146": "The above setting results in a train and test dataset made of 20,340 and 3,270 examples, respectively.", 
        "147": "In Filice et al.", 
        "148": "(2016), a Kernel-based SVM classifier (KSVM) achieved state-of-the-art results by adopting a kernel combination that exploited (i) feature vectors containing linguistic similarities between the texts in a pair; (ii) shallow syntactic trees that encode the lexical and morpho-syntactic information shared between text pairs; (iii) feature vectors capturing task-specific information.", 
        "149": "Such model includes 11,322 support vectors.", 
        "150": "We investigated the KDA architecture, trained by maximizing the F1 measure, based on a Nystro\u0308m layer initialized using the same kernel functions as KSVM.", 
        "151": "We varied the Nystro\u0308m dimensions from 100 to 1,000 landmarks, i.e., a much lower number than the support vectors of KSVM.", 
        "152": "Table 2 reports the results: very high F1 scores\nare observed with impressive savings in terms of kernel computations (between 91.2% and 99%).", 
        "153": "Also on the cQA task, the F1 obtained by the SVMDCD is significantly lower than the KDA one.", 
        "154": "Moreover, with 800 landmarks KDA achieves the remarkable results of 0.68 of F1, that is the state-of-the-art against other convolutional systems, e.g., ConvKN (Barro\u0301n-Ceden\u0303o et al., 2016): this latter combines convolutional tree kernels with kernels operating on sentence embeddings generated by a convolutional neural network.", 
        "155": "4.3 Argument Boundary Detection  Semantic Role Labeling (SRL) consists of the detection of the semantic arguments associated with the predicate of a sentence (called Lexical Unit) and their classification into their specific roles (Fillmore, 1985).", 
        "156": "For example, given the sentence \u201cBootleggers then copy the film onto hundreds of tapes\u201d the task would be to recognize the verb copy as representing the DUPLICATION frame with roles, CREATOR for Bootleggers, ORIGINAL for the film and GOAL for hundreds of tapes.", 
        "157": "Argument Boundary Detection (ABD) corresponds to the SRL subtask of detecting the sentence fragments spanning individual roles.", 
        "158": "In the previous example the phrase \u201cthe film\u201d represents a role (i.e., ORIGINAL), while \u201cof tapes\u201d or \u201cfilm onto hundreds\u201d do not, as they just partially cover one or multiple roles, respectively.", 
        "159": "The ABD task has been successfully tackled using TKs since Moschitti et al.", 
        "160": "(2008).", 
        "161": "It can be modeled as a binary classification task over each parse tree node n, where the argument span reflects words covered by the sub-tree rooted at n. In our experiments, Grammatical Relation Centered Tree (GRCT) derived from dependency grammar (Fig.", 
        "162": "4) are employed, as shown in Fig.", 
        "163": "5.", 
        "164": "Each node is considered as a candidate in covering a possible argument.", 
        "165": "In particular, the structure in Fig.", 
        "166": "5a is a positive example.", 
        "167": "On the contrary, in Fig.", 
        "168": "5b the NMOD node only covers the phrase \u201cof tapes\u201d, i.e., a subset of the correct role, and it represents a negative example7.", 
        "169": "We selected all the sentences whose predicate word (lexical unit) is a verb (they are about\n7The nodes of the subtree covering the words to be verified as possible argument are marked with a FE tag.", 
        "170": "The word evoking the frame and its ancestor nodes are also marked with the LU tag.", 
        "171": "The other nodes are pruned out, except the ones connecting the LU nodes to the FE ones.", 
        "172": "60,000), from the 1.3 version of the Framenet dataset (Baker et al., 1998).", 
        "173": "This gives rise to about 1,400,000 sub-trees, i.e., the positive and negative instances.", 
        "174": "The dataset is split in train and test according to the 90/10 proportion (as in (Johansson and Nugues, 2008)).", 
        "175": "This size makes the application of a traditional kernel-based method unfeasible, unless a significant instance sub-sampling is performed.", 
        "176": "We firstly experimented standard SVM learning over a sampled training set of 10,000 examples, a typical size for annotated datasets in computational linguistics tasks.", 
        "177": "We adopted the Smoothed Partial Tree Kernel (Croce et al., 2011) with standard parameters (i.e., \u00b5 = \u03bb = 0.4) and lexical nodes expressed through 250-dimensional vectors obtained by applying Word2Vec (Mikolov et al., 2013) to the entire Wikipedia.", 
        "178": "When trained over this 10k instances dataset, the kernel-based SVM (KSVM) achieves an F1 of 70.2%, over the same test set used in Croce and Basili (2016) that includes 146,399 examples.", 
        "179": "The KSVM learning produces a model including 2, 994 support vectors, i.e., the number of kernel operations required to classify each new test instance.", 
        "180": "We then apply the Nystro\u0308m linearization to a larger dataset made of 100k examples, and trained a classifier using both the Dual Coordinate Descent method (Hsieh et al., 2008), SVMDCD, and the KDA proposed in this work.", 
        "181": "Table 3 presents the results in terms of F1 and saved kernel operation.", 
        "182": "Although SVMDCD with 500 landmarks already achieves 0.713 F1, a score higher than KSVM, it is signif-\nicantly improved by the KDA.", 
        "183": "KDA achieves up to 0.76 F1 with only 400 landmarks, resulting in a huge step forward w.r.t.", 
        "184": "the KSVM.", 
        "185": "This result is straightforward considering (i) the reduction of required kernel operations, i.e., more than 86% are saved and (ii) the quality achieved since 100 landmarks (i.e., 0.711, higher than the KSVM).", 
        "186": "5 Discussion and Conclusions  In this work, we promoted a methodology to embed structured linguistic information within NNs, according to mathematically rich semantic similarity models, based on kernel functions.", 
        "187": "Structured data, such as trees, are transformed into dense vectors according to the Nystro\u0308m methodology, and the NN is effective in capturing nonlinearities in these representations, but still improving generalization at a reasonable complexity.", 
        "188": "At the best our knowledge, this work is one of the few attempts to systematically integrate linguistic kernels within a deep neural network architecture.", 
        "189": "The problem of combining such methodologies has been studied in specific works, such as (Baldi et al., 2011; Cho and Saul, 2009; Yu et al., 2009).", 
        "190": "In Baldi et al.", 
        "191": "(2011) the authors propose a hybrid classifier, for bridging kernel methods and neural networks.", 
        "192": "In particular, they use the output of a kernelized k-nearest neighbors algorithm as input to a neural network.", 
        "193": "Cho and Saul (2009) introduced a family of kernel functions that\nmimic the computation of large multilayer neural networks.", 
        "194": "However, such kernels can be applied only on vector inputs.", 
        "195": "In Yu et al.", 
        "196": "(2009), deep neural networks for rapid visual recognition are trained with a novel regularization method taking advantage of kernels as an oracle representing prior knowledge.", 
        "197": "The authors transform the kernel regularizer into a loss function and carry out the neural network training by gradient descent.", 
        "198": "In Zhuang et al.", 
        "199": "(2011) a different approach has been promoted: a multiple (two) layer architecture of kernel functions, inspired by neural networks, is studied to find the best kernel combination in a Multiple Kernel Learning setting.", 
        "200": "In Mairal et al.", 
        "201": "(2014) the invariance properties of convolutional neural networks (LeCun et al., 1998) are modeled through kernel functions, resulting in a Convolutional Kernel Network.", 
        "202": "Other effort for combining NNs and kernel methods is described in Tymoshenko et al.", 
        "203": "(2016), where a SVM adopts a tree kernels combinations with embeddings learned through a CNN.", 
        "204": "The approach here discussed departs from previous approaches in different aspects.", 
        "205": "First, a general framework is promoted: it is largely applicable to any complex kernel, e.g., structural kernels or combinations of them.", 
        "206": "The efficiency of the Nystro\u0308m methodology encourages its adoption, especially when complex kernel computations are required.", 
        "207": "Notice that other low-dimensional approximations of kernel functions have been studied, as for example the randomized feature mappings proposed in Rahimi and Recht (2008).", 
        "208": "However, these assume that (i) instances have vectorial form and (ii) shift-invariant kernels are adopted.", 
        "209": "The Nystro\u0308m method adopted here does not suffer of such limitations: as our target is the application to structured (linguistic) data, more general kernels, i.e., non-shift-invariant convolution kernels are needed.", 
        "210": "Given the Nystro\u0308m approximation, the learning setting corresponds to a general well-known neural network architecture, i.e., a multilayer perceptron, and does not require any manual feature engineering or the design of ad-hoc network architectures.", 
        "211": "The success in three different tasks confirms its large applicability without major changes or adaptations.", 
        "212": "Second, we propose a novel learning strategy, as the capability of kernel methods to represent complex search spaces is combined with the ability of neural networks to find non-linear so-\nlutions to complex tasks.", 
        "213": "Last, the suggested KDA framework is fully scalable, as (i) the network can be parallelized on multiple machines, and (ii) the computation of the Nystro\u0308m reconstruction vector c can be easily parallelized on multiple processing units, ideally l, as each unit can compute one ci value.", 
        "214": "Future work will address experimentations with larger scale datasets; moreover, it is interesting to experiment with more landmarks in order to better understand the trade-off between the representation capacity of the Nystro\u0308m approximation of the kernel functions and the over-fitting that can be introduced in a neural network architecture.", 
        "215": "Finally, the optimization of the KDA methodology through the suitable parallelization on multicore architectures, as well as the exploration of mechanisms for the dynamic reconstruction of kernel spaces (e.g., operating over HNy) also constitute interesting future research directions on this topic."
    }, 
    "document_id": "P17-1032.pdf.json"
}
