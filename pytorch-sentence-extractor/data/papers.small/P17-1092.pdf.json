{
    "abstract_sentences": {
        "1": "We show that discourse structure, as defined by Rhetorical Structure Theory and provided by an existing discourse parser, benefits text categorization.", 
        "2": "Our approach uses a recursive neural network and a newly proposed attention mechanism to compute a representation of the text that focuses on salient content, from the perspective of both RST and the task.", 
        "3": "Experiments consider variants of the approach and illustrate its strengths and weaknesses."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 996\u20131005 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-1092  1 Introduction  Advances in text categorization have the potential to improve systems for analyzing sentiment, inferring authorship or author attributes, making predictions, and many more.", 
        "2": "Several past researchers have noticed that methods that reason about the relative salience or importance of passages within a text can lead to improvements (Ko et al., 2004).", 
        "3": "Latent variables (Yessenalina et al., 2010), structured-sparse regularizers (Yogatama and Smith, 2014), and neural attention models (Yang et al., 2016) have all been explored.", 
        "4": "Discourse structure, which represents the organization of a text as a tree (for an example, see Figure 1), might provide cues for the importance of different parts of a text.", 
        "5": "Some promising results on sentiment classification tasks support this idea: Bhatia et al.", 
        "6": "(2015) and Hogenboom et al.", 
        "7": "(2015) applied hand-crafted weighting schemes to the sentences in a document, based on its discourse structure, and showed benefit to sentiment polarity classification.", 
        "8": "In this paper, we investigate the value of discourse structure for text categorization more broadly, considering five tasks, through the use of a recursive neural network built on an\nautomatically-derived document parse from a topperforming, open-source discourse parser, DPLP (Ji and Eisenstein, 2014).", 
        "9": "Our models learn to weight the importance of a document\u2019s sentences, based on their positions and relations in the discourse tree.", 
        "10": "We introduce a new, unnormalized attention mechanism to this end.", 
        "11": "Experimental results show that variants of our model outperform prior work on four out of five tasks considered.", 
        "12": "Our method unsurprisingly underperforms on the fifth task, making predictions about legislative bills\u2014a genre in which discourse conventions are quite different from those in the discourse parser\u2019s training data.", 
        "13": "Further experiments show the effect of discourse parse quality on text categorization performance, suggesting that future improvements to discourse parsing will pay off for text categorization, and validate our new attention mechanism.", 
        "14": "996\nOur implementation is available at https:// github.com/jiyfeng/disco4textcat.", 
        "15": "2 Background: Rhetorical Structure Theory  Rhetorical Structure Theory (RST; Mann and Thompson, 1988) is a theory of discourse that has enjoyed popularity in NLP.", 
        "16": "RST posits that a document can be represented by a tree whose leaves are elementary discourse units (EDUs, typically clauses or sentences).", 
        "17": "Internal nodes in the tree correspond to spans of sentences that are connected via discourse relations such as CONTRAST and ELABORATION.", 
        "18": "In most cases, a discourse relation links adjacent spans denoted \u201cnucleus\u201d and \u201csatellite,\u201d with the former more essential to the writer\u2019s purpose than the latter.1\nAn example of a manually constructed RST parse for a restaurant review is shown in Figure 1.", 
        "19": "The six EDUs are indexed from A to F ; the discourse tree organizes them hierarchically into increasingly larger spans, with the last CONTRAST relation resulting in a span that covers the whole review.", 
        "20": "Within each relation, the RST tree indicates the nucleus pointed by an arrow from its satellite (e.g., in the ELABORATION relation, A is the nucleus and B is the satellite).", 
        "21": "The information embedded in RST trees has motivated many applications in NLP research, including document summarization (Marcu, 1999), argumentation mining (Azar, 1999), and sentiment analysis (Bhatia et al., 2015).", 
        "22": "In most applications, RST trees are built by automatic discourse parsing, due to the expensive cost of manual annotation.", 
        "23": "In this work, we use a state-of-the-art open-source RST-style discourse parser, DPLP (Ji and Eisenstein, 2014).2\nWe follow recent work that suggests transforming the RST tree into a dependency structure (Yoshida et al., 2014).3 Figure 2(a) shows the corresponding dependency structure of the RST tree in Figure 1.", 
        "24": "It is clear that C is the root of the tree, and in fact this clause summarizes the review and suffices to categorize it as negative.", 
        "25": "This dependency representation of the RST tree offers a\n1There are also a few exceptions in which a relation can be realized with multiple nuclei.", 
        "26": "2https://github.com/jiyfeng/DPLP 3The transformation is trivial and deterministic given the nucleus-satellite mapping for each relation.", 
        "27": "The procedure is analogous to the transformation of a headed phrase-structure parse in syntax into a dependency tree (e.g., Yamada and Matsumoto, 2003).", 
        "28": "form of inductive bias for our neural model, helping it to discern the most salient parts of a text in order to assign it a label.", 
        "29": "3 Model  Our model is a recursive neural network built on a discourse dependency tree.", 
        "30": "It includes a distributed representation computed for each EDU, and a composition function that combines EDUs and partial trees into larger trees.", 
        "31": "At the top of the tree, the representation of the complete document is used to make a categorization decision.", 
        "32": "Our approach is analogous to (and inspired by) the use of recursive neural networks on syntactic dependency trees, with word embeddings at the leaves (Socher et al., 2014).", 
        "33": "3.1 Representation of Sentences  Let e be the distributed representation of an EDU.", 
        "34": "We use a bidirectional LSTM on the words\u2019 embeddings within each EDU (details of word embeddings are given in section 4), concatenating the last hidden state vector from the forward LSTM (\u2212\u2192e ) with that of the backward LSTM (\u2190\u2212e ) to get e.\nThere is extensive recent work on architectures for embedding representations of sentences and other short pieces of text, including, for example, (bi)recursive neural networks (Paulus et al., 2014) and convolutional neural networks (Kalchbrenner et al., 2014).", 
        "35": "Future work might consider alternatives; we chose the bidirectional LSTM due to its effectiveness in many settings.", 
        "36": "3.2 Full Recursive Model  Given the discourse dependency tree for an input text, our recursive model builds a vector representation through composition at each arc in the tree.", 
        "37": "Let vi denote the vector representation of EDU i and its descendants.", 
        "38": "For the base case where EDU i is a leaf in the tree, we let vi = tanh(ei), which is the elementwise hyperbolic tangent function.", 
        "39": "For an internal node i, the composition function considers a parent and all of its children, whose indices are denoted by children(i).", 
        "40": "In defining this composition function, we seek for (i.)", 
        "41": "the contribution of the parent node ei to be central; and (ii.)", 
        "42": "the contribution of each child node ej be determined by its content as well as the discourse relation it holds with the parent.", 
        "43": "We therefore define\nvi = tanh  ei +\n\u2211\nj\u2208children(i) \u03b1i,jWri,jvj\n  ,\n(1) where Wri,j is a relation-specific composition matrix indexed by the relation between i and j, ri,j .", 
        "44": "\u03b1i,j is an \u201cattention\u201d weight, defined as\n\u03b1i,j = \u03c3 ( e>i W\u03b1vj ) , (2)\nwhere \u03c3 is the elementwise sigmoid and W\u03b1 contains attention parameters (these are relationindependent).", 
        "45": "Our attention mechanism differs from prior work (Bahdanau et al., 2015), in which attention weights are normalized to sum to one across competing candidates for attention.", 
        "46": "Here, \u03b1i,j does not depend on node i\u2019s other children.", 
        "47": "This is motivated by RST, in which the presence of a node does not signify lesser importance to its siblings.", 
        "48": "Consider, for example, EDU D and text span E-F in Figure 1, which in parallel provide EXPLANATION for EDU C. This scenario differs from machine translation, where attention isused to implicitly and softly align output-language words to relatively few input-language words.", 
        "49": "It also differs from attention in composition functions used in syntactic parsing (Kuncoro et al., 2017), where attention can mimic head rules that follow from an endocentricity hypothesis of syntactic phrase representation.", 
        "50": "Our recursive composition function, through the attention mechanism and the relation-specific weight matrices, is designed to learn how to differently weight EDUs for the categorization task.", 
        "51": "This idea of using a weighting scheme along with discourse structure is explored in prior works (Bhatia et al., 2015; Hogenboom et al., 2015), although they are manually designed, rather than learned from training data.", 
        "52": "Once we have vroot of a text, the prediction of its category is given by softmax (Wovroot + b).", 
        "53": "We refer to this model as the FULL model, since it makes use of the entire discourse dependency tree.", 
        "54": "3.3 Unlabeled Model  The FULL model based on Equation 1 uses a dependency discourse tree with relations.", 
        "55": "Because alternate discourse relation labels have been proposed (e.g., Prasad et al., 2008), we seek to measure the effect of these labels.", 
        "56": "We therefore consider an UNLABELED model based only on the tree structure, without the relations:\nvi = tanh  ei +\n\u2211\nj\u2208children(i) \u03b1i,jvj\n  .", 
        "57": "(3)\nHere, only attention weights are used to compose the children nodes\u2019 representations, significantly reducing the number of model parameters.", 
        "58": "This UNLABELED model is similar to the depth weighting scheme introduced by Bhatia et al.", 
        "59": "(2015), which also uses an unlabeled discourse dependency tree, but our attention weights are computed by a function whose parameters are learned.", 
        "60": "This approach sits squarely between Bhatia et al.", 
        "61": "(2015) and the flat document structure used by Yang et al.", 
        "62": "(2016); the UNLABELED model still uses discourse to bias the model toward some content (that which is closer to the tree\u2019s root).", 
        "63": "3.4 Simpler Variants  We consider two additional baselines that are even simpler.", 
        "64": "The first, ROOT, uses the discourse dependency structure only to select the root EDU, which is used to represent the entire text: vroot = eroot.", 
        "65": "No composition function is needed.", 
        "66": "This model variant is motivated by work on document summarization (Yoshida et al., 2014), where the\nmost central EDU is used to represent the whole text.", 
        "67": "The second variant, ADDITIVE, uses all the EDUs with a simple composition function, and does not depend on discourse structure at all: vroot = 1 N \u2211N i=1 ei, where N is the total number of EDUs.", 
        "68": "This serves as a baseline to test the benefits of discourse, controlling for other design decisions and implementation choices.", 
        "69": "Although sentence representations ei are built in a different way from the work of Yang et al.", 
        "70": "(2016), this model is quite similar to their HN-AVE model on building document representations.", 
        "71": "4 Implementation Details  The parameters of all components of our model (top-level classification, composition, and EDU representation) are learned end-to-end using standard methods.", 
        "72": "We implement our learning procedure with the DyNet package (Neubig et al., 2017).", 
        "73": "Preprocessing.", 
        "74": "For all datasets, we use the same preprocessing steps, mostly following recent work on language modeling (e.g., Mikolov et al., 2010).", 
        "75": "We lowercased all the tokens and removed tokens that contain only punctuation symbols.", 
        "76": "We replaced numbers in the documents with a special number token.", 
        "77": "Low-frequency word types were replaced by UNK; we reduce the vocabulary for each dataset until approximately 5% of tokens are mapped to UNK.", 
        "78": "The vocabulary sizes after preprocessing are also shown in Table 1.", 
        "79": "Discourse parsing.", 
        "80": "Our model requires the discourse structure for each document.", 
        "81": "We used DPLP, the RST parser from Ji and Eisenstein (2014), which is one of the best discourse parsers on the RST discourse treebank benchmark (Carlson et al., 2001).", 
        "82": "It employs a greedy decoding algorithm for parsing, producing 2,000 parses per minute on average on a single CPU.", 
        "83": "DPLP provides discourse segmentation, breaking a text into EDUs, typically clauses or sentences, based on syntactic parses provided by Stanford CoreNLP.", 
        "84": "RST trees are converted to dependencies following the method of Yoshida et al.", 
        "85": "(2014).", 
        "86": "DPLP as distributed is trained on 347 Wall Street Journal articles from the Penn Treebank (Marcus et al., 1993).", 
        "87": "Word embeddings.", 
        "88": "In cases where there are 10,000 or fewer training examples, we used\npretrained GloVe word embeddings (Pennington et al., 2014), following previous work on neural discourse processing (Ji and Eisenstein, 2015).", 
        "89": "For larger datasets, we randomly initialized word embeddings and trained them alongside other model parameters.", 
        "90": "Learning and hyperparameters.", 
        "91": "Online learning was performed with the optimization method and initial learning rate as hyperparameters.", 
        "92": "To avoid the exploding gradient problem, we used the norm clipping trick with a threshold of \u03c4 = 5.0.", 
        "93": "In addition, dropout rate 0.3 was used on both input and hidden layers to avoid overfitting.", 
        "94": "We performed grid search over the word vector representation dimensionality, the LSTM hidden state dimensionality (both {32, 48, 64, 128, 256}), the initial learning rate ({0.1, 0.01, 0.001}), and the update method (SGD and Adam, Kingma and Ba, 2015).", 
        "95": "For each corpus, the highest-accuracy combination of these hyperparameters is selected using development data or ten-fold cross validation, which will be specified in section 5.", 
        "96": "5 Datasets  We selected five datasets of different sizes and corresponding to varying categorization tasks.", 
        "97": "Some information about these datasets is summarized in Table 1.", 
        "98": "Sentiment analysis on Yelp reviews.", 
        "99": "Originally from the Yelp Dataset Challenge in 2015, this dataset contains 1.5 million examples.", 
        "100": "We used the preprocessed dataset from Zhang et al.", 
        "101": "(2015), which has 650,000 training and 50,000 test examples.", 
        "102": "The task is to predict an ordinal rating (1\u20135) from the text of the review.", 
        "103": "To select the best combination of hyperparameters, we randomly sampled 10% training examples as the development data.", 
        "104": "We compared with hierarchical attention networks (Yang et al., 2016), which use the normalized attention mechanism on both word and sentence layers with a flat document structure, and provide the state-of-the-art result on this corpus.", 
        "105": "Framing dimensions in news articles.", 
        "106": "The Media Frames Corpus (MFC; Card et al., 2015) includes around 4,200 news articles about immigration from 13 U.S. newspapers over the years 1980\u20132012.", 
        "107": "The annotations of these articles are in terms of a set of 15 general-purpose labels, such as ECONOMICS and MORALITY, designed to categorize the emphasis framing applied to the\nimmigration issue within the articles.", 
        "108": "We focused on predicting the single primary frame of each article.", 
        "109": "The state-of-the-art result on this corpus is from Card et al.", 
        "110": "(2016), where they used logistic regression together with unigrams, bigrams and Bamman-style personas (Bamman et al., 2014) as features.", 
        "111": "The best feature combination in their model alongside other hyperparameters was identified by a Bayesian optimization method (Bergstra et al., 2015).", 
        "112": "To select hyperparameters, we used a small set of examples from the corpus as a development set.", 
        "113": "Then, we report average accuracy across 10-fold cross validation as in (Card et al., 2016).", 
        "114": "Congressional floor debates.", 
        "115": "The corpus was originally collected by Thomas et al.", 
        "116": "(2006), and the data split we used was constructed by Yessenalina et al.", 
        "117": "(2010).", 
        "118": "The goal is to predict the vote (\u201cyea\u201d or \u201cnay\u201d) for the speaker of each speech segment.", 
        "119": "The most recent work on this corpus is from Yogatama and Smith (2014), which proposed structured regularization methods based on linguistic components, e.g., sentences, topics, and syntactic parses.", 
        "120": "Each regularization method induces a linguistic bias to improve text classification accuracy, where the best result we repeated here is from the model with sentence regularizers.", 
        "121": "Movie reviews.", 
        "122": "This classic movie review corpus was constructed by Pang and Lee (2004) and includes 1,000 positive and 1,000 negative reviews.", 
        "123": "On this corpus, we used the standard tenfold data split for cross validation and reported the average accuracy across folds.", 
        "124": "We compared with the work from both Bhatia et al.", 
        "125": "(2015) and Hogenboom et al.", 
        "126": "(2015), which are two recent works on discourse for sentiment analysis.", 
        "127": "Bha-\ntia et al.", 
        "128": "(2015) used a hand-crafted weighting scheme to bias the bag-of-word representations on sentences.", 
        "129": "Hogenboom et al.", 
        "130": "(2015) also considered manually-designed weighting schemes and a lexicon-based model as classifier, achieving performance inferior to fully-supervised methods like Bhatia et al.", 
        "131": "(2015) and ours.", 
        "132": "Congressional bill corpus.", 
        "133": "This corpus, collected by Yano et al.", 
        "134": "(2012), includes 51,762 legislative bills from the 103rd to 111th U.S. Congresses.", 
        "135": "The task is to predict whether a bill will survive based on its content.", 
        "136": "We randomly sampled 10% training examples as development data to search for the best hyperparameters.", 
        "137": "To our knowledge, the best published results are due to Yogatama and Smith (2014), which is the same baseline as for the congressional floor debates corpus.", 
        "138": "6 Experiments  We evaluated all variants of our model on the five datasets presented in section 5, comparing in each case to the published state of the art as well as the most relevant works.", 
        "139": "Results.", 
        "140": "See Table 2.", 
        "141": "On four out of five datasets, our UNLABELED model (line 8) outperforms past methods.", 
        "142": "In the case of the very large Yelp dataset, our FULL model (line 9) gives even stronger performance, but not elsewhere, suggesting that it is overparameterized for the smaller datasets.", 
        "143": "Indeed, on the MFC and Movies tasks, the discourse-ignorant ADDITIVE outperforms the FULL model.", 
        "144": "On these datasets, the selected FULL model had nearly 20 times as many parameters as the UNLABELED model, which in turn had twice as many parameters as the ADDITIVE.", 
        "145": "This finding demonstrates the benefit of explicit discourse structure\u2014even the output from an imperfect parser\u2014for text categorization in some genres.", 
        "146": "This benefit is supported by both UNLABELED and FULL, since both of them use discourse structures of texts.", 
        "147": "The advantage of using discourse information varies on different genres and different corpus sizes.", 
        "148": "Even though the discourse parser is trained on news text, it still offers benefit to restaurant and movie reviews and to the genre of congressional debates.", 
        "149": "Even for news text, if the training dataset is small (e.g., MFC), a lighter-weight variant of discourse (UNLABELED) is preferred.", 
        "150": "Legislative bills, which have technical legal content and highly specialized conventions (see the supplementary material for an example), are arguably the most distant genre from news among those we considered.", 
        "151": "On that task, we see discourse working against accuracy.", 
        "152": "Note that the corpus of bills is more than ten times larger than three cases where our UNLABELED model outperformed past methods, suggesting that the drop in performance is not due to lack of data.", 
        "153": "It is also important to notice that the ROOT model performs quite poorly in all cases.", 
        "154": "This implies that discourse structure is not simply helping by finding a single EDU upon which to make the categorization decision.", 
        "155": "Qualitative analysis.", 
        "156": "Figure 3 shows some example texts from the Yelp Review corpus with their discourse structures produced by DPLP, where the weights were generated with the FULL model.", 
        "157": "Figures 3(a) and 3(b) are two successful\nexamples of the FULL model.", 
        "158": "Figure 3(a) shows a simple case with respect to the discourse structure.", 
        "159": "Figure 3(b) is slightly different\u2014the text in this example may have more than one reasonable discourse structure, e.g., 2D could be a child of 2C instead of 2A.", 
        "160": "In both cases, discourse structures help the FULL model bias to the important sentences.", 
        "161": "Figure 3(c), on the other hand, presents a negative example, where DPLP failed to identify the most salient sentence 3F .", 
        "162": "In addition, the weights produced by the FULL model do not make much sense, which we suspect the model was confused by the structure.", 
        "163": "Figure 3(c) also presents a manually-constructed discourse structure on the same text for reference.", 
        "164": "A more accurate prediction is expected if we use this manuallyconstructed discourse structure, because it has the appropriate dependency between sentences.", 
        "165": "In addition, the annotated discourse relations are able to select the right relation-specific composition matrices in FULL model, which are consistent with the training examples.", 
        "166": "Effect of parsing performance.", 
        "167": "A natural question is whether further improvements to RST discourse parsing would lead to even greater gains in text categorization.", 
        "168": "While advances in discourse parsing are beyond the scope of this paper, we can gain some insight by exploring degradation to the DPLP parser.", 
        "169": "An easy way to do this is to train it on subsets of the RST discourse treebank.", 
        "170": "We repeated the conditions described above for our FULL model, training DPLP on 25%, 50%, and 75% of the training set (randomly selected in\neach case) before re-parsing the data for the sentiment analysis task.", 
        "171": "We did not repeat the hyperparameter search.", 
        "172": "In Figure 4, we plot accuracy of the classifier (y-axis) against the F1 performance of the discourse parser (x-axis).", 
        "173": "Unsurprisingly, lower parsing performance implies lower classification accuracy.", 
        "174": "Notably, if the RST discourse treebank were reduced to 25% of its size, our method would underperform the discourseignorant model of Yang et al.", 
        "175": "(2016).", 
        "176": "While we cannot extrapolate with certainty, these findings suggest that further improvements to discourse parsing, through larger annotated datasets or improved models, could lead to greater gains.", 
        "177": "Attention mechanism.", 
        "178": "In section 3, we contrasted our new attention mechanism (Equation 2), which is inspired by RST\u2019s lack of \u201ccompetition\u201d for salience among satellites, with the attention mechanism used in machine translation (Bahdanau et al., 2015).", 
        "179": "We consider here a variant of our model with normalized attention:\n\u03b1\u2032i = softmax     ... v>j\n...   j\u2208children(i) W\u03b1 \u00b7 ei   .", 
        "180": "(4) The result here is a vector \u03b1\u2032i, with one element for each child node j \u2208 children(i), and which sums to one.", 
        "181": "On Yelp dateset, this variant of the FULL model achieves 70.3% accuracy (1.5% absolute behind our FULL model), giving empirical support to our\ntheoretically-motivated design decision not to normalize attention.", 
        "182": "Of course, further architecture improvements may yet be possible.", 
        "183": "Discussion.", 
        "184": "Our findings in this work show the benefit of using discourse structure for text categorization.", 
        "185": "Although discourse structure strongly improves the performance on most of corpora in our experiments, its benefit is limited particularly by two factors: (1) the state-of-the-art performance on RST discourse parsing; and (2) domain mismatch between the training corpus for a discourse parser and the domain where the discourse parser is used.", 
        "186": "For the first factor, discourse parsing is still an active research topic in NLP, and may yet improve.", 
        "187": "The second factor suggests exploring domain adaptation methods or even direct discourse annotation for genres of interest.", 
        "188": "7 Related Work  Early work on text categorization often treated text as a bag of words (e.g., Joachims, 1998; Yang and Pedersen, 1997).", 
        "189": "Representation learning, for example through matrix decomposition (Deerwester et al., 1990) or latent topic variables (Ramage et al., 2009), has been considered to avoid overfitting in the face of sparse data.", 
        "190": "The assumption that all parts of a text should influence categorization equally persists even as more powerful representation learners are considered.", 
        "191": "Zhang et al.", 
        "192": "(2015) treat a text as a sequence of characters, proposing to a deep convolutional neural network to build text representation.", 
        "193": "Xiao and Cho (2016) extended that architecture by inserting a recurrent neural network layer between the convolutional layer and the classification layer.", 
        "194": "In contrast, our contributions follow Ko et al.", 
        "195": "(2004), who sought to weight the influence of different parts of an input text on the task.", 
        "196": "Two works that sought to learn the importance of sentences in a document are Yessenalina et al.", 
        "197": "(2010) and Yang et al.", 
        "198": "(2016).", 
        "199": "The former used a latent variable for the informativeness of each sentence, and the latter used a neural network to learn an attention function.", 
        "200": "Neither used any linguistic bias, relying only on task supervision to discover the latent variable distribution or attention function.", 
        "201": "Our work builds the neural network directly on a discourse dependency tree, favoring the most central EDUs over the others but giving the model the ability to overcome this bias.", 
        "202": "Another way to use linguistic information was\npresented by Yogatama and Smith (2014), who used a bag-of-words model.", 
        "203": "The novelty in their approach was a data-driven regularization method that encouraged the model to collectively ignore groups of features found to coocur.", 
        "204": "Most related to our work is their \u201csentence regularizer,\u201d which encouraged the model to try to ignore training-set sentences that were not informative for the task.", 
        "205": "Discourse structure was not considered.", 
        "206": "Discourse for sentiment analysis.", 
        "207": "Recently, discourse structure has been considered for sentiment analysis, which can be cast as a text categorization problem.", 
        "208": "Bhatia et al.", 
        "209": "(2015) proposed two discourse-motivated models for sentiment polarity prediction.", 
        "210": "One of the models is also based on discourse dependency trees, but using a handcrafted weighting scheme.", 
        "211": "Our method\u2019s attention mechanism automates the weighting.", 
        "212": "8 Conclusion  We conclude that automatically-derived discourse structure can be helpful to text categorization, and the benefit increases with the accuracy of discourse parsing.", 
        "213": "We did not see a benefit for categorizing legislative bills, a text genre whose discourse structure diverges from that of news.", 
        "214": "These findings motivate further improvements to discourse parsing, especially for new genres.", 
        "215": "Acknowledgments  We thank anonymous reviewers and members of Noah\u2019s ARK for helpful feedback on this work.", 
        "216": "We thank Dallas Card and Jesse Dodge for helping prepare the Media Frames Corpus and the Congressional bill corpus.", 
        "217": "This work was made possible by a University of Washington Innovation Award."
    }, 
    "document_id": "P17-1092.pdf.json"
}
