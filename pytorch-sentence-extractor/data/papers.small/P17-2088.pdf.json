{
    "abstract_sentences": {
        "1": "We show the equivalence of two stateof-the-art models for link prediction/ knowledge graph completion: Nickel et al\u2019s holographic embeddings and Trouillon et al.\u2019s complex embeddings.", 
        "2": "We first consider a spectral version of the holographic embeddings, exploiting the frequency domain in the Fourier transform for efficient computation.", 
        "3": "The analysis of the resulting model reveals that it can be viewed as an instance of the complex embeddings with a certain constraint imposed on the initial vectors upon training.", 
        "4": "Conversely, any set of complex embeddings can be converted to a set of equivalent holographic embeddings."
    }, 
    "body_sentences": {
        "1": "  Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 554\u2013559 Vancouver, Canada, July 30 - August 4, 2017. c\u00a92017 Association for Computational Linguistics\nhttps://doi.org/10.18653/v1/P17-2088  1 Introduction  Recently, there have been efforts to build and maintain large-scale knowledge bases represented in the form of a graph (knowledge graph) (Auer et al., 2007; Bollacker et al., 2008; Suchanek et al., 2007).", 
        "2": "Although these knowledge graphs contain billions of relational facts, they are known to be incomplete.", 
        "3": "Knowledge graph completion (KGC) (Nickel et al., 2015) aims at augmenting missing knowledge in an incomplete knowledge graph automatically.", 
        "4": "It can be viewed as a task of link prediction (Liben-Nowell and Kleinberg, 2003; Hasan and Zaki, 2011) studied in the field of statistical relational learning (Getoor and Taskar, 2007).", 
        "5": "In recent years, methods based on vector embeddings of graphs have been actively pursued as a scalable approach to KGC (Bordes et al., 2011; Socher et al., 2013; Guu et al., 2015; Yang et al., 2015; Nickel et al., 2016; Trouillon et al., 2016b).", 
        "6": "In this paper, we investigate the connection\nbetween two models of graph embeddings that have emerged along this line of research: The holographic embeddings (Nickel et al., 2016) and the complex embeddings (Trouillon et al., 2016b).", 
        "7": "These models are simple yet achieve the current state-of-the-art performance in KGC.", 
        "8": "We begin by showing that holographic embeddings can be trained entirely in the frequency domain induced by the Fourier transform, thereby reducing the time needed to compute the scoring function from O(n log n) to O(n), where n is the dimension of the embeddings.", 
        "9": "The analysis of the resulting training method reveals that the Fourier transform of holographic embeddings can be regarded as an instance of the complex embeddings, with a specific constraint (viz.", 
        "10": "conjugate symmetry property) cast on on the initial values.", 
        "11": "Conversely, we also show that every set of complex embeddings has a set of holographic embeddings (with real vectors) that is equivalent, in the sense that their scoring functions are equal up to scaling.", 
        "12": "2 Preliminaries  Let i denote the imaginary unit, R be the set of real values, and C the set of complex values.", 
        "13": "We write [v] j to denote the jth component of vector v. A superscript T (e.g., vT) represents vector/matrix transpose.", 
        "14": "For a complex scalar z, vector z, and matrix Z, z, z, and Z represent their complex conjugate, and Re(z), Re(z), and Re(Z) denote their real parts, respectively.", 
        "15": "Let x = [x0 \u00b7 \u00b7 \u00b7 xn\u22121]T \u2208 Rn and y = [y0 \u00b7 \u00b7 \u00b7 yn\u22121]T \u2208 Rn.", 
        "16": "Note that the vector indices start from 0 for notational convenience.", 
        "17": "The circular convolution of x and y, denoted by x \u2217 y, is\n554\ndefined by\n[x \u2217 y] j = n\u22121\u2211\nk=0\nx[( j\u2212k) mod n]yk, (1)\nwhere mod denotes modulus.", 
        "18": "Likewise, circular correlation x ?", 
        "19": "y is defined by\n[x ?", 
        "20": "y] j = n\u22121\u2211\nk=0\nx[(k\u2212 j) mod n]yk.", 
        "21": "(2)\nWhile circular convolution is commutative, circular correlation is not; i.e., x \u2217 y = y \u2217 x, but x ?", 
        "22": "y , y ?", 
        "23": "x in general.", 
        "24": "As it can be verified with Eqs.", 
        "25": "(1) and (2), x ?", 
        "26": "y = flip(x) \u2217 y, where flip(x) = [xn\u22121 \u00b7 \u00b7 \u00b7 x0]T is a vector obtained by arranging the components of x in reverse.", 
        "27": "For n-dimensional vectors, naively computing circular convolution/correlation by Eqs.", 
        "28": "(1) and (2) requires O(n2) multiplications.", 
        "29": "However, we can take advantage of the Fast Fourier Transform (FFT) algorithm to accelerate the computation: For circular convolution, first compute the discrete Fourier transform (DFT) of x and y, and then compute the inverse DFT of their elementwise vector product, i.e.,\nx \u2217 y = F\u22121(F(x) F(y)),\nwhere F : Rn \u2192 Cn and F\u22121 : Cn \u2192 Rn respectively denote the DFT and inverse DFT, and denotes the elementwise product.", 
        "30": "DFT and inverse DFT can be computed in O(n log n) time with the FFT algorithm, and thus the computation time for circular convolution is also O(n log n).", 
        "31": "The same can be said of circular correlation.", 
        "32": "Since F(flip(x)) = F(x), we have\nx ?", 
        "33": "y = F\u22121(F(x) F(y)).", 
        "34": "(3)\nBy analogy to how the Fourier transform is used in signal processing, the original real space Rn is called the \u201ctime\u201d domain, and the complex space Cn where DFT vectors reside is called the \u201cfrequency\u201d domain.", 
        "35": "3 Holographic embeddings for knowledge graph completion    3.1 Knowledge graph completion  Let E and R be the finite sets of entities and (binary) relations over entities, respectively.", 
        "36": "For each relation r \u2208 R and each pair s, o \u2208 E of entities,\nwe are interested in whether r(s, o) holds1 or not; we write r(s, o) = +1 if it holds, and r(s, o) = \u22121 if not.", 
        "37": "To be precise, given a training set D = R \u00d7 E \u00d7 E \u00d7 {\u22121,+1} such that (r, s, o, y) \u2208 D indicates y = r(s, o), our task is to design a scoring function f : R \u00d7 E \u00d7 E \u2192 R such that for each of the triples (r, s, o) not observed in D, function f should give a higher value if r(s, o) = +1 is more likely, and a smaller value for those that are less likely.", 
        "38": "If necessary, f (r, s, o) can be converted to probability by P[r(s, o) = +1] = \u03c3( f (r, s, o)), where \u03c3 : R\u2192 (0, 1) is a sigmoid function.", 
        "39": "Dataset D can be regarded as a directed graph in which nodes represent entities E and edges are labeled by relations R. Thus, the task is essentially that of link prediction (Liben-Nowell and Kleinberg, 2003; Hasan and Zaki, 2011).", 
        "40": "Often, it is also called knowledge graph completion.", 
        "41": "3.2 Holographic embeddings (HolE)  Nickel et al.", 
        "42": "(2016) proposed holographic embeddings (HolE) for knowledge graph completion.", 
        "43": "Using training data D, this method learns the vector embeddings ek \u2208 Rn of entities k \u2208 E and the embeddings wr \u2208 Rn of relations r \u2208 R. The score for triple (r, s, o) is then given by\nfHolE(r, s, o) = wr \u00b7 (es ?", 
        "44": "eo).", 
        "45": "(4)\nEq.", 
        "46": "(4) can be evaluated in time O(n log n) if es?eo is computed by Eq.", 
        "47": "(3).", 
        "48": "4 Spectral training of HolE  To compute the circular correlation in the scoring function of Eq.", 
        "49": "(4) efficiently, Nickel et al.", 
        "50": "(2016) used Eq.", 
        "51": "(3) in Section 2 and FFT.", 
        "52": "In this section, we extend this technique further, and con-\n1Depending on the context, letter r is used either as an index to an element in R or the binary relation it signifies.", 
        "53": "sider training HolE solely in the frequency domain.", 
        "54": "That is, real-valued embeddings ek,wr \u2208 Rn in the original \u201ctime\u201d domain are abolished, and instead we train their DFT counterparts \u03b5k = F(ek) \u2208 Cn and \u03c9k = F(wr) \u2208 Cn in the frequency domain.", 
        "55": "This formulation eliminates the need of FFT and inverse FFT, which are the major computational bottleneck in HolE.", 
        "56": "As a result, Eq.", 
        "57": "(4) can be computed in time O(n) directly from \u03b5k and \u03c9k.", 
        "58": "Indeed, equivalent counterparts in the frequency domain exist for not only convolution/correlation but all other computations needed for HolE: scalar multiplication, summation (needed when vectors are updated by stochastic gradient descent), and dot product (used in Eq.", 
        "59": "(4)).", 
        "60": "The frequencydomain equivalents for these operations are summarized in Table 1.", 
        "61": "All of these can be performed efficiently (in linear time) in the frequency domain.", 
        "62": "In particular, the following relation holds for the dot product between any \u201ctime\u201d vectors x, y \u2208 Rn.", 
        "63": "x \u00b7 y = 1 n F(x) \u00b7 F(y), (5)\nwhere the dot product on the right-hand side is the complex inner product defined by a \u00b7 b = aTb.", 
        "64": "Eq.", 
        "65": "(5) is known as Parseval\u2019s theorem (also called the power theorem in (Smith, 2007)), and it states that dot products in two domains are equal up to scaling.", 
        "66": "After embeddings \u03b5k,\u03c9r \u2208 Cn are learned in the frequency domain, their time-domain counterparts ek = F\u22121(\u03b5k) and wr = F\u22121(\u03c9r) can be recovered if needed, but this is not required as far as computation of the scoring function is concerned.", 
        "67": "Thanks to Parseval\u2019s theorem, Eq.", 
        "68": "(4) can be directly computed from the frequency vectors \u03b5k,\u03c9r \u2208 Cn by\nfHolE(r, s, o) = 1 n \u03c9r \u00b7 (\u03b5s \u03b5o).", 
        "69": "(6)  4.1 Conjugate symmetry of spectral components  A complex vector \u03be = [\u03be0 \u00b7 \u00b7 \u00b7 \u03ben\u22121]T \u2208 Cn is said to be conjugate symmetric (or Hermitian) if \u03be j = \u03be[(n\u2212 j) mod n] for j = 0, .", 
        "70": ".", 
        "71": ".", 
        "72": ", n \u2212 1, or, in other words, if it can be written in the form\n\u03be =  [ \u03be0 \u03b3 flip(\u03b3) ]T , if n is odd,\n[ \u03be0 \u03b3 \u03ben/2 flip(\u03b3) ]T , if n is even,\nfor some \u03b3 \u2208 Cdn/2e\u22121 and \u03be0, \u03ben/2 \u2208 R. The DFT F(x) is conjugate symmetric if and only if x is a real vector.", 
        "73": "Thus, maintaining conjugate symmetry of \u201cfrequency\u201d vectors is the key to ensure their \u201ctime\u201d counterparts remain in real space.", 
        "74": "Below, we verify that this property is indeed preserved with stochastic gradient descent.", 
        "75": "Moreover, conjugate symmetry provides a sufficient condition under which dot product takes a real value.", 
        "76": "It also has implications on space requirement.", 
        "77": "These topics are covered in the rest of this section.", 
        "78": "4.2 Vector initialization and update in frequency domain  Typically, at the beginning of training HolE, each individual embedding is initialized by a random vector.", 
        "79": "When we train HolE in the frequency domain, we could first generate a random real vector, regard them as a HolE vector in the time domain, and compute its DFT as the initial value in the frequency domain.", 
        "80": "An alternative, easier approach is to directly generate a random complex vector that is conjugate symmetric, and use it as the initial frequency vector.", 
        "81": "This guarantees the inverse DFT to be a real vector, i.e., there exists a valid corresponding image in the time domain.", 
        "82": "Given a training set D (see Section 3.1), HolE is trained by minimizing the following objective function over parameter matrix \u0398 = [e1 \u00b7 \u00b7 \u00b7 e|E | w1 \u00b7 \u00b7 \u00b7w|R|] \u2208 Rn\u00d7(|E |+|R|):\n\u2211\n(r,s,o,y)\u2208D log{1+exp(\u2212y fHolE(r, s, o))}+\u03bb||\u0398||2F (7)\nwhere \u03bb \u2208 R is the hyperparameter controlling the degree of regularization, and \u2016 \u00b7 \u2016F denotes the Frobenius norm.", 
        "83": "In our version of spectral training of HolE, the parameters matrix consists of frequency vectors \u03b5k and \u03c9r instead of ek and wr, i.e., \u0398 = [\u03b51 \u00b7 \u00b7 \u00b7 \u03b5|E | \u03c91 \u00b7 \u00b7 \u00b7\u03c9|R|] \u2208 Cn\u00d7(|E |+|R|).", 
        "84": "Let us discuss the stochastic gradient descent (SGD) update with respect to these frequency vectors.", 
        "85": "In particular, we are interested in whether conjugate symmetry of vectors is preserved by the update.", 
        "86": "Suppose vectors \u03c9r, \u03b5s, \u03b5o are conjugate symmetric.", 
        "87": "Neglecting the contribution from the regularization term2 in Eq.", 
        "88": "(7), we see that in\n2It can be easily verified that the contribution from the regularization term to SGD update do not violate conjugate symmetry.", 
        "89": "an SGD update step, \u03b1\u2202 fHoLE/\u2202\u03c9r, \u03b1\u2202 fHoLE/\u2202\u03b5s, and \u03b1\u2202 fHoLE/\u2202\u03b5o are respectively subtracted from \u03c9r, \u03b5s, \u03b5o, where \u03b1 \u2208 R is a factor not depending on these parameters.", 
        "90": "Noting the equalities\nwr \u00b7 (es ?", 
        "91": "eo) = es \u00b7 (wr ?", 
        "92": "eo) = eo \u00b7 (wr \u2217 es) (see (Nickel et al., 2016, Eq.", 
        "93": "(12), p. 1958)) and their frequency counterparts\n\u03c9r \u00b7 (\u03b5s \u03b5o) = \u03b5s \u00b7 (\u03c9r \u03b5o) = \u03b5o \u00b7 (\u03c9r \u03b5s), obtained through the translation of Table 1, we can derive\n\u2202 fHolE \u2202\u03c9r\n= \u03b5s \u03b5o, \u2202 fHolE \u2202\u03b5s\n= \u03c9r \u03b5o, \u2202 fHolE \u2202\u03b5o = \u03c9r \u03b5s.", 
        "94": "As seen from above, conjugation, scalar multiplication, summation, and elementwise product are used in the SGD update.", 
        "95": "And it is straightforward to verify that all these operations preserve conjugate symmetry.", 
        "96": "It follows that if \u03c9r, \u03b5s, \u03b5o are initially conjugate symmetric, they will remain so during the course of training, which assures that the inverse DFTs of the learned embeddings are real vectors.", 
        "97": "4.3 Real-valued dot product  In the scoring function of HolE (Eq.", 
        "98": "(4)), dot product is used for generating a real-valued \u201cscore\u201d out of two vectors, wr and es eo.", 
        "99": "Likewise, in Eq.", 
        "100": "(6), the dot product is applied to \u03c9r and \u03b5s \u03b5o, which are complex-valued.", 
        "101": "However, provided that the conjugate symmetry of these vectors is maintained, their dot product is always real.", 
        "102": "This follows from Parseval\u2019s theorem; the inverse DFTs of these frequency vectors are real, and thus their dot product is also real.", 
        "103": "Therefore, the dot product of the corresponding frequency vectors is real as well, according to Eq.", 
        "104": "(5).", 
        "105": "4.4 Space requirement  A general complex vector \u03be \u2208 Cn can be stored in memory as 2n floating-point numbers, i.e., one each for the real and imaginary part of a component.", 
        "106": "In our spectral representation of HolE, however, the first bn/2c components suffice to specify the frequency vector \u03be, since the vector is conjugate symmetric.", 
        "107": "Moreover, \u03be0 (and \u03ben/2 if n\nis even) are real values.", 
        "108": "Thus, a spectral representation of HolE can be specified with exactly n floating-point numbers, which can be stored in the same amount of memory as needed by the original HolE.", 
        "109": "5 Relation to Trouillon et al.\u2019s complex embeddings    5.1 Complex embeddings (ComplEx)  Trouillon et al.", 
        "110": "(2016b) proposed a model of embedding-based knowledge graph completion, called complex embeddings (ComplEx).", 
        "111": "The objective is similar to Nickel et al.\u2019s; the embeddings ek of entities and wr of relations are to be learned.", 
        "112": "In their model, however, these vectors are complex-valued, and are based on the eigendecomposition of complex matrix Xr = EWrE T that encodes relation r \u2208 R over pairs of entities, where Xr \u2208 C|E |\u00d7|E |, E = [e1, .", 
        "113": ".", 
        "114": ".", 
        "115": ", e|E |]T \u2208 C|E |\u00d7n, and Wr = diag(wr) \u2208 Cn\u00d7n is a diagonal matrix (with diagonal elements wr \u2208 Cn).", 
        "116": "In practice, Xr needs to be a real matrix, because its (r, s)component must define the score for r(s, o).", 
        "117": "To this end, Trouillon et al.", 
        "118": "simply extracted the real part; i.e., Xr = Re(EWrE T ).", 
        "119": "Trouillon et al.", 
        "120": "(2016a) advocated this approach, by showing that any real matrix Xr can be expressed in this form.", 
        "121": "With this formulation, the score for triple (r, s, o) is given by\nfComplEx(r, s, o) = Re  n\u22121\u2211\nj=0\n[wr] j[es] j[eo] j  .", 
        "122": "(8)  5.2 Equivalence of holographic and complex embeddings  Now let us rewrite Eq.", 
        "123": "(8).", 
        "124": "Noting the definition of complex dot product, i.e., a \u00b7 b = aTb, we have\nn\u22121\u2211\nj=0\n[wr] j[es] j[eo] j = (es eo)Twr\n= (es eo) \u00b7 wr (\u2235 a \u00b7 b = aTb) = (es eo) \u00b7 wr = wr \u00b7 (es eo) (\u2235 a \u00b7 b = b \u00b7 a)\nand since Re(z) = Re(z),\nRe(wr \u00b7 (es eo)) = Re(wr \u00b7 (es eo)).", 
        "125": "Thus, Eq.", 
        "126": "(8) can be written as\nfComplEx(r, s, o) = Re ( wr \u00b7 (es eo)) .", 
        "127": "(9)\nHere, a marked similarity is noticeable between Eq.", 
        "128": "(9) and Eq.", 
        "129": "(6), the scoring function of our spectral version of HolE (spectral HolE); ComplEx extracts the real part of complex dot product, whereas in the spectral HolE, dot product is guaranteed to be real because all embeddings satisfy conjugate symmetry.", 
        "130": "Indeed, Eq.", 
        "131": "(6) can be equally written as\nfHolE(r, s, o) = 1 n Re ( \u03c9r \u00b7 (\u03b5s \u03b5o)) .", 
        "132": "(10)\nalthough the operator Re(\u00b7) in this formula is redundant, since the inner product is guaranteed to be real-valued.", 
        "133": "Nevertheless, Eq.", 
        "134": "(10) elucidates the fact that the spectral HolE can be viewed as an instance of ComplEx, with the embeddings constrained to be conjugate symmetric to make the inner product in Eq.", 
        "135": "(10) real-valued.", 
        "136": "Conversely, given a set of complex embeddings for entities and relations, we can construct their equivalent holographic embeddings, in the sense that fComplEx(r, s, o) = c fHolE(r, s, o) for every r, s, o, where c > 0 is a constant.", 
        "137": "For each ndimensional complex embeddings x \u2208 {ek}k\u2208E \u222a {wr}r\u2208R \u2282 Cn computed by ComplEx, we make a corresponding HolE h(x) \u2208 R2n+1 as follows: For a given complex embedding x = [x0 \u00b7 \u00b7 \u00b7 xn\u22121] \u2208 Cn, first compute s(x) \u2208 C2n+1 by\ns(x) = [ 0 x0 \u00b7 \u00b7 \u00b7 xn\u22121 xn\u22121 \u00b7 \u00b7 \u00b7 x0 ]T\n= [ 0 x flip(x) ]T (11)\nand then define h(x) = F\u22121(s(x)).", 
        "138": "Since s(x) is conjugate symmetric, h(x) is a real vector.", 
        "139": "To verify if this conversion defines an equivalent scoring function for any triple (r, s, o), let us now suppose complex embeddings wr \u2208 Cn and es, eo \u2208 Cn are given.", 
        "140": "Since we regard real vectors h(wr), h(es), h(eo) \u2208 R2n+1 as the holographic embeddings of r, s and o, respectively, the HolE score for the triple (r, s, o) is given as\nfHolE(r, s, o)\n= h(wr) \u00b7 (h(es) ?", 
        "141": "h(eo)) =\n1 n s(wr) \u00b7 (s(es) s(eo)) (\u2235 Eq.", 
        "142": "(6))\n= 1 n s(wr) \u00b7\n[ 0 es eo flip(es eo) ]T (\u2235 Eq.", 
        "143": "(11))\n= 1 n\n[ 0 wr flip(wr) ]T \u00b7 [ 0 es eo flip(es eo) ]T\n= 1 n\n( wr \u00b7 (es eo) + flip(wr) \u00b7 flip(es eo) )\n= 1 n\n( wr \u00b7 (es eo) + wr \u00b7 (es eo) )\n= 1 n\n( wr \u00b7 (es eo) + wr \u00b7 (es eo) )\n= 2 n Re ( wr \u00b7 (es eo)) = 2 n fComplEx(r, s, o),\nwhich shows that h(\u00b7) (or s(\u00b7)) gives the desired conversion from ComplEx to HolE.", 
        "144": "6 Conclusion  In this paper, we have shown that the holographic embeddings (HolE) can be trained entirely in the frequency domain.", 
        "145": "If stochastic gradient descent is used for training, the conjugate symmetry of frequency vectors is preserved, which ensures the existence of the corresponding holographic embedding in the original real space (time domain).", 
        "146": "Also, this training method eliminates the need of FFT and inverse FFT, thereby reducing the computation time of the scoring function from O(n log n) to O(n).", 
        "147": "Moreover, we have established the equivalence of HolE and the complex embeddings (ComplEx): The spectral version of HolE is subsumed by ComplEx as a special case in which conjugate symmetry is imposed on the embeddings.", 
        "148": "Conversely, every set of complex embeddings can be converted to equivalent holographic embeddings.", 
        "149": "Many systems for natural language processing, such as those for semantic parsing and question answering, benefit from access to information stored in knowledge graphs.", 
        "150": "We plan to further investigate the property of spectral HolE and ComplEx in these applications.", 
        "151": "Acknowledgments  We thank the anonymous reviewers for helpful comments.", 
        "152": "This work was partially supported by JSPS Kakenhi Grants 26730126 and 15H02749."
    }, 
    "document_id": "P17-2088.pdf.json"
}
